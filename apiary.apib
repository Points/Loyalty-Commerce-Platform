HOST: https://na.platform.points.com
---    Points LCP v1 Resources
--- 
<br/>
![Points Logo](http://www.gravatar.com/avatar/a8fcc27c7a8c373bd9cfead3f599ea9d.png) 
## Overview
* see [overview section of voyager wiki](https://github.com/Points/Voyager/wiki) - once overview section is updated copy the content here

## :TODO:'s Against Almost All Resources Below
* :TODO: we're using [OAuth 2.0 MACs](http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02)
so eliminate all the shared secret, public key and private key references in the resources 
     * *:DS I think this one is complete, can we close?*
* :TODO: start describing requests and responses using [JSON Schema](http://json-schema.org/)
    * *:DS This probably will not take place for another seveal weeks*
* :TODO: how does multi-language work? if we think about the account creation process
should the POST to /accounts contain an indication of the account's preferred language
and if this specification doesn't appear then we default to Voyager's default lanaguage?
What resource is used to manage the langugage? Would be a /langs collection
specifying all supported languages and a /langs/default or /defaults/lang or /system-settings/lang
resource make sense? all creds (post account authorization) should be able to do
a GET on /langs/{id} but only creds in the points administrators group should be able
to do a POST on /langs and a PUT & DELETE on /langs/{id}
    * *:DS Please review the modifications made to the Blueprint and also the additional language resource*
---

--
/accounts - Accounts
The accounts resources enable you to create an account and obtain security credentials to
begin using the platform immediately. To get started, simply POST to the /accounts resource
to create your account and obtain your credentials.
 
--
Create an account. 
</br></br> Anyone can create an account.
The only mandatory field is the email field.
Creating your account will return a link to admin-credentials which you can 
start using immediately to develop against the platform.
POST /accounts
> Content-Type: application/json; charset=utf-8
{
    "primaryEmail": "mano@manoscompany.com"
}
< 201
< Location: https://na.platform.points.com/accounts/mano@manoscompany.com
< Content-Location: https://na.platform.points.com/accounts/{id}
< Content-Type: application/json; charset=utf-8
< Content-Length: XXX
{
    "id": "234j4-34j14-pxm134-fhg1234",
    "primary": {
        "name": "",
        "primaryFirstName": "",
        "primaryLastName": "",
        "primaryEmail": "mano@manoscompany.com",
        "primaryPhone": ""
    }
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/{id}"
        },
        "friendly": {
            "href": "https://na.platform.points.com/accounts/mano@manoscompany.com"
        }
        "creds": {
        }
    }
}

Get an account.
GET /accounts/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
}
< 200
< Content-Type: application/json; charset=utf-8
< Content-Length: XXX
{
    "id": "234j4-34j14-pxm134-fhg1234",
    "name": "",
    "primaryFirstName": "",
    "primaryLastName": "",
    "primaryEmail": "mano@manoscompany.com",
    "primaryPhone": ""
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/mano@manoscompany.com",
            "href": "https://na.platform.points.com/accounts/{id}"
        },
        "creds": {
        }
    }
}

Modify an account.
PUT /accounts/{id}
> Content-Type: application/json; charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
    "name": "Mano's Company Modified Name",
    "primaryFirstName": "Mano",
    "primaryLastName": "Partner",
    "primaryEmail": "mano@manoscompany.com",
    "primaryPhone": "4162324576"
}
< 200
< Location: https://na.platform.points.com/accounts/mano@manoscompany.com
< Content-Type: application/json; charset=utf-8
{
    "id": ""
    "name": "Mano's Company Modified Name",
    "primaryFirstName": "Mano",
    "primaryLastName": "Partner",
    "primaryEmail": "mano@manoscompany.com",
    "primaryPhone": "4162324576"
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/mano@manoscompany.com",
            "href": "https://na.platform.points.com/accounts/{id}"
        },
        "creds": {
            "href": "https://na.platform.points.com/accounts/mano@manoscompany.com/458934-234980f-kj234h-kj324kh"
        }
    }
}

Delete an account.
DELETE /accounts/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
}
< 200
{
}

Create Credentials
POST /accounts/{id}/creds
> Content-Type: applicaton/json; charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
}
< 201
< Content-Type: application/json; charset=utf-8
< Location: https://na.platform.points.com/accounts/mano@manoscompany.com/458934-234980f-kj234h-kj324kh
{
    "macKeyIdentifier": "458934234980fkj234hkj324kh",
    "macKey": "933n5-4m1n23-m13nn3-l12TYL",
    "macAlgorithm": "HMAC-SHA1",
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/mano@manoscompany.com/458934-234980f-kj234h-kj324kh"
        }
    }
}

Get all credentials associated with this account.
GET /accounts/{id}/creds
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
{
    [
        {
            "key": "458934-234980f-kj234h-kj324kh",
            "shared-secret": "933n5-4m1n23-m13nn3-l12TYL",
            "status": "active"
            "links": {
                "self": {
                    "href": "https://na.platform.points.com/accounts/{id}/creds/{id}"
                }
            }
        }
    ]
}

Get a specific set of credentials.
GET /accounts/{id}/creds/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
{
    "key": "458934-234980f-kj234h-kj324kh",
    "shared-secret": "933n5-4m1n23-m13nn3-l12TYL",
    "status": "inactive",
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/{id}/creds/{id}"
        }
    }
}

Delete a specific set of credentials.
DELETE /accounts/{id}/creds/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
}
< 200
{
}

Trigger an email to the Accounts Administrator with a link to access the shared-secret for a specific credential.

:DAS: don't understand the above. POST should create a resource. What resource is being created?
</br>My recommendation is:
</br>1/ response to a POST against /accounts is to create an account
and include in the response an initial set of credentials - the credentials
will only be authorized to GET, PUT & DELETE against /accounts/{id} 
and POST against /accounts/{id}/activations
meaning the account has yet to be activated ie. anyone with the credentials
can't yet really do anything except admin their own account
</br>2/ creating an account causes Voyager to send an e-mail to the
e-mail address used in the POST to /accounts - the e-mail will contain
an account activation code
</br>3/ to activate the account (ie. start doing something with the account) POST
/accounts/{id}/activations with the account activation code in the POST's body
</br>4/ as part of servicing the POST to /accounts/{id}/activations the account
will now be activated and can be used to develop in the sandbox
</br>5/ :TODO: think we need to think thru the HTTP status codes POST against /accounts
and GET, PUT & DELETE against /accounts/{id} until an account has been activated - am
thinking there should be a account "status" which is never explicitly shared outside
VOYAGER other than through the HTTP status code - for example, HTTP status code
against /accounts could be 202 (Accepted) and a GET against /accounts/{id} would
return 200 only after the /accounts/{id}/activations resource had been created - what
would the HTTP status code be for a GET against /accounts/{id} where the account
had yet to be activated? could be 404 but PUT and DELETE against the resource
wouldn't really make sense in those cases
POST /accounts/{id}/creds/{id}
> Content-Type: application/json; charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
}
< 201
{
}

--
/apps - Production Applications
--

Searches list of Applications by App Name, Organization, MacID & LP Access

:DAS: don't think we'd search by credentials (aka keys)

:DAS: what is "lpaccess"

:DAS: aren't all applications production? think we should just use the label "/apps - Applicaitons" rather than "/apps - Production Applications"
GET /apps{?apps,org,keyId,lpaccess}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
< Link: <https://na.platform.points.com/accounts/{id}/apps?page=3>, rel="next"; <https://na.platform.points.com/prod-partner/{id}/apps?page=1>, rel="prev";
{
    "lang": "us-en",
    "results": [ 
        {
            "name": "Mano's App",
            "type": "web",
            "links": {
                "self": {
                    "https://na.platform.points.com/accounts/{id}/apps/49282939"
                }
        },
        {
            "name": "Mano's Other App",
            "type": "mobile",
            "links": {
                "self": {
                    "https://na.platform.points.com/accounts/{id}/apps/9872349178"
                }
        }   
    ]
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/{id}/apps{?apps,org,keyId,lpaccess}"
        }
    }
}

Creates an Application
POST /apps
> Content-Type: application/json; charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
    "name": { 
        "us-en": "Mano's App",
        "ca-fr": "Mano's App",
    }
    "termsAndConditons": {
        "us-en": "Long terms and conditions string goes here.",
        "ca-fr": "Termes et conditions Ã©tendues vont ici."
    }
    "type": "web"
}
< 201
< Content-Type: application/json;charset=utf-8
< Location: https://na.platform.points.com/accounts/{id}/apps/49282939
{
[
    {
        "lang": "us-en",
        "name": "Mano's App",
        "type": "web"
        "accessibleLoyaltyPrograms": [
            {
                "name": "US Airways",
                "loyaltyProgram": "https://na.platform/points.com/lps/9834701"
            },
            {
                "name": "Global Rewards",
                "loyaltyId": "https://na.platform/points.com/lps/5678"
            }
        ]
        "termsAndConditions": "Long terms and conditions string goes here."
        "links": {
            "self": { 
                "href": "https://na.platform.points.com/accounts/{id}/apps/49282939"
            }
        }
    },
    {
        "lang": "ca-fr",
        "name": "Mano's App",
        "type": "web"
        "accessibleLoyaltyPrograms": [
            {
                "name": "US Airways",
                "loyaltyProgram": "https://na.platform/points.com/lps/9834701"
            },
            {
                "name": "Global Rewards",
                "loyaltyId": "https://na.platform/points.com/lps/5678"
            }
        ]
        "termsAndConditions": "Termes et conditions Ã©tendues vont ici."
        "links": {
            "self": { 
                "href": "https://na.platform.points.com/accounts/{id}/apps/49282939"
            }
        }
    }
    
}

:DAS: debug - can't see why the "}" above is there.

Provides a set of application information that can be utilized
by the application for various functions.  
GET /apps/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
< Accepted-Lang: us-en
{
    "lang": "us-en",
    "name": "Mano's App",
    "type": "web"
    "accessibleLoyaltyPrograms": [
    {
        "name": "US Airways",
        "loyaltyProgram": "https://na.platform/points.com/lps/9834701"
    },
    {
        "name": "Global Rewards",
        "loyaltyId": "https://na.platform/points.com/lps/5678"
    }
    ]
    "termsAndConditions": "Long terms and conditions string goes here."
    "links": {
        "self": { 
            "href": "https://na.platform.points.com/accounts/{id}/apps/49282939"
        }
    }
}

Create an Application Credential

:DAS: this should be called credentials not keys
POST /apps/{id}/creds
> Content-Type: application/json; charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
    "status": "active",
}
< 201
< Content-Type: application/json;charset=utf-8
< Location: https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh
{
    "status": "active",
    "publicKey": "458934-234980f-kj234h-kj324kh",
    "sharedSecret": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh/SharedSecret"
    "links": {
        "self": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh",
        "app": "https://na.platform.points.com/accounts/{id}/apps/49282939"
    }
}

Retrieve details about an App Key
GET /apps/{id}/creds/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
{
    "status": "active",
    "publicKey": "458934-234980f-kj234h-kj324kh",
    "sharedSecret": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh/SharedSecret"
    "links": {
        "self": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh",
        "app": "https://na.platform.points.com/accounts/{id}/apps/49282939"
    }
}

Initiates an auto-generated email to send the SharedSecret to Application Owner
:DAS: I don't understand this.
GET /apps/{id}/keys/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
{
    "links": {
        "creds": {
            "href": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh"
        }
    }
}

Retrieve all credentials associted to an App
GET /apps/{id}/creds
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json; charset=utf-8
< Link: <https://na.platform.points.com/accounts/{id}/apps/{id}/creds?page=2>, rel="next"
{
   "results": [
       {
           "status": "deactivated"
           "link": {
               "self": {
                   "href": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh"
               }
           }
       },
       {
           "status": "active"
           "link": {
               "self": {
                   "href": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds/458934-234980f-kj234h-kj324kh"
               }
           }
       },
    ],
    "links": {
        "self": {
            "href": "https://na.platform.points.com/accounts/{id}/apps/{id}/creds"
        }
    }
}

--
/lps - Loyalty Programs
The Loyalty Programs set of resources enable an Application to gather 
necessary information about a Loyalty Partner they want to transact against.  
Additionally, an application may need to utilize specific marketing assets 
for a Loyalty Program such as Logos.


--
Get all LPS that my credentials has access to.  {id} should be replaced with 
public key.
</br>    :DS I would suggest replacing ID with a parameter passed such as /lps/access?cred={id}
GET /lps/access/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Accepted-Lang: us-en
< 200
< Content-Type: application/json; charset=utf-8
{
    "lang": "us-en",
    [
        {
            "name": "US Airways",
            "partnerID": "usar",
            "mode": "sandbox",
            "supportedLangs": ["us-en","ca-fr", "ca-en"],
            "links": {
                "self": {
                    "href": "https://sandbox.na.platform.points.com/lps/294857"
                }
                "authentication-requirements": {
                    "href": "https://sandbox.na.platform.points.com/lps/294857/authentication-requirements"
                }
        },
        {
            "name": "Wyndham",
            "partnerID": "wynd",
            "mode": "sandbox",
            "supportedLangs": ["us-en"],
            "links": {
                "self": {
                    "href": "https://sandbox.na.platform.points.com/lps/91284"
                }
                "authentication-requirements": {        
                    "href": "https://sandbox.na.platform.points.com/lps/91284/authentication-requirements"
                }
        },
        {
            "name": "Global Rewards",
            "partnerID": "glbl",
            "mode": "sandbox",
            "supportedLangs": ["ca-fr","us-en"],
            "links": {
                "self": {
                    "href": "https://sandbox.na.platform.points.com/lps/212389"
                }
                "authentication-requirements": {
                    "href": "https://sandbox.na.platform.points.com/lps/212389/authentication-requirements"
                }
            }
        }
    ]
}

Search Registered Loyalty Programs
GET /lps{?lps*,partnerName,routing,appID}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Accepted-Lang: us-en
< 200
< Content-Type: application/json;charset=utf-8
< Link: <https://na.platform.points.com/lps?page=3>, rel="next"; <https://na.platform.points.com/lps?page=2>,  rel="prev";
{
    "lang": "us-en",
    "results": [ 
       {
            "name": "US Airways",
            "partnerID": "usar",
            "mode": "sandbox",
            "supportedLangs": ["us-en","ca-fr", "ca-en"],
            "links": {
                "self": {
                    "href": "https://sandbox.na.platform.points.com/lps/294857"
                }
                "authentication-requirements": {
                    "href": "https://sandbox.na.platform.points.com/lps/294857/authentication-requirements"
                }
        },
        {
            "name": "Wyndham",
            "partnerID": "wynd",
            "mode": "sandbox",
            "supportedLangs": ["us-en"],
            "links": {
                "self": {
                    "href": "https://sandbox.na.platform.points.com/lps/91284"
                }
                "authentication-requirements": {        
                    "href": "https://sandbox.na.platform.points.com/lps/91284/authentication-requirements"
                }
        },
    ],
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps{?lps*,partnerName,routing,appID}"
        }
    }
}

Register a new LPS in the Platform
POST /lps
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type:applicaton/json;charset=utf-8
{
    "partnerName": {
        "us-en": "Wyndham",
        "ca-fr": "Wyndham"
    }
    "partnerID": "wynd",
    "routing": "pie",
    "domainName": "Wyndham_PointsCore",
    "routingName": "Wyndham"
}
< 201
< Content-Type: application/json;charset=utf-8
< Location: https://na.platform.points.com/lps/14985736
{
    "partnerName": {
        "us-en": "Wyndham",
        "ca-fr": "Wyndham"
    }
    "partnerID": "wynd",
    "routing": "pie",
    "domainName": "Wyndham_PointsCore",
    "routingName": "Wyndham"
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/14985736"
        }
    }
}

Returns LPS configuration information and a list of allowed Applications.
GET /lps/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Accepted-Lang: us-en
< 200
< Content-Type: application/json;charset=utf-8
{
"lang": "us-en",
    {
    "partnerName": "Wyndham",
    "partnerID": "wynd",
    "routing": "pie",
    "domainName": "Wyndham_PointsCore",
    "routingName": "Wyndham"
    "supportedLangs": ["us-en","ca-en"],
    "allowedApps": [
        {
            "name": "Mano's App",
            "type": "web",
            "links": {
                "self": {
                    "https://na.platform.points.com/accounts/{id}/apps/49282939"
                }
        },
        {
            "name": "Mano's Other App",
            "type": "mobile",
            "links": {
                "self": {
                    "https://na.platform.points.com/accounts/{id}/apps/9872349178"
                }
        }   
        ]
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/1493848"
        }
        "marketing-assets": {
            "href": "https://na.platform.points.com/lps/1493848/marketing-assets"
        }
        "authentication-requirements": {
            "href": "https://na.platform.points.com/lps/1493848/authentication-requirements"
        }
    }
    }
}

Returns a list of marketing terms & assets (logos etc.) that the application can use to 
identify the loyalty program within the application.  Also is a set of marketing assets 
for Points (eg. Powered by points logo)  Assets are links to web based resources.
<br>
If an LP is not found, return a 404 not found.

GET /lps/{lpID}/marketing-assets
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Accepted-Lang: all
< 200
< Content-Type: application/json;charset=utf-8
{
[
    {
    "lang": "us-en",
    "marketing-assets": 
    [
            {
            "mimetype":"image/jpeg",
            "description":"First Logo",
            "name":"USAirways Logo 1",
            "filename":"http://cms.platform.points.com/lps/1234234/us250w_132h.jpg",
            "asset_type":"LOGO",
            "dimensions":
                {
                "width":"250",
                "height":"132"
                }
            },
            {
            "mimetype":"image/jpeg",
            "description":"Second Logo",
            "name":"USAirways Logo 2",
            "filename":"http://cms.platform.points.com/lps/1234234/us_ai_335w_150h.jpg",
            "asset_type":"LOGO",
            "dimensions":
                {
                "width":"335",
                "height":"150"
                }
            }
    ],
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}"
            }
        }
    },
    {
    "lang": "ca-fr",
    "marketing-assets": 
    [
            {
            "mimetype":"image/jpeg",
            "description":"French Logo 1",
            "name":"USAirways Logo 1",
            "filename":"http://cms.platform.points.com/lps/1234234/us250w_132h.jpg",
            "asset_type":"LOGO",
            "dimensions":
                {
                "width":"250",
                "height":"132"
                }
            },
            {
            "mimetype":"image/jpeg",
            "description":"French Version Second Logo",
            "name":"USAirways Logo 2",
            "filename":"http://cms.platform.points.com/lps/1234234/us_ai_335w_150h.jpg",
            "asset_type":"LOGO",
            "dimensions":
                {
                "width":"335",
                "height":"150"
                }
            }
    ],
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}"
            }
        }
    }
]
}

Add an authentication requirement
POST /lps/{lpID}/authentication-requirements
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
    "type": "identificationFields",
    "fieldKey": "member_first_name",
    "validation": "^[A-Za-z]{3,15}$",
    "name": {
        "us-en": "First Name"
    }
    "description": {
        "us-en": "Member's First Name"
    }
}
< 201
{
    "type": "identificationFields",
    "fieldKey": "member_first_name",
    "validation": "^[A-Za-z]{3,15}$",
    "name": {
        "us-en": "First Name"
    }
    "description": {
        "us-en": "Member's First Name"
    }
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}/authentication-requirements/9876"
        }
    }
}

List the authentication fields required by a specific Loyalty Program.
<br> If a LP is not found, return a 404.
GET /lps/{lpID}/authentication-requirements
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Accepted-Lang: us-en
< 200
< Content-Type: application/json;charset=utf-8
{
    "identificationFields":
    [
        {
            "fieldKey": "member_first_name",
            "name": "First Name",
            "validation": "^[A-Za-z]{3,15}$",
            "description": "Field description"
            "links": {
                "self": {
                    "href": "https://na.platform.points.com/lps/{lpID}/authentication-requirements/9876"
                    }
                }
        },
        {
            "fieldKey": "member_last_name",
            "name": "Last Name",
            "validation": "^[A-Za-z]{3,15}$",
            "description": "Field description"
            "links": {
                "self": {
                    "href": "https://na.platform.points.com/lps/{lpID}/authentication-requirements/46724"
                    }
                }
        }
    ]
    "authenticationFields":
    [
        {
            "fieldKey": "member_password",
            "name": "Password",
            "description": "Password"
            "validation": "^[A-Za-z0-9]{8,16}$"
            "links": {
                "self": {
                    "href": "https://na.platform.points.com/lps/{lpID}/authentication-requirements/9876"
                    }
                }
        }
        ]
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}/authentication-requirements"
        }
        "member-validations":
        {
            "href": "https://na.platform.points.com/lps/{lpID}/member-validations"
        }
    }
}

Create a Member Validation
</br>If invalid fields are passed, return a 400 (Bad Request)
</br>If LP Service is unavailable for any reason, return a 503 (Service Unavailable)

POST /lps/{lpID}/member-validations
> Content-Type: application/json;charset=utf-8
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
{
    "firstName": "Daniel",
    "lastName": "Shapiro",
    "email": "daniel.shapiro@points.com",
    "password": "password",
}
< 201
< Content-Type: application/json;charset=utf-8
< Location: https://na.platform.points.com/lps/{lpID}/member-validations/948202349
{
    "expires": "2013-04-11T12:43:00Z",
    "balance": 23000,
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}/member-validations/948202349"
        }
    }
}

Validate a Member Validation
GET /lps/{lpID}/member-validations/{mvID}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json;charset=utf-8
{
    "expires": "2013-04-11T12:43:00Z",
    "balance": 23000
    "links": {
        "self": {
            "href": "https://na.platform.points.com/lps/{lpID}/member-validations/948202349"
        }
    }
}

--
/orders Orders - NOT UP TO DATE
--
Create a new order & return the orderID.
POST /orders
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type: application/json
{
}
< 202
< Content-Type: application/json
{
    "orderID: "/orders/12345"
}

Retrieve Transactions associated with an OrderID
GET /orders/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 200
< Content-Type: application/json
{
    transactions: [id1,id2,id3,id4]
}

Deduct points from an account.
POST /orders/{id}/points-out
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type: application/json
{
    "mv": "/lps/12345/member-validations/78348927"
    "currency": "sky"
    "amount": 24300
}
< 202
< Content-Type: application/json
{
    "message": "success."
    "transactionID": "/orders/12345/9293874"
}

Add points to an account.
POST /orders/{id}/points-in
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type: application/json
{
    "mv": "/lps/12345/member-validations/78348927"
    "currency": "sky"
    "amount": 220
}
< 202
< Content-Type: application/json
{
    "message": "success."
    "transactionId": "/orders/12345/141341341"
}

Perform an AUTH Against a Credit Card
POST /orders/{id}/auth
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type: application/json
{
    "mv": "/lps/12345/member-validations/78348927"
    "currency": "CAD"
    "amount": 220.34
    "billingInfo": {
        "firstName": "Daniel"
        "lastName": "Shapiro"
        "street": "171 John St."
        "state": "ON"
        "country": "CAN"
        "type": "visa"
        "number": "4563764523789827"
        "exp": "0617"
        "ccv": "431"
    }
}
< 202
< Content-Type: application/json
{
    "message": "success."
    "transactionId": "/orders/12345/3412341235"
}

Perform an CAPTURE Against a Credit Card
POST /orders/{id}/capture
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
> Content-Type: application/json
{
    "authID": "/orders/12345/3412341235"
}
< 202
< Content-Type: application/json
{
    "message": "success."
    "transactionId": "/orders/12345/349013244"
}

Check the status of a transaction
GET /orders/12345/{id}
> Authorization: MAC id="...", ts="...", nonce="...", mac="..."
< 202
< Content-Type: application/json
{
    "message": "success."
    "started": <DATE>
    "completed": <DATE>
}