/**
 * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.
 * Available via the MIT or new BSD license.
 * see: http://github.com/jrburke/almond for details
 */

/*!
 * jQuery JavaScript Library v2.0.3
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-07-03T13:30Z
 */

/*!
 * Sizzle CSS Selector Engine v1.9.4-pre
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2013-06-03
 */

/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT */

// Copyright (C) 2006 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*! fixto - v0.4.0 - 2015-06-08
* http://github.com/bbarakaci/fixto/*/

/*! Computed Style - v0.1.0 - 2012-07-19
    * https://github.com/bbarakaci/computed-style
    * Copyright (c) 2012 Burak Barakaci; Licensed MIT */

/* ========================================================================
 * Bootstrap: scrollspy.js v3.0.3
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2013 Twitter, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */

/*

Copyright (C) 2011 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/

// RequireJS Handlebars template plugin
// http://github.com/jfparadis/requirejs-handlebars
//
// An alternative to http://github.com/SlexAxton/require-handlebars-plugin/blob/master/hbs.js
//
// Using Handlebars Semantic templates at http://handlebarsjs.com
// Using and RequireJS text.js at http://requirejs.org/docs/api.html#text
// @author JF Paradis
// @version 0.0.2
//
// Released under the MIT license
//
// Usage:
//   require(['backbone', 'hbar!mytemplate'], function (Backbone, mytemplate) {
//     return Backbone.View.extend({
//       initialize: function(){
//         this.render();
//       },
//       render: function(){
//         this.$el.html(mytemplate({message: 'hello'}));
//     });
//   });
//
// Configuration: (optional)
//   require.config({
//     hbars: {
//       extension: '.hbar' // default = '.html'
//     }
//   });

/** @license
 * RequireJS plugin for loading Markdown files and converting them into HTML.
 * Author: Miller Medeiros
 * Version: 0.1.1 (2012/02/17)
 * Released under the MIT license
 */

var requirejs,require,define;!function(e){function t(e,t){return y.call(e,t)}function n(e,t){var n,r,a,i,o,s,d,p,l,c,h,u=t&&t.split("/"),m=f.map,g=m&&m["*"]||{};if(e&&"."===e.charAt(0))if(t){for(u=u.slice(0,u.length-1),e=e.split("/"),o=e.length-1,f.nodeIdCompat&&v.test(e[o])&&(e[o]=e[o].replace(v,"")),e=u.concat(e),l=0;l<e.length;l+=1)if(h=e[l],"."===h)e.splice(l,1),l-=1;else if(".."===h){if(1===l&&(".."===e[2]||".."===e[0]))break;l>0&&(e.splice(l-1,2),l-=2)}e=e.join("/")}else 0===e.indexOf("./")&&(e=e.substring(2));if((u||g)&&m){for(n=e.split("/"),l=n.length;l>0;l-=1){if(r=n.slice(0,l).join("/"),u)for(c=u.length;c>0;c-=1)if(a=m[u.slice(0,c).join("/")],a&&(a=a[r])){i=a,s=l;break}if(i)break;!d&&g&&g[r]&&(d=g[r],p=l)}!i&&d&&(i=d,s=p),i&&(n.splice(0,s,i),e=n.join("/"))}return e}function r(t,n){return function(){return l.apply(e,b.call(arguments,0).concat([t,n]))}}function a(e){return function(t){return n(t,e)}}function i(e){return function(t){u[e]=t}}function o(n){if(t(m,n)){var r=m[n];delete m[n],g[n]=!0,p.apply(e,r)}if(!t(u,n)&&!t(g,n))throw new Error("No "+n);return u[n]}function s(e){var t,n=e?e.indexOf("!"):-1;return n>-1&&(t=e.substring(0,n),e=e.substring(n+1,e.length)),[t,e]}function d(e){return function(){return f&&f.config&&f.config[e]||{}}}var p,l,c,h,u={},m={},f={},g={},y=Object.prototype.hasOwnProperty,b=[].slice,v=/\.js$/;c=function(e,t){var r,i=s(e),d=i[0];return e=i[1],d&&(d=n(d,t),r=o(d)),d?e=r&&r.normalize?r.normalize(e,a(t)):n(e,t):(e=n(e,t),i=s(e),d=i[0],e=i[1],d&&(r=o(d))),{f:d?d+"!"+e:e,n:e,pr:d,p:r}},h={require:function(e){return r(e)},exports:function(e){var t=u[e];return"undefined"!=typeof t?t:u[e]={}},module:function(e){return{id:e,uri:"",exports:u[e],config:d(e)}}},p=function(n,a,s,d){var p,l,f,y,b,v,x=[],w=typeof s;if(d=d||n,"undefined"===w||"function"===w){for(a=!a.length&&s.length?["require","exports","module"]:a,b=0;b<a.length;b+=1)if(y=c(a[b],d),l=y.f,"require"===l)x[b]=h.require(n);else if("exports"===l)x[b]=h.exports(n),v=!0;else if("module"===l)p=x[b]=h.module(n);else if(t(u,l)||t(m,l)||t(g,l))x[b]=o(l);else{if(!y.p)throw new Error(n+" missing "+l);y.p.load(y.n,r(d,!0),i(l),{}),x[b]=u[l]}f=s?s.apply(u[n],x):void 0,n&&(p&&p.exports!==e&&p.exports!==u[n]?u[n]=p.exports:f===e&&v||(u[n]=f))}else n&&(u[n]=s)},requirejs=require=l=function(t,n,r,a,i){if("string"==typeof t)return h[t]?h[t](n):o(c(t,n).f);if(!t.splice){if(f=t,f.deps&&l(f.deps,f.callback),!n)return;n.splice?(t=n,n=r,r=null):t=e}return n=n||function(){},"function"==typeof r&&(r=a,a=i),a?p(e,t,n,r):setTimeout(function(){p(e,t,n,r)},4),l},l.config=function(e){return l(e)},requirejs._defined=u,define=function(e,n,r){n.splice||(r=n,n=[]),t(u,e)||t(m,e)||(m[e]=[e,n,r])},define.amd={jQuery:!0}}(),define("almond",function(){}),function(e,t){function n(e){var t=e.length,n=ie.type(e);return ie.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||"function"!==n&&(0===t||"number"==typeof t&&t>0&&t-1 in e)}function r(e){var t=me[e]={};return ie.each(e.match(se)||[],function(e,n){t[n]=!0}),t}function a(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=ie.expando+Math.random()}function i(e,n,r){var a;if(r===t&&1===e.nodeType)if(a="data-"+n.replace(be,"-$1").toLowerCase(),r=e.getAttribute(a),"string"==typeof r){try{r="true"===r?!0:"false"===r?!1:"null"===r?null:+r+""===r?+r:ye.test(r)?JSON.parse(r):r}catch(i){}fe.set(e,n,r)}else r=t;return r}function o(){return!0}function s(){return!1}function d(){try{return G.activeElement}catch(e){}}function p(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function l(e,t,n){if(ie.isFunction(t))return ie.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return ie.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(ke.test(t))return ie.filter(t,e,n);t=ie.filter(t,e)}return ie.grep(e,function(e){return te.call(t,e)>=0!==n})}function c(e,t){return ie.nodeName(e,"table")&&ie.nodeName(1===t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function h(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function u(e){var t=je.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function m(e,t){for(var n=e.length,r=0;n>r;r++)ge.set(e[r],"globalEval",!t||ge.get(t[r],"globalEval"))}function f(e,t){var n,r,a,i,o,s,d,p;if(1===t.nodeType){if(ge.hasData(e)&&(i=ge.access(e),o=ge.set(t,i),p=i.events)){delete o.handle,o.events={};for(a in p)for(n=0,r=p[a].length;r>n;n++)ie.event.add(t,a,p[a][n])}fe.hasData(e)&&(s=fe.access(e),d=ie.extend({},s),fe.set(t,d))}}function g(e,n){var r=e.getElementsByTagName?e.getElementsByTagName(n||"*"):e.querySelectorAll?e.querySelectorAll(n||"*"):[];return n===t||n&&ie.nodeName(e,n)?ie.merge([e],r):r}function y(e,t){var n=t.nodeName.toLowerCase();"input"===n&&qe.test(e.type)?t.checked=e.checked:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}function b(e,t){if(t in e)return t;for(var n=t.charAt(0).toUpperCase()+t.slice(1),r=t,a=Qe.length;a--;)if(t=Qe[a]+n,t in e)return t;return r}function v(e,t){return e=t||e,"none"===ie.css(e,"display")||!ie.contains(e.ownerDocument,e)}function x(t){return e.getComputedStyle(t,null)}function w(e,t){for(var n,r,a,i=[],o=0,s=e.length;s>o;o++)r=e[o],r.style&&(i[o]=ge.get(r,"olddisplay"),n=r.style.display,t?(i[o]||"none"!==n||(r.style.display=""),""===r.style.display&&v(r)&&(i[o]=ge.access(r,"olddisplay",P(r.nodeName)))):i[o]||(a=v(r),(n&&"none"!==n||!a)&&ge.set(r,"olddisplay",a?n:ie.css(r,"display"))));for(o=0;s>o;o++)r=e[o],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?i[o]||"":"none"));return e}function T(e,t,n){var r=$e.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function A(e,t,n,r,a){for(var i=n===(r?"border":"content")?4:"width"===t?1:0,o=0;4>i;i+=2)"margin"===n&&(o+=ie.css(e,n+Je[i],!0,a)),r?("content"===n&&(o-=ie.css(e,"padding"+Je[i],!0,a)),"margin"!==n&&(o-=ie.css(e,"border"+Je[i]+"Width",!0,a))):(o+=ie.css(e,"padding"+Je[i],!0,a),"padding"!==n&&(o+=ie.css(e,"border"+Je[i]+"Width",!0,a)));return o}function C(e,t,n){var r=!0,a="width"===t?e.offsetWidth:e.offsetHeight,i=x(e),o=ie.support.boxSizing&&"border-box"===ie.css(e,"boxSizing",!1,i);if(0>=a||null==a){if(a=Ue(e,t,i),(0>a||null==a)&&(a=e.style[t]),Ze.test(a))return a;r=o&&(ie.support.boxSizingReliable||a===e.style[t]),a=parseFloat(a)||0}return a+A(e,t,n||(o?"border":"content"),r,i)+"px"}function P(e){var t=G,n=We[e];return n||(n=_(e,t),"none"!==n&&n||(ze=(ze||ie("<iframe frameborder='0' width='0' height='0'/>").css("cssText","display:block !important")).appendTo(t.documentElement),t=(ze[0].contentWindow||ze[0].contentDocument).document,t.write("<!doctype html><html><body>"),t.close(),n=_(e,t),ze.detach()),We[e]=n),n}function _(e,t){var n=ie(t.createElement(e)).appendTo(t.body),r=ie.css(n[0],"display");return n.remove(),r}function S(e,t,n,r){var a;if(ie.isArray(t))ie.each(t,function(t,a){n||tt.test(e)?r(e,a):S(e+"["+("object"==typeof a?t:"")+"]",a,n,r)});else if(n||"object"!==ie.type(t))r(e,t);else for(a in t)S(e+"["+a+"]",t[a],n,r)}function k(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,a=0,i=t.toLowerCase().match(se)||[];if(ie.isFunction(n))for(;r=i[a++];)"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function E(e,t,n,r){function a(s){var d;return i[s]=!0,ie.each(e[s]||[],function(e,s){var p=s(t,n,r);return"string"!=typeof p||o||i[p]?o?!(d=p):void 0:(t.dataTypes.unshift(p),a(p),!1)}),d}var i={},o=e===bt;return a(t.dataTypes[0])||!i["*"]&&a("*")}function N(e,n){var r,a,i=ie.ajaxSettings.flatOptions||{};for(r in n)n[r]!==t&&((i[r]?e:a||(a={}))[r]=n[r]);return a&&ie.extend(!0,e,a),e}function I(e,n,r){for(var a,i,o,s,d=e.contents,p=e.dataTypes;"*"===p[0];)p.shift(),a===t&&(a=e.mimeType||n.getResponseHeader("Content-Type"));if(a)for(i in d)if(d[i]&&d[i].test(a)){p.unshift(i);break}if(p[0]in r)o=p[0];else{for(i in r){if(!p[0]||e.converters[i+" "+p[0]]){o=i;break}s||(s=i)}o=o||s}return o?(o!==p[0]&&p.unshift(o),r[o]):void 0}function L(e,t,n,r){var a,i,o,s,d,p={},l=e.dataTypes.slice();if(l[1])for(o in e.converters)p[o.toLowerCase()]=e.converters[o];for(i=l.shift();i;)if(e.responseFields[i]&&(n[e.responseFields[i]]=t),!d&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),d=i,i=l.shift())if("*"===i)i=d;else if("*"!==d&&d!==i){if(o=p[d+" "+i]||p["* "+i],!o)for(a in p)if(s=a.split(" "),s[1]===i&&(o=p[d+" "+s[0]]||p["* "+s[0]])){o===!0?o=p[a]:p[a]!==!0&&(i=s[0],l.unshift(s[1]));break}if(o!==!0)if(o&&e["throws"])t=o(t);else try{t=o(t)}catch(c){return{state:"parsererror",error:o?c:"No conversion from "+d+" to "+i}}}return{state:"success",data:t}}function M(){return setTimeout(function(){St=t}),St=ie.now()}function R(e,t,n){for(var r,a=(Mt[t]||[]).concat(Mt["*"]),i=0,o=a.length;o>i;i++)if(r=a[i].call(n,t,e))return r}function O(e,t,n){var r,a,i=0,o=Lt.length,s=ie.Deferred().always(function(){delete d.elem}),d=function(){if(a)return!1;for(var t=St||M(),n=Math.max(0,p.startTime+p.duration-t),r=n/p.duration||0,i=1-r,o=0,d=p.tweens.length;d>o;o++)p.tweens[o].run(i);return s.notifyWith(e,[p,i,n]),1>i&&d?n:(s.resolveWith(e,[p]),!1)},p=s.promise({elem:e,props:ie.extend({},t),opts:ie.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:St||M(),duration:n.duration,tweens:[],createTween:function(t,n){var r=ie.Tween(e,p.opts,t,n,p.opts.specialEasing[t]||p.opts.easing);return p.tweens.push(r),r},stop:function(t){var n=0,r=t?p.tweens.length:0;if(a)return this;for(a=!0;r>n;n++)p.tweens[n].run(1);return t?s.resolveWith(e,[p,t]):s.rejectWith(e,[p,t]),this}}),l=p.props;for(q(l,p.opts.specialEasing);o>i;i++)if(r=Lt[i].call(p,e,l,p.opts))return r;return ie.map(l,R,p),ie.isFunction(p.opts.start)&&p.opts.start.call(e,p),ie.fx.timer(ie.extend(d,{elem:e,anim:p,queue:p.opts.queue})),p.progress(p.opts.progress).done(p.opts.done,p.opts.complete).fail(p.opts.fail).always(p.opts.always)}function q(e,t){var n,r,a,i,o;for(n in e)if(r=ie.camelCase(n),a=t[r],i=e[n],ie.isArray(i)&&(a=i[1],i=e[n]=i[0]),n!==r&&(e[r]=i,delete e[n]),o=ie.cssHooks[r],o&&"expand"in o){i=o.expand(i),delete e[r];for(n in i)n in e||(e[n]=i[n],t[n]=a)}else t[r]=a}function D(e,n,r){var a,i,o,s,d,p,l=this,c={},h=e.style,u=e.nodeType&&v(e),m=ge.get(e,"fxshow");r.queue||(d=ie._queueHooks(e,"fx"),null==d.unqueued&&(d.unqueued=0,p=d.empty.fire,d.empty.fire=function(){d.unqueued||p()}),d.unqueued++,l.always(function(){l.always(function(){d.unqueued--,ie.queue(e,"fx").length||d.empty.fire()})})),1===e.nodeType&&("height"in n||"width"in n)&&(r.overflow=[h.overflow,h.overflowX,h.overflowY],"inline"===ie.css(e,"display")&&"none"===ie.css(e,"float")&&(h.display="inline-block")),r.overflow&&(h.overflow="hidden",l.always(function(){h.overflow=r.overflow[0],h.overflowX=r.overflow[1],h.overflowY=r.overflow[2]}));for(a in n)if(i=n[a],Et.exec(i)){if(delete n[a],o=o||"toggle"===i,i===(u?"hide":"show")){if("show"!==i||!m||m[a]===t)continue;u=!0}c[a]=m&&m[a]||ie.style(e,a)}if(!ie.isEmptyObject(c)){m?"hidden"in m&&(u=m.hidden):m=ge.access(e,"fxshow",{}),o&&(m.hidden=!u),u?ie(e).show():l.done(function(){ie(e).hide()}),l.done(function(){var t;ge.remove(e,"fxshow");for(t in c)ie.style(e,t,c[t])});for(a in c)s=R(u?m[a]:0,a,l),a in m||(m[a]=s.start,u&&(s.end=s.start,s.start="width"===a||"height"===a?1:0))}}function H(e,t,n,r,a){return new H.prototype.init(e,t,n,r,a)}function j(e,t){var n,r={height:e},a=0;for(t=t?1:0;4>a;a+=2-t)n=Je[a],r["margin"+n]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function V(e){return ie.isWindow(e)?e:9===e.nodeType&&e.defaultView}var F,U,z=typeof t,B=e.location,G=e.document,$=G.documentElement,Z=e.jQuery,K=e.$,W={},Y=[],X="2.0.3",J=Y.concat,Q=Y.push,ee=Y.slice,te=Y.indexOf,ne=W.toString,re=W.hasOwnProperty,ae=X.trim,ie=function(e,t){return new ie.fn.init(e,t,F)},oe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,se=/\S+/g,de=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,pe=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,le=/^-ms-/,ce=/-([\da-z])/gi,he=function(e,t){return t.toUpperCase()},ue=function(){G.removeEventListener("DOMContentLoaded",ue,!1),e.removeEventListener("load",ue,!1),ie.ready()};ie.fn=ie.prototype={jquery:X,constructor:ie,init:function(e,n,r){var a,i;if(!e)return this;if("string"==typeof e){if(a="<"===e.charAt(0)&&">"===e.charAt(e.length-1)&&e.length>=3?[null,e,null]:de.exec(e),!a||!a[1]&&n)return!n||n.jquery?(n||r).find(e):this.constructor(n).find(e);if(a[1]){if(n=n instanceof ie?n[0]:n,ie.merge(this,ie.parseHTML(a[1],n&&n.nodeType?n.ownerDocument||n:G,!0)),pe.test(a[1])&&ie.isPlainObject(n))for(a in n)ie.isFunction(this[a])?this[a](n[a]):this.attr(a,n[a]);return this}return i=G.getElementById(a[2]),i&&i.parentNode&&(this.length=1,this[0]=i),this.context=G,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):ie.isFunction(e)?r.ready(e):(e.selector!==t&&(this.selector=e.selector,this.context=e.context),ie.makeArray(e,this))},selector:"",length:0,toArray:function(){return ee.call(this)},get:function(e){return null==e?this.toArray():0>e?this[this.length+e]:this[e]},pushStack:function(e){var t=ie.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return ie.each(this,e,t)},ready:function(e){return ie.ready.promise().done(e),this},slice:function(){return this.pushStack(ee.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},map:function(e){return this.pushStack(ie.map(this,function(t,n){return e.call(t,n,t)}))},end:function(){return this.prevObject||this.constructor(null)},push:Q,sort:[].sort,splice:[].splice},ie.fn.init.prototype=ie.fn,ie.extend=ie.fn.extend=function(){var e,n,r,a,i,o,s=arguments[0]||{},d=1,p=arguments.length,l=!1;for("boolean"==typeof s&&(l=s,s=arguments[1]||{},d=2),"object"==typeof s||ie.isFunction(s)||(s={}),p===d&&(s=this,--d);p>d;d++)if(null!=(e=arguments[d]))for(n in e)r=s[n],a=e[n],s!==a&&(l&&a&&(ie.isPlainObject(a)||(i=ie.isArray(a)))?(i?(i=!1,o=r&&ie.isArray(r)?r:[]):o=r&&ie.isPlainObject(r)?r:{},s[n]=ie.extend(l,o,a)):a!==t&&(s[n]=a));return s},ie.extend({expando:"jQuery"+(X+Math.random()).replace(/\D/g,""),noConflict:function(t){return e.$===ie&&(e.$=K),t&&e.jQuery===ie&&(e.jQuery=Z),ie},isReady:!1,readyWait:1,holdReady:function(e){e?ie.readyWait++:ie.ready(!0)},ready:function(e){(e===!0?--ie.readyWait:ie.isReady)||(ie.isReady=!0,e!==!0&&--ie.readyWait>0||(U.resolveWith(G,[ie]),ie.fn.trigger&&ie(G).trigger("ready").off("ready")))},isFunction:function(e){return"function"===ie.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},type:function(e){return null==e?String(e):"object"==typeof e||"function"==typeof e?W[ne.call(e)]||"object":typeof e},isPlainObject:function(e){if("object"!==ie.type(e)||e.nodeType||ie.isWindow(e))return!1;try{if(e.constructor&&!re.call(e.constructor.prototype,"isPrototypeOf"))return!1}catch(t){return!1}return!0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},error:function(e){throw new Error(e)},parseHTML:function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||G;var r=pe.exec(e),a=!n&&[];return r?[t.createElement(r[1])]:(r=ie.buildFragment([e],t,a),a&&ie(a).remove(),ie.merge([],r.childNodes))},parseJSON:JSON.parse,parseXML:function(e){var n,r;if(!e||"string"!=typeof e)return null;try{r=new DOMParser,n=r.parseFromString(e,"text/xml")}catch(a){n=t}return(!n||n.getElementsByTagName("parsererror").length)&&ie.error("Invalid XML: "+e),n},noop:function(){},globalEval:function(e){var t,n=eval;e=ie.trim(e),e&&(1===e.indexOf("use strict")?(t=G.createElement("script"),t.text=e,G.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(le,"ms-").replace(ce,he)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,r){var a,i=0,o=e.length,s=n(e);if(r){if(s)for(;o>i&&(a=t.apply(e[i],r),a!==!1);i++);else for(i in e)if(a=t.apply(e[i],r),a===!1)break}else if(s)for(;o>i&&(a=t.call(e[i],i,e[i]),a!==!1);i++);else for(i in e)if(a=t.call(e[i],i,e[i]),a===!1)break;return e},trim:function(e){return null==e?"":ae.call(e)},makeArray:function(e,t){var r=t||[];return null!=e&&(n(Object(e))?ie.merge(r,"string"==typeof e?[e]:e):Q.call(r,e)),r},inArray:function(e,t,n){return null==t?-1:te.call(t,e,n)},merge:function(e,n){var r=n.length,a=e.length,i=0;if("number"==typeof r)for(;r>i;i++)e[a++]=n[i];else for(;n[i]!==t;)e[a++]=n[i++];return e.length=a,e},grep:function(e,t,n){var r,a=[],i=0,o=e.length;for(n=!!n;o>i;i++)r=!!t(e[i],i),n!==r&&a.push(e[i]);return a},map:function(e,t,r){var a,i=0,o=e.length,s=n(e),d=[];if(s)for(;o>i;i++)a=t(e[i],i,r),null!=a&&(d[d.length]=a);else for(i in e)a=t(e[i],i,r),null!=a&&(d[d.length]=a);return J.apply([],d)},guid:1,proxy:function(e,n){var r,a,i;return"string"==typeof n&&(r=e[n],n=e,e=r),ie.isFunction(e)?(a=ee.call(arguments,2),i=function(){return e.apply(n||this,a.concat(ee.call(arguments)))},i.guid=e.guid=e.guid||ie.guid++,i):t},access:function(e,n,r,a,i,o,s){var d=0,p=e.length,l=null==r;if("object"===ie.type(r)){i=!0;for(d in r)ie.access(e,n,d,r[d],!0,o,s)}else if(a!==t&&(i=!0,ie.isFunction(a)||(s=!0),l&&(s?(n.call(e,a),n=null):(l=n,n=function(e,t,n){return l.call(ie(e),n)})),n))for(;p>d;d++)n(e[d],r,s?a:a.call(e[d],d,n(e[d],r)));return i?e:l?n.call(e):p?n(e[0],r):o},now:Date.now,swap:function(e,t,n,r){var a,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];a=n.apply(e,r||[]);for(i in t)e.style[i]=o[i];return a}}),ie.ready.promise=function(t){return U||(U=ie.Deferred(),"complete"===G.readyState?setTimeout(ie.ready):(G.addEventListener("DOMContentLoaded",ue,!1),e.addEventListener("load",ue,!1))),U.promise(t)},ie.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){W["[object "+t+"]"]=t.toLowerCase()}),F=ie(G),function(e,t){function n(e,t,n,r){var a,i,o,s,d,p,l,c,m,f;if((t?t.ownerDocument||t:V)!==L&&I(t),t=t||L,n=n||[],!e||"string"!=typeof e)return n;if(1!==(s=t.nodeType)&&9!==s)return[];if(R&&!r){if(a=ve.exec(e))if(o=a[1]){if(9===s){if(i=t.getElementById(o),!i||!i.parentNode)return n;if(i.id===o)return n.push(i),n}else if(t.ownerDocument&&(i=t.ownerDocument.getElementById(o))&&H(t,i)&&i.id===o)return n.push(i),n}else{if(a[2])return ee.apply(n,t.getElementsByTagName(e)),n;if((o=a[3])&&A.getElementsByClassName&&t.getElementsByClassName)return ee.apply(n,t.getElementsByClassName(o)),n}if(A.qsa&&(!O||!O.test(e))){if(c=l=j,m=t,f=9===s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){for(p=h(e),(l=t.getAttribute("id"))?c=l.replace(Te,"\\$&"):t.setAttribute("id",c),c="[id='"+c+"'] ",d=p.length;d--;)p[d]=c+u(p[d]);m=ue.test(e)&&t.parentNode||t,f=p.join(",")}if(f)try{return ee.apply(n,m.querySelectorAll(f)),n}catch(g){}finally{l||t.removeAttribute("id")}}}return w(e.replace(le,"$1"),t,n,r)}function r(){function e(n,r){return t.push(n+=" ")>P.cacheLength&&delete e[t.shift()],e[n]=r}var t=[];return e}function a(e){return e[j]=!0,e}function i(e){var t=L.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function o(e,t){for(var n=e.split("|"),r=e.length;r--;)P.attrHandle[n[r]]=t}function s(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||W)-(~e.sourceIndex||W);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function d(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function p(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function l(e){return a(function(t){return t=+t,a(function(n,r){for(var a,i=e([],n.length,t),o=i.length;o--;)n[a=i[o]]&&(n[a]=!(r[a]=n[a]))})})}function c(){}function h(e,t){var r,a,i,o,s,d,p,l=B[e+" "];if(l)return t?0:l.slice(0);for(s=e,d=[],p=P.preFilter;s;){(!r||(a=ce.exec(s)))&&(a&&(s=s.slice(a[0].length)||s),d.push(i=[])),r=!1,(a=he.exec(s))&&(r=a.shift(),i.push({value:r,type:a[0].replace(le," ")}),s=s.slice(r.length));for(o in P.filter)!(a=ye[o].exec(s))||p[o]&&!(a=p[o](a))||(r=a.shift(),i.push({value:r,type:o,matches:a}),s=s.slice(r.length));if(!r)break}return t?s.length:s?n.error(e):B(e,d).slice(0)}function u(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function m(e,t,n){var r=t.dir,a=n&&"parentNode"===r,i=U++;return t.first?function(t,n,i){for(;t=t[r];)if(1===t.nodeType||a)return e(t,n,i)}:function(t,n,o){var s,d,p,l=F+" "+i;if(o){for(;t=t[r];)if((1===t.nodeType||a)&&e(t,n,o))return!0}else for(;t=t[r];)if(1===t.nodeType||a)if(p=t[j]||(t[j]={}),(d=p[r])&&d[0]===l){if((s=d[1])===!0||s===C)return s===!0}else if(d=p[r]=[l],d[1]=e(t,n,o)||C,d[1]===!0)return!0}}function f(e){return e.length>1?function(t,n,r){for(var a=e.length;a--;)if(!e[a](t,n,r))return!1;return!0}:e[0]}function g(e,t,n,r,a){for(var i,o=[],s=0,d=e.length,p=null!=t;d>s;s++)(i=e[s])&&(!n||n(i,r,a))&&(o.push(i),p&&t.push(s));return o}function y(e,t,n,r,i,o){return r&&!r[j]&&(r=y(r)),i&&!i[j]&&(i=y(i,o)),a(function(a,o,s,d){var p,l,c,h=[],u=[],m=o.length,f=a||x(t||"*",s.nodeType?[s]:s,[]),y=!e||!a&&t?f:g(f,h,e,s,d),b=n?i||(a?e:m||r)?[]:o:y;if(n&&n(y,b,s,d),r)for(p=g(b,u),r(p,[],s,d),l=p.length;l--;)(c=p[l])&&(b[u[l]]=!(y[u[l]]=c));if(a){if(i||e){if(i){for(p=[],l=b.length;l--;)(c=b[l])&&p.push(y[l]=c);i(null,b=[],p,d)}for(l=b.length;l--;)(c=b[l])&&(p=i?ne.call(a,c):h[l])>-1&&(a[p]=!(o[p]=c))}}else b=g(b===o?b.splice(m,b.length):b),i?i(null,o,b,d):ee.apply(o,b)})}function b(e){for(var t,n,r,a=e.length,i=P.relative[e[0].type],o=i||P.relative[" "],s=i?1:0,d=m(function(e){return e===t},o,!0),p=m(function(e){return ne.call(t,e)>-1},o,!0),l=[function(e,n,r){return!i&&(r||n!==E)||((t=n).nodeType?d(e,n,r):p(e,n,r))}];a>s;s++)if(n=P.relative[e[s].type])l=[m(f(l),n)];else{if(n=P.filter[e[s].type].apply(null,e[s].matches),n[j]){for(r=++s;a>r&&!P.relative[e[r].type];r++);return y(s>1&&f(l),s>1&&u(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(le,"$1"),n,r>s&&b(e.slice(s,r)),a>r&&b(e=e.slice(r)),a>r&&u(e))}l.push(n)}return f(l)}function v(e,t){var r=0,i=t.length>0,o=e.length>0,s=function(a,s,d,p,l){var c,h,u,m=[],f=0,y="0",b=a&&[],v=null!=l,x=E,w=a||o&&P.find.TAG("*",l&&s.parentNode||s),T=F+=null==x?1:Math.random()||.1;for(v&&(E=s!==L&&s,C=r);null!=(c=w[y]);y++){if(o&&c){for(h=0;u=e[h++];)if(u(c,s,d)){p.push(c);break}v&&(F=T,C=++r)}i&&((c=!u&&c)&&f--,a&&b.push(c))}if(f+=y,i&&y!==f){for(h=0;u=t[h++];)u(b,m,s,d);if(a){if(f>0)for(;y--;)b[y]||m[y]||(m[y]=J.call(p));m=g(m)}ee.apply(p,m),v&&!a&&m.length>0&&f+t.length>1&&n.uniqueSort(p)}return v&&(F=T,E=x),b};return i?a(s):s}function x(e,t,r){for(var a=0,i=t.length;i>a;a++)n(e,t[a],r);return r}function w(e,t,n,r){var a,i,o,s,d,p=h(e);if(!r&&1===p.length){if(i=p[0]=p[0].slice(0),i.length>2&&"ID"===(o=i[0]).type&&A.getById&&9===t.nodeType&&R&&P.relative[i[1].type]){if(t=(P.find.ID(o.matches[0].replace(Ae,Ce),t)||[])[0],!t)return n;e=e.slice(i.shift().value.length)}for(a=ye.needsContext.test(e)?0:i.length;a--&&(o=i[a],!P.relative[s=o.type]);)if((d=P.find[s])&&(r=d(o.matches[0].replace(Ae,Ce),ue.test(i[0].type)&&t.parentNode||t))){if(i.splice(a,1),e=r.length&&u(i),!e)return ee.apply(n,r),n;break}}return k(e,p)(r,t,!R,n,ue.test(e)),n}var T,A,C,P,_,S,k,E,N,I,L,M,R,O,q,D,H,j="sizzle"+-new Date,V=e.document,F=0,U=0,z=r(),B=r(),G=r(),$=!1,Z=function(e,t){return e===t?($=!0,0):0},K=typeof t,W=1<<31,Y={}.hasOwnProperty,X=[],J=X.pop,Q=X.push,ee=X.push,te=X.slice,ne=X.indexOf||function(e){for(var t=0,n=this.length;n>t;t++)if(this[t]===e)return t;return-1},re="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ae="[\\x20\\t\\r\\n\\f]",oe="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",se=oe.replace("w","w#"),de="\\["+ae+"*("+oe+")"+ae+"*(?:([*^$|!~]?=)"+ae+"*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|("+se+")|)|)"+ae+"*\\]",pe=":("+oe+")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|"+de.replace(3,8)+")*)|.*)\\)|)",le=new RegExp("^"+ae+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ae+"+$","g"),ce=new RegExp("^"+ae+"*,"+ae+"*"),he=new RegExp("^"+ae+"*([>+~]|"+ae+")"+ae+"*"),ue=new RegExp(ae+"*[+~]"),me=new RegExp("="+ae+"*([^\\]'\"]*)"+ae+"*\\]","g"),fe=new RegExp(pe),ge=new RegExp("^"+se+"$"),ye={ID:new RegExp("^#("+oe+")"),CLASS:new RegExp("^\\.("+oe+")"),TAG:new RegExp("^("+oe.replace("w","w*")+")"),ATTR:new RegExp("^"+de),PSEUDO:new RegExp("^"+pe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ae+"*(even|odd|(([+-]|)(\\d*)n|)"+ae+"*(?:([+-]|)"+ae+"*(\\d+)|))"+ae+"*\\)|)","i"),bool:new RegExp("^(?:"+re+")$","i"),needsContext:new RegExp("^"+ae+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ae+"*((?:-\\d)?\\d*)"+ae+"*\\)|)(?=[^-]|$)","i")},be=/^[^{]+\{\s*\[native \w/,ve=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,xe=/^(?:input|select|textarea|button)$/i,we=/^h\d$/i,Te=/'|\\/g,Ae=new RegExp("\\\\([\\da-f]{1,6}"+ae+"?|("+ae+")|.)","ig"),Ce=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)};try{ee.apply(X=te.call(V.childNodes),V.childNodes),X[V.childNodes.length].nodeType}catch(Pe){ee={apply:X.length?function(e,t){Q.apply(e,te.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}S=n.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},A=n.support={},I=n.setDocument=function(e){var t=e?e.ownerDocument||e:V,n=t.defaultView;return t!==L&&9===t.nodeType&&t.documentElement?(L=t,M=t.documentElement,R=!S(t),n&&n.attachEvent&&n!==n.top&&n.attachEvent("onbeforeunload",function(){I()}),A.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),A.getElementsByTagName=i(function(e){return e.appendChild(t.createComment("")),!e.getElementsByTagName("*").length}),A.getElementsByClassName=i(function(e){return e.innerHTML="<div class='a'></div><div class='a i'></div>",e.firstChild.className="i",2===e.getElementsByClassName("i").length}),A.getById=i(function(e){return M.appendChild(e).id=j,!t.getElementsByName||!t.getElementsByName(j).length}),A.getById?(P.find.ID=function(e,t){if(typeof t.getElementById!==K&&R){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},P.filter.ID=function(e){var t=e.replace(Ae,Ce);return function(e){return e.getAttribute("id")===t}}):(delete P.find.ID,P.filter.ID=function(e){var t=e.replace(Ae,Ce);return function(e){var n=typeof e.getAttributeNode!==K&&e.getAttributeNode("id");return n&&n.value===t}}),P.find.TAG=A.getElementsByTagName?function(e,t){return typeof t.getElementsByTagName!==K?t.getElementsByTagName(e):void 0}:function(e,t){var n,r=[],a=0,i=t.getElementsByTagName(e);if("*"===e){for(;n=i[a++];)1===n.nodeType&&r.push(n);return r}return i},P.find.CLASS=A.getElementsByClassName&&function(e,t){return typeof t.getElementsByClassName!==K&&R?t.getElementsByClassName(e):void 0},q=[],O=[],(A.qsa=be.test(t.querySelectorAll))&&(i(function(e){e.innerHTML="<select><option selected=''></option></select>",e.querySelectorAll("[selected]").length||O.push("\\["+ae+"*(?:value|"+re+")"),e.querySelectorAll(":checked").length||O.push(":checked")}),i(function(e){var n=t.createElement("input");n.setAttribute("type","hidden"),e.appendChild(n).setAttribute("t",""),e.querySelectorAll("[t^='']").length&&O.push("[*^$]="+ae+"*(?:''|\"\")"),e.querySelectorAll(":enabled").length||O.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),O.push(",.*:")})),(A.matchesSelector=be.test(D=M.webkitMatchesSelector||M.mozMatchesSelector||M.oMatchesSelector||M.msMatchesSelector))&&i(function(e){A.disconnectedMatch=D.call(e,"div"),D.call(e,"[s!='']:x"),q.push("!=",pe)}),O=O.length&&new RegExp(O.join("|")),q=q.length&&new RegExp(q.join("|")),H=be.test(M.contains)||M.compareDocumentPosition?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},Z=M.compareDocumentPosition?function(e,n){if(e===n)return $=!0,0;var r=n.compareDocumentPosition&&e.compareDocumentPosition&&e.compareDocumentPosition(n);return r?1&r||!A.sortDetached&&n.compareDocumentPosition(e)===r?e===t||H(V,e)?-1:n===t||H(V,n)?1:N?ne.call(N,e)-ne.call(N,n):0:4&r?-1:1:e.compareDocumentPosition?-1:1}:function(e,n){var r,a=0,i=e.parentNode,o=n.parentNode,d=[e],p=[n];if(e===n)return $=!0,0;if(!i||!o)return e===t?-1:n===t?1:i?-1:o?1:N?ne.call(N,e)-ne.call(N,n):0;if(i===o)return s(e,n);for(r=e;r=r.parentNode;)d.unshift(r);for(r=n;r=r.parentNode;)p.unshift(r);for(;d[a]===p[a];)a++;return a?s(d[a],p[a]):d[a]===V?-1:p[a]===V?1:0},t):L},n.matches=function(e,t){return n(e,null,null,t)},n.matchesSelector=function(e,t){if((e.ownerDocument||e)!==L&&I(e),t=t.replace(me,"='$1']"),A.matchesSelector&&R&&(!q||!q.test(t))&&(!O||!O.test(t)))try{var r=D.call(e,t);if(r||A.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(a){}return n(t,L,null,[e]).length>0},n.contains=function(e,t){return(e.ownerDocument||e)!==L&&I(e),H(e,t)},n.attr=function(e,n){(e.ownerDocument||e)!==L&&I(e);var r=P.attrHandle[n.toLowerCase()],a=r&&Y.call(P.attrHandle,n.toLowerCase())?r(e,n,!R):t;return a===t?A.attributes||!R?e.getAttribute(n):(a=e.getAttributeNode(n))&&a.specified?a.value:null:a},n.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},n.uniqueSort=function(e){var t,n=[],r=0,a=0;if($=!A.detectDuplicates,N=!A.sortStable&&e.slice(0),e.sort(Z),$){for(;t=e[a++];)t===e[a]&&(r=n.push(a));for(;r--;)e.splice(n[r],1)}return e},_=n.getText=function(e){var t,n="",r=0,a=e.nodeType;if(a){if(1===a||9===a||11===a){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=_(e)}else if(3===a||4===a)return e.nodeValue}else for(;t=e[r];r++)n+=_(t);return n},P=n.selectors={cacheLength:50,createPseudo:a,match:ye,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(Ae,Ce),e[3]=(e[4]||e[5]||"").replace(Ae,Ce),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||n.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&n.error(e[0]),e},PSEUDO:function(e){var n,r=!e[5]&&e[2];return ye.CHILD.test(e[0])?null:(e[3]&&e[4]!==t?e[2]=e[4]:r&&fe.test(r)&&(n=h(r,!0))&&(n=r.indexOf(")",r.length-n)-r.length)&&(e[0]=e[0].slice(0,n),e[2]=r.slice(0,n)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(Ae,Ce).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=z[e+" "];return t||(t=new RegExp("(^|"+ae+")"+e+"("+ae+"|$)"))&&z(e,function(e){return t.test("string"==typeof e.className&&e.className||typeof e.getAttribute!==K&&e.getAttribute("class")||"")})},ATTR:function(e,t,r){return function(a){var i=n.attr(a,e);return null==i?"!="===t:t?(i+="","="===t?i===r:"!="===t?i!==r:"^="===t?r&&0===i.indexOf(r):"*="===t?r&&i.indexOf(r)>-1:"$="===t?r&&i.slice(-r.length)===r:"~="===t?(" "+i+" ").indexOf(r)>-1:"|="===t?i===r||i.slice(0,r.length+1)===r+"-":!1):!0}},CHILD:function(e,t,n,r,a){var i="nth"!==e.slice(0,3),o="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===a?function(e){return!!e.parentNode}:function(t,n,d){var p,l,c,h,u,m,f=i!==o?"nextSibling":"previousSibling",g=t.parentNode,y=s&&t.nodeName.toLowerCase(),b=!d&&!s;if(g){if(i){for(;f;){for(c=t;c=c[f];)if(s?c.nodeName.toLowerCase()===y:1===c.nodeType)return!1;m=f="only"===e&&!m&&"nextSibling"}return!0}if(m=[o?g.firstChild:g.lastChild],o&&b){for(l=g[j]||(g[j]={}),p=l[e]||[],u=p[0]===F&&p[1],h=p[0]===F&&p[2],c=u&&g.childNodes[u];c=++u&&c&&c[f]||(h=u=0)||m.pop();)if(1===c.nodeType&&++h&&c===t){
l[e]=[F,u,h];break}}else if(b&&(p=(t[j]||(t[j]={}))[e])&&p[0]===F)h=p[1];else for(;(c=++u&&c&&c[f]||(h=u=0)||m.pop())&&((s?c.nodeName.toLowerCase()!==y:1!==c.nodeType)||!++h||(b&&((c[j]||(c[j]={}))[e]=[F,h]),c!==t)););return h-=a,h===r||h%r===0&&h/r>=0}}},PSEUDO:function(e,t){var r,i=P.pseudos[e]||P.setFilters[e.toLowerCase()]||n.error("unsupported pseudo: "+e);return i[j]?i(t):i.length>1?(r=[e,e,"",t],P.setFilters.hasOwnProperty(e.toLowerCase())?a(function(e,n){for(var r,a=i(e,t),o=a.length;o--;)r=ne.call(e,a[o]),e[r]=!(n[r]=a[o])}):function(e){return i(e,0,r)}):i}},pseudos:{not:a(function(e){var t=[],n=[],r=k(e.replace(le,"$1"));return r[j]?a(function(e,t,n,a){for(var i,o=r(e,null,a,[]),s=e.length;s--;)(i=o[s])&&(e[s]=!(t[s]=i))}):function(e,a,i){return t[0]=e,r(t,null,i,n),!n.pop()}}),has:a(function(e){return function(t){return n(e,t).length>0}}),contains:a(function(e){return function(t){return(t.textContent||t.innerText||_(t)).indexOf(e)>-1}}),lang:a(function(e){return ge.test(e||"")||n.error("unsupported lang: "+e),e=e.replace(Ae,Ce).toLowerCase(),function(t){var n;do if(n=R?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===M},focus:function(e){return e===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeName>"@"||3===e.nodeType||4===e.nodeType)return!1;return!0},parent:function(e){return!P.pseudos.empty(e)},header:function(e){return we.test(e.nodeName)},input:function(e){return xe.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||t.toLowerCase()===e.type)},first:l(function(){return[0]}),last:l(function(e,t){return[t-1]}),eq:l(function(e,t,n){return[0>n?n+t:n]}),even:l(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:l(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:l(function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e}),gt:l(function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e})}},P.pseudos.nth=P.pseudos.eq;for(T in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})P.pseudos[T]=d(T);for(T in{submit:!0,reset:!0})P.pseudos[T]=p(T);c.prototype=P.filters=P.pseudos,P.setFilters=new c,k=n.compile=function(e,t){var n,r=[],a=[],i=G[e+" "];if(!i){for(t||(t=h(e)),n=t.length;n--;)i=b(t[n]),i[j]?r.push(i):a.push(i);i=G(e,v(a,r))}return i},A.sortStable=j.split("").sort(Z).join("")===j,A.detectDuplicates=$,I(),A.sortDetached=i(function(e){return 1&e.compareDocumentPosition(L.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||o("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),A.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||o("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||o(re,function(e,t,n){var r;return n?void 0:(r=e.getAttributeNode(t))&&r.specified?r.value:e[t]===!0?t.toLowerCase():null}),ie.find=n,ie.expr=n.selectors,ie.expr[":"]=ie.expr.pseudos,ie.unique=n.uniqueSort,ie.text=n.getText,ie.isXMLDoc=n.isXML,ie.contains=n.contains}(e);var me={};ie.Callbacks=function(e){e="string"==typeof e?me[e]||r(e):ie.extend({},e);var n,a,i,o,s,d,p=[],l=!e.once&&[],c=function(t){for(n=e.memory&&t,a=!0,d=o||0,o=0,s=p.length,i=!0;p&&s>d;d++)if(p[d].apply(t[0],t[1])===!1&&e.stopOnFalse){n=!1;break}i=!1,p&&(l?l.length&&c(l.shift()):n?p=[]:h.disable())},h={add:function(){if(p){var t=p.length;!function r(t){ie.each(t,function(t,n){var a=ie.type(n);"function"===a?e.unique&&h.has(n)||p.push(n):n&&n.length&&"string"!==a&&r(n)})}(arguments),i?s=p.length:n&&(o=t,c(n))}return this},remove:function(){return p&&ie.each(arguments,function(e,t){for(var n;(n=ie.inArray(t,p,n))>-1;)p.splice(n,1),i&&(s>=n&&s--,d>=n&&d--)}),this},has:function(e){return e?ie.inArray(e,p)>-1:!(!p||!p.length)},empty:function(){return p=[],s=0,this},disable:function(){return p=l=n=t,this},disabled:function(){return!p},lock:function(){return l=t,n||h.disable(),this},locked:function(){return!l},fireWith:function(e,t){return!p||a&&!l||(t=t||[],t=[e,t.slice?t.slice():t],i?l.push(t):c(t)),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!a}};return h},ie.extend({Deferred:function(e){var t=[["resolve","done",ie.Callbacks("once memory"),"resolved"],["reject","fail",ie.Callbacks("once memory"),"rejected"],["notify","progress",ie.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return a.done(arguments).fail(arguments),this},then:function(){var e=arguments;return ie.Deferred(function(n){ie.each(t,function(t,i){var o=i[0],s=ie.isFunction(e[t])&&e[t];a[i[1]](function(){var e=s&&s.apply(this,arguments);e&&ie.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[o+"With"](this===r?n.promise():this,s?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?ie.extend(e,r):r}},a={};return r.pipe=r.then,ie.each(t,function(e,i){var o=i[2],s=i[3];r[i[1]]=o.add,s&&o.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),a[i[0]]=function(){return a[i[0]+"With"](this===a?r:this,arguments),this},a[i[0]+"With"]=o.fireWith}),r.promise(a),e&&e.call(a,a),a},when:function(e){var t,n,r,a=0,i=ee.call(arguments),o=i.length,s=1!==o||e&&ie.isFunction(e.promise)?o:0,d=1===s?e:ie.Deferred(),p=function(e,n,r){return function(a){n[e]=this,r[e]=arguments.length>1?ee.call(arguments):a,r===t?d.notifyWith(n,r):--s||d.resolveWith(n,r)}};if(o>1)for(t=new Array(o),n=new Array(o),r=new Array(o);o>a;a++)i[a]&&ie.isFunction(i[a].promise)?i[a].promise().done(p(a,r,i)).fail(d.reject).progress(p(a,n,t)):--s;return s||d.resolveWith(r,i),d.promise()}}),ie.support=function(t){var n=G.createElement("input"),r=G.createDocumentFragment(),a=G.createElement("div"),i=G.createElement("select"),o=i.appendChild(G.createElement("option"));return n.type?(n.type="checkbox",t.checkOn=""!==n.value,t.optSelected=o.selected,t.reliableMarginRight=!0,t.boxSizingReliable=!0,t.pixelPosition=!1,n.checked=!0,t.noCloneChecked=n.cloneNode(!0).checked,i.disabled=!0,t.optDisabled=!o.disabled,n=G.createElement("input"),n.value="t",n.type="radio",t.radioValue="t"===n.value,n.setAttribute("checked","t"),n.setAttribute("name","t"),r.appendChild(n),t.checkClone=r.cloneNode(!0).cloneNode(!0).lastChild.checked,t.focusinBubbles="onfocusin"in e,a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",t.clearCloneStyle="content-box"===a.style.backgroundClip,ie(function(){var n,r,i="padding:0;margin:0;border:0;display:block;-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box",o=G.getElementsByTagName("body")[0];o&&(n=G.createElement("div"),n.style.cssText="border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px",o.appendChild(n).appendChild(a),a.innerHTML="",a.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%",ie.swap(o,null!=o.style.zoom?{zoom:1}:{},function(){t.boxSizing=4===a.offsetWidth}),e.getComputedStyle&&(t.pixelPosition="1%"!==(e.getComputedStyle(a,null)||{}).top,t.boxSizingReliable="4px"===(e.getComputedStyle(a,null)||{width:"4px"}).width,r=a.appendChild(G.createElement("div")),r.style.cssText=a.style.cssText=i,r.style.marginRight=r.style.width="0",a.style.width="1px",t.reliableMarginRight=!parseFloat((e.getComputedStyle(r,null)||{}).marginRight)),o.removeChild(n))}),t):t}({});var fe,ge,ye=/(?:\{[\s\S]*\}|\[[\s\S]*\])$/,be=/([A-Z])/g;a.uid=1,a.accepts=function(e){return e.nodeType?1===e.nodeType||9===e.nodeType:!0},a.prototype={key:function(e){if(!a.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=a.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(r){t[this.expando]=n,ie.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var r,a=this.key(e),i=this.cache[a];if("string"==typeof t)i[t]=n;else if(ie.isEmptyObject(i))ie.extend(this.cache[a],t);else for(r in t)i[r]=t[r];return i},get:function(e,n){var r=this.cache[this.key(e)];return n===t?r:r[n]},access:function(e,n,r){var a;return n===t||n&&"string"==typeof n&&r===t?(a=this.get(e,n),a!==t?a:this.get(e,ie.camelCase(n))):(this.set(e,n,r),r!==t?r:n)},remove:function(e,n){var r,a,i,o=this.key(e),s=this.cache[o];if(n===t)this.cache[o]={};else{ie.isArray(n)?a=n.concat(n.map(ie.camelCase)):(i=ie.camelCase(n),n in s?a=[n,i]:(a=i,a=a in s?[a]:a.match(se)||[])),r=a.length;for(;r--;)delete s[a[r]]}},hasData:function(e){return!ie.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}},fe=new a,ge=new a,ie.extend({acceptData:a.accepts,hasData:function(e){return fe.hasData(e)||ge.hasData(e)},data:function(e,t,n){return fe.access(e,t,n)},removeData:function(e,t){fe.remove(e,t)},_data:function(e,t,n){return ge.access(e,t,n)},_removeData:function(e,t){ge.remove(e,t)}}),ie.fn.extend({data:function(e,n){var r,a,o=this[0],s=0,d=null;if(e===t){if(this.length&&(d=fe.get(o),1===o.nodeType&&!ge.get(o,"hasDataAttrs"))){for(r=o.attributes;s<r.length;s++)a=r[s].name,0===a.indexOf("data-")&&(a=ie.camelCase(a.slice(5)),i(o,a,d[a]));ge.set(o,"hasDataAttrs",!0)}return d}return"object"==typeof e?this.each(function(){fe.set(this,e)}):ie.access(this,function(n){var r,a=ie.camelCase(e);if(o&&n===t){if(r=fe.get(o,e),r!==t)return r;if(r=fe.get(o,a),r!==t)return r;if(r=i(o,a,t),r!==t)return r}else this.each(function(){var r=fe.get(this,a);fe.set(this,a,n),-1!==e.indexOf("-")&&r!==t&&fe.set(this,e,n)})},null,n,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){fe.remove(this,e)})}}),ie.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=ge.get(e,t),n&&(!r||ie.isArray(n)?r=ge.access(e,t,ie.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=ie.queue(e,t),r=n.length,a=n.shift(),i=ie._queueHooks(e,t),o=function(){ie.dequeue(e,t)};"inprogress"===a&&(a=n.shift(),r--),a&&("fx"===t&&n.unshift("inprogress"),delete i.stop,a.call(e,o,i)),!r&&i&&i.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ge.get(e,n)||ge.access(e,n,{empty:ie.Callbacks("once memory").add(function(){ge.remove(e,[t+"queue",n])})})}}),ie.fn.extend({queue:function(e,n){var r=2;return"string"!=typeof e&&(n=e,e="fx",r--),arguments.length<r?ie.queue(this[0],e):n===t?this:this.each(function(){var t=ie.queue(this,e,n);ie._queueHooks(this,e),"fx"===e&&"inprogress"!==t[0]&&ie.dequeue(this,e)})},dequeue:function(e){return this.each(function(){ie.dequeue(this,e)})},delay:function(e,t){return e=ie.fx?ie.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,n){var r,a=1,i=ie.Deferred(),o=this,s=this.length,d=function(){--a||i.resolveWith(o,[o])};for("string"!=typeof e&&(n=e,e=t),e=e||"fx";s--;)r=ge.get(o[s],e+"queueHooks"),r&&r.empty&&(a++,r.empty.add(d));return d(),i.promise(n)}});var ve,xe,we=/[\t\r\n\f]/g,Te=/\r/g,Ae=/^(?:input|select|textarea|button)$/i;ie.fn.extend({attr:function(e,t){return ie.access(this,ie.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){ie.removeAttr(this,e)})},prop:function(e,t){return ie.access(this,ie.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[ie.propFix[e]||e]})},addClass:function(e){var t,n,r,a,i,o=0,s=this.length,d="string"==typeof e&&e;if(ie.isFunction(e))return this.each(function(t){ie(this).addClass(e.call(this,t,this.className))});if(d)for(t=(e||"").match(se)||[];s>o;o++)if(n=this[o],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(we," "):" ")){for(i=0;a=t[i++];)r.indexOf(" "+a+" ")<0&&(r+=a+" ");n.className=ie.trim(r)}return this},removeClass:function(e){var t,n,r,a,i,o=0,s=this.length,d=0===arguments.length||"string"==typeof e&&e;if(ie.isFunction(e))return this.each(function(t){ie(this).removeClass(e.call(this,t,this.className))});if(d)for(t=(e||"").match(se)||[];s>o;o++)if(n=this[o],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(we," "):"")){for(i=0;a=t[i++];)for(;r.indexOf(" "+a+" ")>=0;)r=r.replace(" "+a+" "," ");n.className=e?ie.trim(r):""}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):ie.isFunction(e)?this.each(function(n){ie(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n)for(var t,r=0,a=ie(this),i=e.match(se)||[];t=i[r++];)a.hasClass(t)?a.removeClass(t):a.addClass(t);else(n===z||"boolean"===n)&&(this.className&&ge.set(this,"__className__",this.className),this.className=this.className||e===!1?"":ge.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,r=this.length;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(we," ").indexOf(t)>=0)return!0;return!1},val:function(e){var n,r,a,i=this[0];{if(arguments.length)return a=ie.isFunction(e),this.each(function(r){var i;1===this.nodeType&&(i=a?e.call(this,r,ie(this).val()):e,null==i?i="":"number"==typeof i?i+="":ie.isArray(i)&&(i=ie.map(i,function(e){return null==e?"":e+""})),n=ie.valHooks[this.type]||ie.valHooks[this.nodeName.toLowerCase()],n&&"set"in n&&n.set(this,i,"value")!==t||(this.value=i))});if(i)return n=ie.valHooks[i.type]||ie.valHooks[i.nodeName.toLowerCase()],n&&"get"in n&&(r=n.get(i,"value"))!==t?r:(r=i.value,"string"==typeof r?r.replace(Te,""):null==r?"":r)}}}),ie.extend({valHooks:{option:{get:function(e){var t=e.attributes.value;return!t||t.specified?e.value:e.text}},select:{get:function(e){for(var t,n,r=e.options,a=e.selectedIndex,i="select-one"===e.type||0>a,o=i?null:[],s=i?a+1:r.length,d=0>a?s:i?a:0;s>d;d++)if(n=r[d],(n.selected||d===a)&&(ie.support.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!ie.nodeName(n.parentNode,"optgroup"))){if(t=ie(n).val(),i)return t;o.push(t)}return o},set:function(e,t){for(var n,r,a=e.options,i=ie.makeArray(t),o=a.length;o--;)r=a[o],(r.selected=ie.inArray(ie(r).val(),i)>=0)&&(n=!0);return n||(e.selectedIndex=-1),i}}},attr:function(e,n,r){var a,i,o=e.nodeType;if(e&&3!==o&&8!==o&&2!==o)return typeof e.getAttribute===z?ie.prop(e,n,r):(1===o&&ie.isXMLDoc(e)||(n=n.toLowerCase(),a=ie.attrHooks[n]||(ie.expr.match.bool.test(n)?xe:ve)),r===t?a&&"get"in a&&null!==(i=a.get(e,n))?i:(i=ie.find.attr(e,n),null==i?t:i):null!==r?a&&"set"in a&&(i=a.set(e,r,n))!==t?i:(e.setAttribute(n,r+""),r):void ie.removeAttr(e,n))},removeAttr:function(e,t){var n,r,a=0,i=t&&t.match(se);if(i&&1===e.nodeType)for(;n=i[a++];)r=ie.propFix[n]||n,ie.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!ie.support.radioValue&&"radio"===t&&ie.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},propFix:{"for":"htmlFor","class":"className"},prop:function(e,n,r){var a,i,o,s=e.nodeType;if(e&&3!==s&&8!==s&&2!==s)return o=1!==s||!ie.isXMLDoc(e),o&&(n=ie.propFix[n]||n,i=ie.propHooks[n]),r!==t?i&&"set"in i&&(a=i.set(e,r,n))!==t?a:e[n]=r:i&&"get"in i&&null!==(a=i.get(e,n))?a:e[n]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||Ae.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),xe={set:function(e,t,n){return t===!1?ie.removeAttr(e,n):e.setAttribute(n,n),n}},ie.each(ie.expr.match.bool.source.match(/\w+/g),function(e,n){var r=ie.expr.attrHandle[n]||ie.find.attr;ie.expr.attrHandle[n]=function(e,n,a){var i=ie.expr.attrHandle[n],o=a?t:(ie.expr.attrHandle[n]=t)!=r(e,n,a)?n.toLowerCase():null;return ie.expr.attrHandle[n]=i,o}}),ie.support.optSelected||(ie.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),ie.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ie.propFix[this.toLowerCase()]=this}),ie.each(["radio","checkbox"],function(){ie.valHooks[this]={set:function(e,t){return ie.isArray(t)?e.checked=ie.inArray(ie(e).val(),t)>=0:void 0}},ie.support.checkOn||(ie.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Ce=/^key/,Pe=/^(?:mouse|contextmenu)|click/,_e=/^(?:focusinfocus|focusoutblur)$/,Se=/^([^.]*)(?:\.(.+)|)$/;ie.event={global:{},add:function(e,n,r,a,i){var o,s,d,p,l,c,h,u,m,f,g,y=ge.get(e);if(y){for(r.handler&&(o=r,r=o.handler,i=o.selector),r.guid||(r.guid=ie.guid++),(p=y.events)||(p=y.events={}),(s=y.handle)||(s=y.handle=function(e){return typeof ie===z||e&&ie.event.triggered===e.type?t:ie.event.dispatch.apply(s.elem,arguments)},s.elem=e),n=(n||"").match(se)||[""],l=n.length;l--;)d=Se.exec(n[l])||[],m=g=d[1],f=(d[2]||"").split(".").sort(),m&&(h=ie.event.special[m]||{},m=(i?h.delegateType:h.bindType)||m,h=ie.event.special[m]||{},c=ie.extend({type:m,origType:g,data:a,handler:r,guid:r.guid,selector:i,needsContext:i&&ie.expr.match.needsContext.test(i),namespace:f.join(".")},o),(u=p[m])||(u=p[m]=[],u.delegateCount=0,h.setup&&h.setup.call(e,a,f,s)!==!1||e.addEventListener&&e.addEventListener(m,s,!1)),h.add&&(h.add.call(e,c),c.handler.guid||(c.handler.guid=r.guid)),i?u.splice(u.delegateCount++,0,c):u.push(c),ie.event.global[m]=!0);e=null}},remove:function(e,t,n,r,a){var i,o,s,d,p,l,c,h,u,m,f,g=ge.hasData(e)&&ge.get(e);if(g&&(d=g.events)){for(t=(t||"").match(se)||[""],p=t.length;p--;)if(s=Se.exec(t[p])||[],u=f=s[1],m=(s[2]||"").split(".").sort(),u){for(c=ie.event.special[u]||{},u=(r?c.delegateType:c.bindType)||u,h=d[u]||[],s=s[2]&&new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=i=h.length;i--;)l=h[i],!a&&f!==l.origType||n&&n.guid!==l.guid||s&&!s.test(l.namespace)||r&&r!==l.selector&&("**"!==r||!l.selector)||(h.splice(i,1),l.selector&&h.delegateCount--,c.remove&&c.remove.call(e,l));o&&!h.length&&(c.teardown&&c.teardown.call(e,m,g.handle)!==!1||ie.removeEvent(e,u,g.handle),delete d[u])}else for(u in d)ie.event.remove(e,u+t[p],n,r,!0);ie.isEmptyObject(d)&&(delete g.handle,ge.remove(e,"events"))}},trigger:function(n,r,a,i){var o,s,d,p,l,c,h,u=[a||G],m=re.call(n,"type")?n.type:n,f=re.call(n,"namespace")?n.namespace.split("."):[];if(s=d=a=a||G,3!==a.nodeType&&8!==a.nodeType&&!_e.test(m+ie.event.triggered)&&(m.indexOf(".")>=0&&(f=m.split("."),m=f.shift(),f.sort()),l=m.indexOf(":")<0&&"on"+m,n=n[ie.expando]?n:new ie.Event(m,"object"==typeof n&&n),n.isTrigger=i?2:3,n.namespace=f.join("."),n.namespace_re=n.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,n.result=t,n.target||(n.target=a),r=null==r?[n]:ie.makeArray(r,[n]),h=ie.event.special[m]||{},i||!h.trigger||h.trigger.apply(a,r)!==!1)){if(!i&&!h.noBubble&&!ie.isWindow(a)){for(p=h.delegateType||m,_e.test(p+m)||(s=s.parentNode);s;s=s.parentNode)u.push(s),d=s;d===(a.ownerDocument||G)&&u.push(d.defaultView||d.parentWindow||e)}for(o=0;(s=u[o++])&&!n.isPropagationStopped();)n.type=o>1?p:h.bindType||m,c=(ge.get(s,"events")||{})[n.type]&&ge.get(s,"handle"),c&&c.apply(s,r),c=l&&s[l],c&&ie.acceptData(s)&&c.apply&&c.apply(s,r)===!1&&n.preventDefault();return n.type=m,i||n.isDefaultPrevented()||h._default&&h._default.apply(u.pop(),r)!==!1||!ie.acceptData(a)||l&&ie.isFunction(a[m])&&!ie.isWindow(a)&&(d=a[l],d&&(a[l]=null),ie.event.triggered=m,a[m](),ie.event.triggered=t,d&&(a[l]=d)),n.result}},dispatch:function(e){e=ie.event.fix(e);var n,r,a,i,o,s=[],d=ee.call(arguments),p=(ge.get(this,"events")||{})[e.type]||[],l=ie.event.special[e.type]||{};if(d[0]=e,e.delegateTarget=this,!l.preDispatch||l.preDispatch.call(this,e)!==!1){for(s=ie.event.handlers.call(this,e,p),n=0;(i=s[n++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,r=0;(o=i.handlers[r++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(o.namespace))&&(e.handleObj=o,e.data=o.data,a=((ie.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,d),a!==t&&(e.result=a)===!1&&(e.preventDefault(),e.stopPropagation()));return l.postDispatch&&l.postDispatch.call(this,e),e.result}},handlers:function(e,n){var r,a,i,o,s=[],d=n.delegateCount,p=e.target;if(d&&p.nodeType&&(!e.button||"click"!==e.type))for(;p!==this;p=p.parentNode||this)if(p.disabled!==!0||"click"!==e.type){for(a=[],r=0;d>r;r++)o=n[r],i=o.selector+" ",a[i]===t&&(a[i]=o.needsContext?ie(i,this).index(p)>=0:ie.find(i,this,null,[p]).length),a[i]&&a.push(o);a.length&&s.push({elem:p,handlers:a})}return d<n.length&&s.push({elem:this,handlers:n.slice(d)}),s},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,n){var r,a,i,o=n.button;return null==e.pageX&&null!=n.clientX&&(r=e.target.ownerDocument||G,a=r.documentElement,i=r.body,e.pageX=n.clientX+(a&&a.scrollLeft||i&&i.scrollLeft||0)-(a&&a.clientLeft||i&&i.clientLeft||0),e.pageY=n.clientY+(a&&a.scrollTop||i&&i.scrollTop||0)-(a&&a.clientTop||i&&i.clientTop||0)),e.which||o===t||(e.which=1&o?1:2&o?3:4&o?2:0),e}},fix:function(e){if(e[ie.expando])return e;var t,n,r,a=e.type,i=e,o=this.fixHooks[a];for(o||(this.fixHooks[a]=o=Pe.test(a)?this.mouseHooks:Ce.test(a)?this.keyHooks:{}),r=o.props?this.props.concat(o.props):this.props,e=new ie.Event(i),t=r.length;t--;)n=r[t],e[n]=i[n];return e.target||(e.target=G),3===e.target.nodeType&&(e.target=e.target.parentNode),o.filter?o.filter(e,i):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==d()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===d()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&ie.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return ie.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){e.result!==t&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var a=ie.extend(new ie.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?ie.event.trigger(a,null,t):ie.event.dispatch.call(t,a),a.isDefaultPrevented()&&n.preventDefault()}},ie.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},ie.Event=function(e,t){return this instanceof ie.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||e.getPreventDefault&&e.getPreventDefault()?o:s):this.type=e,t&&ie.extend(this,t),this.timeStamp=e&&e.timeStamp||ie.now(),void(this[ie.expando]=!0)):new ie.Event(e,t)},ie.Event.prototype={isDefaultPrevented:s,isPropagationStopped:s,isImmediatePropagationStopped:s,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=o,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=o,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=o,this.stopPropagation()}},ie.each({mouseenter:"mouseover",mouseleave:"mouseout"},function(e,t){ie.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,a=e.relatedTarget,i=e.handleObj;return(!a||a!==r&&!ie.contains(r,a))&&(e.type=i.origType,n=i.handler.apply(this,arguments),e.type=t),n}}}),ie.support.focusinBubbles||ie.each({focus:"focusin",blur:"focusout"},function(e,t){var n=0,r=function(e){ie.event.simulate(t,e.target,ie.event.fix(e),!0)};ie.event.special[t]={setup:function(){0===n++&&G.addEventListener(e,r,!0)},teardown:function(){0===--n&&G.removeEventListener(e,r,!0)}}}),ie.fn.extend({on:function(e,n,r,a,i){var o,d;if("object"==typeof e){"string"!=typeof n&&(r=r||n,n=t);for(d in e)this.on(d,n,r,e[d],i);return this}if(null==r&&null==a?(a=n,r=n=t):null==a&&("string"==typeof n?(a=r,r=t):(a=r,r=n,n=t)),a===!1)a=s;else if(!a)return this;return 1===i&&(o=a,a=function(e){return ie().off(e),o.apply(this,arguments)},a.guid=o.guid||(o.guid=ie.guid++)),this.each(function(){ie.event.add(this,e,a,r,n)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,n,r){var a,i;if(e&&e.preventDefault&&e.handleObj)return a=e.handleObj,ie(e.delegateTarget).off(a.namespace?a.origType+"."+a.namespace:a.origType,a.selector,a.handler),this;if("object"==typeof e){for(i in e)this.off(i,n,e[i]);return this}return(n===!1||"function"==typeof n)&&(r=n,n=t),r===!1&&(r=s),this.each(function(){ie.event.remove(this,e,r,n)})},trigger:function(e,t){return this.each(function(){ie.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?ie.event.trigger(e,t,n,!0):void 0}});var ke=/^.[^:#\[\.,]*$/,Ee=/^(?:parents|prev(?:Until|All))/,Ne=ie.expr.match.needsContext,Ie={children:!0,contents:!0,next:!0,prev:!0};ie.fn.extend({find:function(e){var t,n=[],r=this,a=r.length;if("string"!=typeof e)return this.pushStack(ie(e).filter(function(){for(t=0;a>t;t++)if(ie.contains(r[t],this))return!0}));for(t=0;a>t;t++)ie.find(e,r[t],n);return n=this.pushStack(a>1?ie.unique(n):n),n.selector=this.selector?this.selector+" "+e:e,n},has:function(e){var t=ie(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if(ie.contains(this,t[e]))return!0})},not:function(e){return this.pushStack(l(this,e||[],!0))},filter:function(e){return this.pushStack(l(this,e||[],!1))},is:function(e){return!!l(this,"string"==typeof e&&Ne.test(e)?ie(e):e||[],!1).length},closest:function(e,t){for(var n,r=0,a=this.length,i=[],o=Ne.test(e)||"string"!=typeof e?ie(e,t||this.context):0;a>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(o?o.index(n)>-1:1===n.nodeType&&ie.find.matchesSelector(n,e))){n=i.push(n);break}return this.pushStack(i.length>1?ie.unique(i):i)},index:function(e){return e?"string"==typeof e?te.call(ie(e),this[0]):te.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){var n="string"==typeof e?ie(e,t):ie.makeArray(e&&e.nodeType?[e]:e),r=ie.merge(this.get(),n);return this.pushStack(ie.unique(r))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ie.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return ie.dir(e,"parentNode")},parentsUntil:function(e,t,n){return ie.dir(e,"parentNode",n)},next:function(e){return p(e,"nextSibling")},prev:function(e){return p(e,"previousSibling")},nextAll:function(e){return ie.dir(e,"nextSibling")},prevAll:function(e){return ie.dir(e,"previousSibling")},nextUntil:function(e,t,n){return ie.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return ie.dir(e,"previousSibling",n)},siblings:function(e){return ie.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return ie.sibling(e.firstChild)},contents:function(e){return e.contentDocument||ie.merge([],e.childNodes)}},function(e,t){ie.fn[e]=function(n,r){var a=ie.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(a=ie.filter(r,a)),this.length>1&&(Ie[e]||ie.unique(a),Ee.test(e)&&a.reverse()),this.pushStack(a)}}),ie.extend({filter:function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?ie.find.matchesSelector(r,e)?[r]:[]:ie.find.matches(e,ie.grep(t,function(e){return 1===e.nodeType}))},dir:function(e,n,r){for(var a=[],i=r!==t;(e=e[n])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&ie(e).is(r))break;a.push(e)}return a},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}});var Le=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,Me=/<([\w:]+)/,Re=/<|&#?\w+;/,Oe=/<(?:script|style|link)/i,qe=/^(?:checkbox|radio)$/i,De=/checked\s*(?:[^=]|=\s*.checked.)/i,He=/^$|\/(?:java|ecma)script/i,je=/^true\/(.*)/,Ve=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Fe={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Fe.optgroup=Fe.option,Fe.tbody=Fe.tfoot=Fe.colgroup=Fe.caption=Fe.thead,Fe.th=Fe.td,ie.fn.extend({text:function(e){return ie.access(this,function(e){return e===t?ie.text(this):this.empty().append((this[0]&&this[0].ownerDocument||G).createTextNode(e))},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=c(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=c(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,r=e?ie.filter(e,this):this,a=0;null!=(n=r[a]);a++)t||1!==n.nodeType||ie.cleanData(g(n)),n.parentNode&&(t&&ie.contains(n.ownerDocument,n)&&m(g(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ie.cleanData(g(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return ie.clone(this,e,t)})},html:function(e){return ie.access(this,function(e){var n=this[0]||{},r=0,a=this.length;if(e===t&&1===n.nodeType)return n.innerHTML;if("string"==typeof e&&!Oe.test(e)&&!Fe[(Me.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Le,"<$1></$2>");try{for(;a>r;r++)n=this[r]||{},1===n.nodeType&&(ie.cleanData(g(n,!1)),n.innerHTML=e);n=0}catch(i){}}n&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=ie.map(this,function(e){return[e.nextSibling,e.parentNode]}),t=0;return this.domManip(arguments,function(n){var r=e[t++],a=e[t++];a&&(r&&r.parentNode!==a&&(r=this.nextSibling),ie(this).remove(),a.insertBefore(n,r))},!0),t?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t,n){e=J.apply([],e);var r,a,i,o,s,d,p=0,l=this.length,c=this,m=l-1,f=e[0],y=ie.isFunction(f);if(y||!(1>=l||"string"!=typeof f||ie.support.checkClone)&&De.test(f))return this.each(function(r){var a=c.eq(r);y&&(e[0]=f.call(this,r,a.html())),a.domManip(e,t,n)});if(l&&(r=ie.buildFragment(e,this[0].ownerDocument,!1,!n&&this),a=r.firstChild,1===r.childNodes.length&&(r=a),a)){for(i=ie.map(g(r,"script"),h),o=i.length;l>p;p++)s=r,p!==m&&(s=ie.clone(s,!0,!0),o&&ie.merge(i,g(s,"script"))),t.call(this[p],s,p);if(o)for(d=i[i.length-1].ownerDocument,ie.map(i,u),p=0;o>p;p++)s=i[p],He.test(s.type||"")&&!ge.access(s,"globalEval")&&ie.contains(d,s)&&(s.src?ie._evalUrl(s.src):ie.globalEval(s.textContent.replace(Ve,"")))}return this}}),ie.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){ie.fn[e]=function(e){for(var n,r=[],a=ie(e),i=a.length-1,o=0;i>=o;o++)n=o===i?this:this.clone(!0),
ie(a[o])[t](n),Q.apply(r,n.get());return this.pushStack(r)}}),ie.extend({clone:function(e,t,n){var r,a,i,o,s=e.cloneNode(!0),d=ie.contains(e.ownerDocument,e);if(!(ie.support.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ie.isXMLDoc(e)))for(o=g(s),i=g(e),r=0,a=i.length;a>r;r++)y(i[r],o[r]);if(t)if(n)for(i=i||g(e),o=o||g(s),r=0,a=i.length;a>r;r++)f(i[r],o[r]);else f(e,s);return o=g(s,"script"),o.length>0&&m(o,!d&&g(e,"script")),s},buildFragment:function(e,t,n,r){for(var a,i,o,s,d,p,l=0,c=e.length,h=t.createDocumentFragment(),u=[];c>l;l++)if(a=e[l],a||0===a)if("object"===ie.type(a))ie.merge(u,a.nodeType?[a]:a);else if(Re.test(a)){for(i=i||h.appendChild(t.createElement("div")),o=(Me.exec(a)||["",""])[1].toLowerCase(),s=Fe[o]||Fe._default,i.innerHTML=s[1]+a.replace(Le,"<$1></$2>")+s[2],p=s[0];p--;)i=i.lastChild;ie.merge(u,i.childNodes),i=h.firstChild,i.textContent=""}else u.push(t.createTextNode(a));for(h.textContent="",l=0;a=u[l++];)if((!r||-1===ie.inArray(a,r))&&(d=ie.contains(a.ownerDocument,a),i=g(h.appendChild(a),"script"),d&&m(i),n))for(p=0;a=i[p++];)He.test(a.type||"")&&n.push(a);return h},cleanData:function(e){for(var n,r,i,o,s,d,p=ie.event.special,l=0;(r=e[l])!==t;l++){if(a.accepts(r)&&(s=r[ge.expando],s&&(n=ge.cache[s]))){if(i=Object.keys(n.events||{}),i.length)for(d=0;(o=i[d])!==t;d++)p[o]?ie.event.remove(r,o):ie.removeEvent(r,o,n.handle);ge.cache[s]&&delete ge.cache[s]}delete fe.cache[r[fe.expando]]}},_evalUrl:function(e){return ie.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})}}),ie.fn.extend({wrapAll:function(e){var t;return ie.isFunction(e)?this.each(function(t){ie(this).wrapAll(e.call(this,t))}):(this[0]&&(t=ie(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return ie.isFunction(e)?this.each(function(t){ie(this).wrapInner(e.call(this,t))}):this.each(function(){var t=ie(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=ie.isFunction(e);return this.each(function(n){ie(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){ie.nodeName(this,"body")||ie(this).replaceWith(this.childNodes)}).end()}});var Ue,ze,Be=/^(none|table(?!-c[ea]).+)/,Ge=/^margin/,$e=new RegExp("^("+oe+")(.*)$","i"),Ze=new RegExp("^("+oe+")(?!px)[a-z%]+$","i"),Ke=new RegExp("^([+-])=("+oe+")","i"),We={BODY:"block"},Ye={position:"absolute",visibility:"hidden",display:"block"},Xe={letterSpacing:0,fontWeight:400},Je=["Top","Right","Bottom","Left"],Qe=["Webkit","O","Moz","ms"];ie.fn.extend({css:function(e,n){return ie.access(this,function(e,n,r){var a,i,o={},s=0;if(ie.isArray(n)){for(a=x(e),i=n.length;i>s;s++)o[n[s]]=ie.css(e,n[s],!1,a);return o}return r!==t?ie.style(e,n,r):ie.css(e,n)},e,n,arguments.length>1)},show:function(){return w(this,!0)},hide:function(){return w(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){v(this)?ie(this).show():ie(this).hide()})}}),ie.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ue(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,n,r,a){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,s,d=ie.camelCase(n),p=e.style;return n=ie.cssProps[d]||(ie.cssProps[d]=b(p,d)),s=ie.cssHooks[n]||ie.cssHooks[d],r===t?s&&"get"in s&&(i=s.get(e,!1,a))!==t?i:p[n]:(o=typeof r,"string"===o&&(i=Ke.exec(r))&&(r=(i[1]+1)*i[2]+parseFloat(ie.css(e,n)),o="number"),null==r||"number"===o&&isNaN(r)||("number"!==o||ie.cssNumber[d]||(r+="px"),ie.support.clearCloneStyle||""!==r||0!==n.indexOf("background")||(p[n]="inherit"),s&&"set"in s&&(r=s.set(e,r,a))===t||(p[n]=r)),void 0)}},css:function(e,n,r,a){var i,o,s,d=ie.camelCase(n);return n=ie.cssProps[d]||(ie.cssProps[d]=b(e.style,d)),s=ie.cssHooks[n]||ie.cssHooks[d],s&&"get"in s&&(i=s.get(e,!0,r)),i===t&&(i=Ue(e,n,a)),"normal"===i&&n in Xe&&(i=Xe[n]),""===r||r?(o=parseFloat(i),r===!0||ie.isNumeric(o)?o||0:i):i}}),Ue=function(e,n,r){var a,i,o,s=r||x(e),d=s?s.getPropertyValue(n)||s[n]:t,p=e.style;return s&&(""!==d||ie.contains(e.ownerDocument,e)||(d=ie.style(e,n)),Ze.test(d)&&Ge.test(n)&&(a=p.width,i=p.minWidth,o=p.maxWidth,p.minWidth=p.maxWidth=p.width=d,d=s.width,p.width=a,p.minWidth=i,p.maxWidth=o)),d},ie.each(["height","width"],function(e,t){ie.cssHooks[t]={get:function(e,n,r){return n?0===e.offsetWidth&&Be.test(ie.css(e,"display"))?ie.swap(e,Ye,function(){return C(e,t,r)}):C(e,t,r):void 0},set:function(e,n,r){var a=r&&x(e);return T(e,n,r?A(e,t,r,ie.support.boxSizing&&"border-box"===ie.css(e,"boxSizing",!1,a),a):0)}}}),ie(function(){ie.support.reliableMarginRight||(ie.cssHooks.marginRight={get:function(e,t){return t?ie.swap(e,{display:"inline-block"},Ue,[e,"marginRight"]):void 0}}),!ie.support.pixelPosition&&ie.fn.position&&ie.each(["top","left"],function(e,t){ie.cssHooks[t]={get:function(e,n){return n?(n=Ue(e,t),Ze.test(n)?ie(e).position()[t]+"px":n):void 0}}})}),ie.expr&&ie.expr.filters&&(ie.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},ie.expr.filters.visible=function(e){return!ie.expr.filters.hidden(e)}),ie.each({margin:"",padding:"",border:"Width"},function(e,t){ie.cssHooks[e+t]={expand:function(n){for(var r=0,a={},i="string"==typeof n?n.split(" "):[n];4>r;r++)a[e+Je[r]+t]=i[r]||i[r-2]||i[0];return a}},Ge.test(e)||(ie.cssHooks[e+t].set=T)});var et=/%20/g,tt=/\[\]$/,nt=/\r?\n/g,rt=/^(?:submit|button|image|reset|file)$/i,at=/^(?:input|select|textarea|keygen)/i;ie.fn.extend({serialize:function(){return ie.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ie.prop(this,"elements");return e?ie.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ie(this).is(":disabled")&&at.test(this.nodeName)&&!rt.test(e)&&(this.checked||!qe.test(e))}).map(function(e,t){var n=ie(this).val();return null==n?null:ie.isArray(n)?ie.map(n,function(e){return{name:t.name,value:e.replace(nt,"\r\n")}}):{name:t.name,value:n.replace(nt,"\r\n")}}).get()}}),ie.param=function(e,n){var r,a=[],i=function(e,t){t=ie.isFunction(t)?t():null==t?"":t,a[a.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(n===t&&(n=ie.ajaxSettings&&ie.ajaxSettings.traditional),ie.isArray(e)||e.jquery&&!ie.isPlainObject(e))ie.each(e,function(){i(this.name,this.value)});else for(r in e)S(r,e[r],n,i);return a.join("&").replace(et,"+")},ie.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){ie.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),ie.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var it,ot,st=ie.now(),dt=/\?/,pt=/#.*$/,lt=/([?&])_=[^&]*/,ct=/^(.*?):[ \t]*([^\r\n]*)$/gm,ht=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,ut=/^(?:GET|HEAD)$/,mt=/^\/\//,ft=/^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/,gt=ie.fn.load,yt={},bt={},vt="*/".concat("*");try{ot=B.href}catch(xt){ot=G.createElement("a"),ot.href="",ot=ot.href}it=ft.exec(ot.toLowerCase())||[],ie.fn.load=function(e,n,r){if("string"!=typeof e&&gt)return gt.apply(this,arguments);var a,i,o,s=this,d=e.indexOf(" ");return d>=0&&(a=e.slice(d),e=e.slice(0,d)),ie.isFunction(n)?(r=n,n=t):n&&"object"==typeof n&&(i="POST"),s.length>0&&ie.ajax({url:e,type:i,dataType:"html",data:n}).done(function(e){o=arguments,s.html(a?ie("<div>").append(ie.parseHTML(e)).find(a):e)}).complete(r&&function(e,t){s.each(r,o||[e.responseText,t,e])}),this},ie.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ie.fn[t]=function(e){return this.on(t,e)}}),ie.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ot,type:"GET",isLocal:ht.test(it[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":vt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":ie.parseJSON,"text xml":ie.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?N(N(e,ie.ajaxSettings),t):N(ie.ajaxSettings,e)},ajaxPrefilter:k(yt),ajaxTransport:k(bt),ajax:function(e,n){function r(e,n,r,s){var p,c,b,v,w,A=n;2!==x&&(x=2,d&&clearTimeout(d),a=t,o=s||"",T.readyState=e>0?4:0,p=e>=200&&300>e||304===e,r&&(v=I(h,T,r)),v=L(h,v,T,p),p?(h.ifModified&&(w=T.getResponseHeader("Last-Modified"),w&&(ie.lastModified[i]=w),w=T.getResponseHeader("etag"),w&&(ie.etag[i]=w)),204===e||"HEAD"===h.type?A="nocontent":304===e?A="notmodified":(A=v.state,c=v.data,b=v.error,p=!b)):(b=A,(e||!A)&&(A="error",0>e&&(e=0))),T.status=e,T.statusText=(n||A)+"",p?f.resolveWith(u,[c,A,T]):f.rejectWith(u,[T,A,b]),T.statusCode(y),y=t,l&&m.trigger(p?"ajaxSuccess":"ajaxError",[T,h,p?c:b]),g.fireWith(u,[T,A]),l&&(m.trigger("ajaxComplete",[T,h]),--ie.active||ie.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=t),n=n||{};var a,i,o,s,d,p,l,c,h=ie.ajaxSetup({},n),u=h.context||h,m=h.context&&(u.nodeType||u.jquery)?ie(u):ie.event,f=ie.Deferred(),g=ie.Callbacks("once memory"),y=h.statusCode||{},b={},v={},x=0,w="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(2===x){if(!s)for(s={};t=ct.exec(o);)s[t[1].toLowerCase()]=t[2];t=s[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===x?o:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return x||(e=v[n]=v[n]||e,b[e]=t),this},overrideMimeType:function(e){return x||(h.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>x)for(t in e)y[t]=[y[t],e[t]];else T.always(e[T.status]);return this},abort:function(e){var t=e||w;return a&&a.abort(t),r(0,t),this}};if(f.promise(T).complete=g.add,T.success=T.done,T.error=T.fail,h.url=((e||h.url||ot)+"").replace(pt,"").replace(mt,it[1]+"//"),h.type=n.method||n.type||h.method||h.type,h.dataTypes=ie.trim(h.dataType||"*").toLowerCase().match(se)||[""],null==h.crossDomain&&(p=ft.exec(h.url.toLowerCase()),h.crossDomain=!(!p||p[1]===it[1]&&p[2]===it[2]&&(p[3]||("http:"===p[1]?"80":"443"))===(it[3]||("http:"===it[1]?"80":"443")))),h.data&&h.processData&&"string"!=typeof h.data&&(h.data=ie.param(h.data,h.traditional)),E(yt,h,n,T),2===x)return T;l=h.global,l&&0===ie.active++&&ie.event.trigger("ajaxStart"),h.type=h.type.toUpperCase(),h.hasContent=!ut.test(h.type),i=h.url,h.hasContent||(h.data&&(i=h.url+=(dt.test(i)?"&":"?")+h.data,delete h.data),h.cache===!1&&(h.url=lt.test(i)?i.replace(lt,"$1_="+st++):i+(dt.test(i)?"&":"?")+"_="+st++)),h.ifModified&&(ie.lastModified[i]&&T.setRequestHeader("If-Modified-Since",ie.lastModified[i]),ie.etag[i]&&T.setRequestHeader("If-None-Match",ie.etag[i])),(h.data&&h.hasContent&&h.contentType!==!1||n.contentType)&&T.setRequestHeader("Content-Type",h.contentType),T.setRequestHeader("Accept",h.dataTypes[0]&&h.accepts[h.dataTypes[0]]?h.accepts[h.dataTypes[0]]+("*"!==h.dataTypes[0]?", "+vt+"; q=0.01":""):h.accepts["*"]);for(c in h.headers)T.setRequestHeader(c,h.headers[c]);if(h.beforeSend&&(h.beforeSend.call(u,T,h)===!1||2===x))return T.abort();w="abort";for(c in{success:1,error:1,complete:1})T[c](h[c]);if(a=E(bt,h,n,T)){T.readyState=1,l&&m.trigger("ajaxSend",[T,h]),h.async&&h.timeout>0&&(d=setTimeout(function(){T.abort("timeout")},h.timeout));try{x=1,a.send(b,r)}catch(A){if(!(2>x))throw A;r(-1,A)}}else r(-1,"No Transport");return T},getJSON:function(e,t,n){return ie.get(e,t,n,"json")},getScript:function(e,n){return ie.get(e,t,n,"script")}}),ie.each(["get","post"],function(e,n){ie[n]=function(e,r,a,i){return ie.isFunction(r)&&(i=i||a,a=r,r=t),ie.ajax({url:e,type:n,dataType:i,data:r,success:a})}}),ie.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return ie.globalEval(e),e}}}),ie.ajaxPrefilter("script",function(e){e.cache===t&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ie.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(r,a){t=ie("<script>").prop({async:!0,charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&a("error"===e.type?404:200,e.type)}),G.head.appendChild(t[0])},abort:function(){n&&n()}}}});var wt=[],Tt=/(=)\?(?=&|$)|\?\?/;ie.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=wt.pop()||ie.expando+"_"+st++;return this[e]=!0,e}}),ie.ajaxPrefilter("json jsonp",function(n,r,a){var i,o,s,d=n.jsonp!==!1&&(Tt.test(n.url)?"url":"string"==typeof n.data&&!(n.contentType||"").indexOf("application/x-www-form-urlencoded")&&Tt.test(n.data)&&"data");return d||"jsonp"===n.dataTypes[0]?(i=n.jsonpCallback=ie.isFunction(n.jsonpCallback)?n.jsonpCallback():n.jsonpCallback,d?n[d]=n[d].replace(Tt,"$1"+i):n.jsonp!==!1&&(n.url+=(dt.test(n.url)?"&":"?")+n.jsonp+"="+i),n.converters["script json"]=function(){return s||ie.error(i+" was not called"),s[0]},n.dataTypes[0]="json",o=e[i],e[i]=function(){s=arguments},a.always(function(){e[i]=o,n[i]&&(n.jsonpCallback=r.jsonpCallback,wt.push(i)),s&&ie.isFunction(o)&&o(s[0]),s=o=t}),"script"):void 0}),ie.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var At=ie.ajaxSettings.xhr(),Ct={0:200,1223:204},Pt=0,_t={};e.ActiveXObject&&ie(e).on("unload",function(){for(var e in _t)_t[e]();_t=t}),ie.support.cors=!!At&&"withCredentials"in At,ie.support.ajax=At=!!At,ie.ajaxTransport(function(e){var n;return ie.support.cors||At&&!e.crossDomain?{send:function(r,a){var i,o,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)s[i]=e.xhrFields[i];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(i in r)s.setRequestHeader(i,r[i]);n=function(e){return function(){n&&(delete _t[o],n=s.onload=s.onerror=null,"abort"===e?s.abort():"error"===e?a(s.status||404,s.statusText):a(Ct[s.status]||s.status,s.statusText,"string"==typeof s.responseText?{text:s.responseText}:t,s.getAllResponseHeaders()))}},s.onload=n(),s.onerror=n("error"),n=_t[o=Pt++]=n("abort"),s.send(e.hasContent&&e.data||null)},abort:function(){n&&n()}}:void 0});var St,kt,Et=/^(?:toggle|show|hide)$/,Nt=new RegExp("^(?:([+-])=|)("+oe+")([a-z%]*)$","i"),It=/queueHooks$/,Lt=[D],Mt={"*":[function(e,t){var n=this.createTween(e,t),r=n.cur(),a=Nt.exec(t),i=a&&a[3]||(ie.cssNumber[e]?"":"px"),o=(ie.cssNumber[e]||"px"!==i&&+r)&&Nt.exec(ie.css(n.elem,e)),s=1,d=20;if(o&&o[3]!==i){i=i||o[3],a=a||[],o=+r||1;do s=s||".5",o/=s,ie.style(n.elem,e,o+i);while(s!==(s=n.cur()/r)&&1!==s&&--d)}return a&&(o=n.start=+o||+r||0,n.unit=i,n.end=a[1]?o+(a[1]+1)*a[2]:+a[2]),n}]};ie.Animation=ie.extend(O,{tweener:function(e,t){ie.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,r=0,a=e.length;a>r;r++)n=e[r],Mt[n]=Mt[n]||[],Mt[n].unshift(t)},prefilter:function(e,t){t?Lt.unshift(e):Lt.push(e)}}),ie.Tween=H,H.prototype={constructor:H,init:function(e,t,n,r,a,i){this.elem=e,this.prop=n,this.easing=a||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=i||(ie.cssNumber[n]?"":"px")},cur:function(){var e=H.propHooks[this.prop];return e&&e.get?e.get(this):H.propHooks._default.get(this)},run:function(e){var t,n=H.propHooks[this.prop];return this.options.duration?this.pos=t=ie.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):H.propHooks._default.set(this),this}},H.prototype.init.prototype=H.prototype,H.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=ie.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){ie.fx.step[e.prop]?ie.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[ie.cssProps[e.prop]]||ie.cssHooks[e.prop])?ie.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},H.propHooks.scrollTop=H.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ie.each(["toggle","show","hide"],function(e,t){var n=ie.fn[t];ie.fn[t]=function(e,r,a){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(j(t,!0),e,r,a)}}),ie.fn.extend({fadeTo:function(e,t,n,r){return this.filter(v).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var a=ie.isEmptyObject(e),i=ie.speed(t,n,r),o=function(){var t=O(this,ie.extend({},e),i);(a||ge.get(this,"finish"))&&t.stop(!0)};return o.finish=o,a||i.queue===!1?this.each(o):this.queue(i.queue,o)},stop:function(e,n,r){var a=function(e){var t=e.stop;delete e.stop,t(r)};return"string"!=typeof e&&(r=n,n=e,e=t),n&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,n=null!=e&&e+"queueHooks",i=ie.timers,o=ge.get(this);if(n)o[n]&&o[n].stop&&a(o[n]);else for(n in o)o[n]&&o[n].stop&&It.test(n)&&a(o[n]);for(n=i.length;n--;)i[n].elem!==this||null!=e&&i[n].queue!==e||(i[n].anim.stop(r),t=!1,i.splice(n,1));(t||!r)&&ie.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=ge.get(this),r=n[e+"queue"],a=n[e+"queueHooks"],i=ie.timers,o=r?r.length:0;for(n.finish=!0,ie.queue(this,e,[]),a&&a.stop&&a.stop.call(this,!0),t=i.length;t--;)i[t].elem===this&&i[t].queue===e&&(i[t].anim.stop(!0),i.splice(t,1));for(t=0;o>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),ie.each({slideDown:j("show"),slideUp:j("hide"),slideToggle:j("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){ie.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),ie.speed=function(e,t,n){var r=e&&"object"==typeof e?ie.extend({},e):{complete:n||!n&&t||ie.isFunction(e)&&e,duration:e,easing:n&&t||t&&!ie.isFunction(t)&&t};return r.duration=ie.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in ie.fx.speeds?ie.fx.speeds[r.duration]:ie.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){ie.isFunction(r.old)&&r.old.call(this),r.queue&&ie.dequeue(this,r.queue)},r},ie.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},ie.timers=[],ie.fx=H.prototype.init,ie.fx.tick=function(){var e,n=ie.timers,r=0;for(St=ie.now();r<n.length;r++)e=n[r],e()||n[r]!==e||n.splice(r--,1);n.length||ie.fx.stop(),St=t},ie.fx.timer=function(e){e()&&ie.timers.push(e)&&ie.fx.start()},ie.fx.interval=13,ie.fx.start=function(){kt||(kt=setInterval(ie.fx.tick,ie.fx.interval))},ie.fx.stop=function(){clearInterval(kt),kt=null},ie.fx.speeds={slow:600,fast:200,_default:400},ie.fx.step={},ie.expr&&ie.expr.filters&&(ie.expr.filters.animated=function(e){return ie.grep(ie.timers,function(t){return e===t.elem}).length}),ie.fn.offset=function(e){if(arguments.length)return e===t?this:this.each(function(t){ie.offset.setOffset(this,e,t)});var n,r,a=this[0],i={top:0,left:0},o=a&&a.ownerDocument;if(o)return n=o.documentElement,ie.contains(n,a)?(typeof a.getBoundingClientRect!==z&&(i=a.getBoundingClientRect()),r=V(o),{top:i.top+r.pageYOffset-n.clientTop,left:i.left+r.pageXOffset-n.clientLeft}):i},ie.offset={setOffset:function(e,t,n){var r,a,i,o,s,d,p,l=ie.css(e,"position"),c=ie(e),h={};"static"===l&&(e.style.position="relative"),s=c.offset(),i=ie.css(e,"top"),d=ie.css(e,"left"),p=("absolute"===l||"fixed"===l)&&(i+d).indexOf("auto")>-1,p?(r=c.position(),o=r.top,a=r.left):(o=parseFloat(i)||0,a=parseFloat(d)||0),ie.isFunction(t)&&(t=t.call(e,n,s)),null!=t.top&&(h.top=t.top-s.top+o),null!=t.left&&(h.left=t.left-s.left+a),"using"in t?t.using.call(e,h):c.css(h)}},ie.fn.extend({position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return"fixed"===ie.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),ie.nodeName(e[0],"html")||(r=e.offset()),r.top+=ie.css(e[0],"borderTopWidth",!0),r.left+=ie.css(e[0],"borderLeftWidth",!0)),{top:t.top-r.top-ie.css(n,"marginTop",!0),left:t.left-r.left-ie.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||$;e&&!ie.nodeName(e,"html")&&"static"===ie.css(e,"position");)e=e.offsetParent;return e||$})}}),ie.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(n,r){var a="pageYOffset"===r;ie.fn[n]=function(i){return ie.access(this,function(n,i,o){var s=V(n);return o===t?s?s[r]:n[i]:void(s?s.scrollTo(a?e.pageXOffset:o,a?o:e.pageYOffset):n[i]=o)},n,i,arguments.length,null)}}),ie.each({Height:"height",Width:"width"},function(e,n){ie.each({padding:"inner"+e,content:n,"":"outer"+e},function(r,a){ie.fn[a]=function(a,i){var o=arguments.length&&(r||"boolean"!=typeof a),s=r||(a===!0||i===!0?"margin":"border");return ie.access(this,function(n,r,a){var i;return ie.isWindow(n)?n.document.documentElement["client"+e]:9===n.nodeType?(i=n.documentElement,Math.max(n.body["scroll"+e],i["scroll"+e],n.body["offset"+e],i["offset"+e],i["client"+e])):a===t?ie.css(n,r,s):ie.style(n,r,a,s)},n,o?a:t,o,null)}})}),ie.fn.size=function(){return this.length},ie.fn.andSelf=ie.fn.addBack,"object"==typeof module&&module&&"object"==typeof module.exports?module.exports=ie:"function"==typeof define&&define.amd&&define("jquery",[],function(){return ie}),"object"==typeof e&&"object"==typeof e.document&&(e.jQuery=e.$=ie)}(window),function(e,t){"function"==typeof define&&define.amd?define("nprogress",t):"object"==typeof exports?module.exports=t():e.NProgress=t()}(this,function(){function e(e,t,n){return t>e?t:e>n?n:e}function t(e){return 100*(-1+e)}function n(e,n,r){var a;return a="translate3d"===p.positionUsing?{transform:"translate3d("+t(e)+"%,0,0)"}:"translate"===p.positionUsing?{transform:"translate("+t(e)+"%,0)"}:{"margin-left":t(e)+"%"},a.transition="all "+n+"ms "+r,a}function r(e,t){var n="string"==typeof e?e:o(e);return n.indexOf(" "+t+" ")>=0}function a(e,t){var n=o(e),a=n+t;r(n,t)||(e.className=a.substring(1))}function i(e,t){var n,a=o(e);r(e,t)&&(n=a.replace(" "+t+" "," "),e.className=n.substring(1,n.length-1))}function o(e){return(" "+(e.className||"")+" ").replace(/\s+/gi," ")}function s(e){e&&e.parentNode&&e.parentNode.removeChild(e)}var d={};d.version="0.2.0";var p=d.settings={minimum:.08,easing:"ease",positionUsing:"",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,showSpinner:!0,barSelector:'[role="bar"]',spinnerSelector:'[role="spinner"]',parent:"body",template:'<div class="bar" role="bar"><div class="peg"></div></div><div class="spinner" role="spinner"><div class="spinner-icon"></div></div>'};d.configure=function(e){var t,n;for(t in e)n=e[t],void 0!==n&&e.hasOwnProperty(t)&&(p[t]=n);return this},d.status=null,d.set=function(t){var r=d.isStarted();t=e(t,p.minimum,1),d.status=1===t?null:t;var a=d.render(!r),i=a.querySelector(p.barSelector),o=p.speed,s=p.easing;return a.offsetWidth,l(function(e){""===p.positionUsing&&(p.positionUsing=d.getPositioningCSS()),c(i,n(t,o,s)),1===t?(c(a,{transition:"none",opacity:1}),a.offsetWidth,setTimeout(function(){c(a,{transition:"all "+o+"ms linear",opacity:0}),setTimeout(function(){d.remove(),e()},o)},o)):setTimeout(e,o)}),this},d.isStarted=function(){return"number"==typeof d.status},d.start=function(){d.status||d.set(0);var e=function(){setTimeout(function(){d.status&&(d.trickle(),e())},p.trickleSpeed)};return p.trickle&&e(),this},d.done=function(e){return e||d.status?d.inc(.3+.5*Math.random()).set(1):this},d.inc=function(t){var n=d.status;return n?("number"!=typeof t&&(t=(1-n)*e(Math.random()*n,.1,.95)),n=e(n+t,0,.994),d.set(n)):d.start()},d.trickle=function(){return d.inc(Math.random()*p.trickleRate)},function(){var e=0,t=0;d.promise=function(n){return n&&"resolved"!==n.state()?(0===t&&d.start(),e++,t++,n.always(function(){t--,0===t?(e=0,d.done()):d.set((e-t)/e)}),this):this}}(),d.render=function(e){if(d.isRendered())return document.getElementById("nprogress");a(document.documentElement,"nprogress-busy");var n=document.createElement("div");n.id="nprogress",n.innerHTML=p.template;var r,i=n.querySelector(p.barSelector),o=e?"-100":t(d.status||0),l=document.querySelector(p.parent);return c(i,{transition:"all 0 linear",transform:"translate3d("+o+"%,0,0)"}),p.showSpinner||(r=n.querySelector(p.spinnerSelector),r&&s(r)),l!=document.body&&a(l,"nprogress-custom-parent"),l.appendChild(n),n},d.remove=function(){i(document.documentElement,"nprogress-busy"),i(document.querySelector(p.parent),"nprogress-custom-parent");var e=document.getElementById("nprogress");e&&s(e)},d.isRendered=function(){return!!document.getElementById("nprogress")},d.getPositioningCSS=function(){var e=document.body.style,t="WebkitTransform"in e?"Webkit":"MozTransform"in e?"Moz":"msTransform"in e?"ms":"OTransform"in e?"O":"";return t+"Perspective"in e?"translate3d":t+"Transform"in e?"translate":"margin"};var l=function(){function e(){var n=t.shift();n&&n(e)}var t=[];return function(n){t.push(n),1==t.length&&e()}}(),c=function(){function e(e){return e.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(e,t){return t.toUpperCase()})}function t(e){var t=document.body.style;if(e in t)return e;for(var n,r=a.length,i=e.charAt(0).toUpperCase()+e.slice(1);r--;)if(n=a[r]+i,n in t)return n;return e}function n(n){return n=e(n),i[n]||(i[n]=t(n))}function r(e,t,r){t=n(t),e.style[t]=r}var a=["Webkit","O","Moz","ms"],i={};return function(e,t){var n,a,i=arguments;if(2==i.length)for(n in t)a=t[n],void 0!==a&&t.hasOwnProperty(n)&&r(e,n,a);else r(e,i[1],i[2])}}();return d});var IN_GLOBAL_SCOPE=!0;window.PR_SHOULD_USE_CONTINUATION=!0;var prettyPrintOne,prettyPrint;!function(){function e(e){function t(e){var t=e.charCodeAt(0);if(92!==t)return t;var n=e.charAt(1);return t=c[n],t?t:n>="0"&&"7">=n?parseInt(e.substring(1),8):"u"===n||"x"===n?parseInt(e.substring(2),16):e.charCodeAt(1)}function n(e){if(32>e)return(16>e?"\\x0":"\\x")+e.toString(16);var t=String.fromCharCode(e);return"\\"===t||"-"===t||"]"===t||"^"===t?"\\"+t:t}function r(e){var r=e.substring(1,e.length-1).match(new RegExp("\\\\u[0-9A-Fa-f]{4}|\\\\x[0-9A-Fa-f]{2}|\\\\[0-3][0-7]{0,2}|\\\\[0-7]{1,2}|\\\\[\\s\\S]|-|[^-\\\\]","g")),a=[],i="^"===r[0],o=["["];i&&o.push("^");for(var s=i?1:0,d=r.length;d>s;++s){var p=r[s];if(/\\[bdsw]/i.test(p))o.push(p);else{var l,c=t(p);d>s+2&&"-"===r[s+1]?(l=t(r[s+2]),s+=2):l=c,a.push([c,l]),65>l||c>122||(65>l||c>90||a.push([32|Math.max(65,c),32|Math.min(l,90)]),97>l||c>122||a.push([-33&Math.max(97,c),-33&Math.min(l,122)]))}}a.sort(function(e,t){return e[0]-t[0]||t[1]-e[1]});for(var h=[],u=[],s=0;s<a.length;++s){var m=a[s];m[0]<=u[1]+1?u[1]=Math.max(u[1],m[1]):h.push(u=m)}for(var s=0;s<h.length;++s){var m=h[s];o.push(n(m[0])),m[1]>m[0]&&(m[1]+1>m[0]&&o.push("-"),o.push(n(m[1])))}return o.push("]"),o.join("")}function a(e){for(var t=e.source.match(new RegExp("(?:\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]|\\\\u[A-Fa-f0-9]{4}|\\\\x[A-Fa-f0-9]{2}|\\\\[0-9]+|\\\\[^ux0-9]|\\(\\?[:!=]|[\\(\\)\\^]|[^\\x5B\\x5C\\(\\)\\^]+)","g")),a=t.length,s=[],d=0,p=0;a>d;++d){var l=t[d];if("("===l)++p;else if("\\"===l.charAt(0)){var c=+l.substring(1);c&&(p>=c?s[c]=-1:t[d]=n(c))}}for(var d=1;d<s.length;++d)-1===s[d]&&(s[d]=++i);for(var d=0,p=0;a>d;++d){var l=t[d];if("("===l)++p,s[p]||(t[d]="(?:");else if("\\"===l.charAt(0)){var c=+l.substring(1);c&&p>=c&&(t[d]="\\"+s[c])}}for(var d=0;a>d;++d)"^"===t[d]&&"^"!==t[d+1]&&(t[d]="");if(e.ignoreCase&&o)for(var d=0;a>d;++d){var l=t[d],h=l.charAt(0);l.length>=2&&"["===h?t[d]=r(l):"\\"!==h&&(t[d]=l.replace(/[a-zA-Z]/g,function(e){var t=e.charCodeAt(0);return"["+String.fromCharCode(-33&t,32|t)+"]"}))}return t.join("")}for(var i=0,o=!1,s=!1,d=0,p=e.length;p>d;++d){var l=e[d];if(l.ignoreCase)s=!0;else if(/[a-z]/i.test(l.source.replace(/\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi,""))){o=!0,s=!1;break}}for(var c={b:8,t:9,n:10,v:11,f:12,r:13},h=[],d=0,p=e.length;p>d;++d){var l=e[d];if(l.global||l.multiline)throw new Error(""+l);h.push("(?:"+a(l)+")")}return new RegExp(h.join("|"),s?"gi":"g")}function t(e,t){function n(e){var d=e.nodeType;if(1==d){if(r.test(e.className))return;for(var p=e.firstChild;p;p=p.nextSibling)n(p);var l=e.nodeName.toLowerCase();("br"===l||"li"===l)&&(a[s]="\n",o[s<<1]=i++,o[s++<<1|1]=e)}else if(3==d||4==d){var c=e.nodeValue;c.length&&(c=t?c.replace(/\r\n?/g,"\n"):c.replace(/[ \t\r\n]+/g," "),a[s]=c,o[s<<1]=i,i+=c.length,o[s++<<1|1]=e)}}var r=/(?:^|\s)nocode(?:\s|$)/,a=[],i=0,o=[],s=0;return n(e),{sourceCode:a.join("").replace(/\n$/,""),spans:o}}function n(e,t,n,r){if(t){var a={sourceCode:t,basePos:e};n(a),r.push.apply(r,a.decorations)}}function r(e){for(var t=void 0,n=e.firstChild;n;n=n.nextSibling){var r=n.nodeType;t=1===r?t?e:n:3===r&&z.test(n.nodeValue)?e:t}return t===e?void 0:t}function a(t,r){var a,i={};!function(){for(var n=t.concat(r),o=[],s={},d=0,p=n.length;p>d;++d){var l=n[d],c=l[3];if(c)for(var h=c.length;--h>=0;)i[c.charAt(h)]=l;var u=l[1],m=""+u;s.hasOwnProperty(m)||(o.push(u),s[m]=null)}o.push(/[\0-\uffff]/),a=e(o)}();var o=r.length,s=function(e){for(var t=e.sourceCode,d=e.basePos,l=[d,O],c=0,h=t.match(a)||[],u={},m=0,f=h.length;f>m;++m){var g,y=h[m],b=u[y],v=void 0;if("string"==typeof b)g=!1;else{var x=i[y.charAt(0)];if(x)v=y.match(x[1]),b=x[0];else{for(var w=0;o>w;++w)if(x=r[w],v=y.match(x[1])){b=x[0];break}v||(b=O)}g=b.length>=5&&"lang-"===b.substring(0,5),!g||v&&"string"==typeof v[1]||(g=!1,b=H),g||(u[y]=b)}var T=c;if(c+=y.length,g){var A=v[1],C=y.indexOf(A),P=C+A.length;v[2]&&(P=y.length-v[2].length,C=P-A.length);var _=b.substring(5);n(d+T,y.substring(0,C),s,l),n(d+T+C,A,p(_,A),l),n(d+T+P,y.substring(P),s,l)}else l.push(d+T,b)}e.decorations=l};return s}function i(e){var t=[],n=[];e.tripleQuotedStrings?t.push([E,/^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,null,"'\""]):e.multiLineStrings?t.push([E,/^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,null,"'\"`"]):t.push([E,/^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,null,"\"'"]),e.verbatimStrings&&n.push([E,/^@\"(?:[^\"]|\"\")*(?:\"|$)/,null]);var r=e.hashComments;r&&(e.cStyleComments?(r>1?t.push([I,/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,null,"#"]):t.push([I,/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,null,"#"]),n.push([E,/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,null])):t.push([I,/^#[^\r\n]*/,null,"#"])),e.cStyleComments&&(n.push([I,/^\/\/[^\r\n]*/,null]),n.push([I,/^\/\*[\s\S]*?(?:\*\/|$)/,null]));var i=e.regexLiterals;if(i){var o=i>1?"":"\n\r",s=o?".":"[\\S\\s]",d="/(?=[^/*"+o+"])(?:[^/\\x5B\\x5C"+o+"]|\\x5C"+s+"|\\x5B(?:[^\\x5C\\x5D"+o+"]|\\x5C"+s+")*(?:\\x5D|$))+/";n.push(["lang-regex",RegExp("^"+U+"("+d+")")])}var p=e.types;p&&n.push([L,p]);var l=(""+e.keywords).replace(/^ | $/g,"");l.length&&n.push([N,new RegExp("^(?:"+l.replace(/[\s,]+/g,"|")+")\\b"),null]),t.push([O,/^\s+/,null," \r\n	 "]);var c="^.[^\\s\\w.$@'\"`/\\\\]*";return e.regexLiterals&&(c+="(?!s*/)"),n.push([M,/^@[a-z_$][a-z_$@0-9]*/i,null],[L,/^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/,null],[O,/^[a-z_$][a-z_$@0-9]*/i,null],[M,new RegExp("^(?:0x[a-f0-9]+|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)(?:e[+\\-]?\\d+)?)[a-z]*","i"),null,"0123456789"],[O,/^\\[\s\S]?/,null],[R,new RegExp(c),null]),
a(t,n)}function o(e,t,n){function r(e){var t=e.nodeType;if(1!=t||i.test(e.className)){if((3==t||4==t)&&n){var d=e.nodeValue,p=d.match(o);if(p){var l=d.substring(0,p.index);e.nodeValue=l;var c=d.substring(p.index+p[0].length);if(c){var h=e.parentNode;h.insertBefore(s.createTextNode(c),e.nextSibling)}a(e),l||e.parentNode.removeChild(e)}}}else if("br"===e.nodeName)a(e),e.parentNode&&e.parentNode.removeChild(e);else for(var u=e.firstChild;u;u=u.nextSibling)r(u)}function a(e){function t(e,n){var r=n?e.cloneNode(!1):e,a=e.parentNode;if(a){var i=t(a,1),o=e.nextSibling;i.appendChild(r);for(var s=o;s;s=o)o=s.nextSibling,i.appendChild(s)}return r}for(;!e.nextSibling;)if(e=e.parentNode,!e)return;for(var n,r=t(e.nextSibling,0);(n=r.parentNode)&&1===n.nodeType;)r=n;p.push(r)}for(var i=/(?:^|\s)nocode(?:\s|$)/,o=/\r\n?|\n/,s=e.ownerDocument,d=s.createElement("li");e.firstChild;)d.appendChild(e.firstChild);for(var p=[d],l=0;l<p.length;++l)r(p[l]);t===(0|t)&&p[0].setAttribute("value",t);var c=s.createElement("ol");c.className="linenums";for(var h=Math.max(0,t-1|0)||0,l=0,u=p.length;u>l;++l)d=p[l],d.className="L"+(l+h)%10,d.firstChild||d.appendChild(s.createTextNode(" ")),c.appendChild(d);e.appendChild(c)}function s(e){var t=/\bMSIE\s(\d+)/.exec(navigator.userAgent);t=t&&+t[1]<=8;var n=/\n/g,r=e.sourceCode,a=r.length,i=0,o=e.spans,s=o.length,d=0,p=e.decorations,l=p.length,c=0;p[l]=a;var h,u;for(u=h=0;l>u;)p[u]!==p[u+2]?(p[h++]=p[u++],p[h++]=p[u++]):u+=2;for(l=h,u=h=0;l>u;){for(var m=p[u],f=p[u+1],g=u+2;l>=g+2&&p[g+1]===f;)g+=2;p[h++]=m,p[h++]=f,u=g}l=p.length=h;var y,b=e.sourceNode;b&&(y=b.style.display,b.style.display="none");try{for(;s>d;){var v,x=(o[d],o[d+2]||a),w=p[c+2]||a,g=Math.min(x,w),T=o[d+1];if(1!==T.nodeType&&(v=r.substring(i,g))){t&&(v=v.replace(n,"\r")),T.nodeValue=v;var A=T.ownerDocument,C=A.createElement("span");C.className=p[c+1];var P=T.parentNode;P.replaceChild(C,T),C.appendChild(T),x>i&&(o[d+1]=T=A.createTextNode(r.substring(g,x)),P.insertBefore(T,C.nextSibling))}i=g,i>=x&&(d+=2),i>=w&&(c+=2)}}finally{b&&(b.style.display=y)}}function d(e,t){for(var n=t.length;--n>=0;){var r=t[n];G.hasOwnProperty(r)?u.console&&console.warn("cannot override language handler %s",r):G[r]=e}}function p(e,t){return e&&G.hasOwnProperty(e)||(e=/^\s*</.test(t)?"default-markup":"default-code"),G[e]}function l(e){var n=e.langExtension;try{var r=t(e.sourceNode,e.pre),a=r.sourceCode;e.sourceCode=a,e.spans=r.spans,e.basePos=0,p(n,a)(e),s(e)}catch(i){u.console&&console.log(i&&i.stack||i)}}function c(e,t,n){var r=document.createElement("div");r.innerHTML="<pre>"+e+"</pre>",r=r.firstChild,n&&o(r,n,!0);var a={langExtension:t,numberLines:n,sourceNode:r,pre:1};return l(a),r.innerHTML}function h(e,t){function n(e){return i.getElementsByTagName(e)}function a(){for(var t=u.PR_SHOULD_USE_CONTINUATION?f.now()+250:1/0;y<p.length&&f.now()<t;y++){for(var n=p[y],i=C,d=n;d=d.previousSibling;){var c=d.nodeType,h=(7===c||8===c)&&d.nodeValue;if(h?!/^\??prettify\b/.test(h):3!==c||/\S/.test(d.nodeValue))break;if(h){i={},h.replace(/\b(\w+)=([\w:.%+-]+)/g,function(e,t,n){i[t]=n});break}}var m=n.className;if((i!==C||v.test(m))&&!x.test(m)){for(var P=!1,_=n.parentNode;_;_=_.parentNode){var S=_.tagName;if(A.test(S)&&_.className&&v.test(_.className)){P=!0;break}}if(!P){n.className+=" prettyprinted";var k=i.lang;if(!k){k=m.match(b);var E;!k&&(E=r(n))&&T.test(E.tagName)&&(k=E.className.match(b)),k&&(k=k[1])}var N;if(w.test(n.tagName))N=1;else{var I=n.currentStyle,L=s.defaultView,M=I?I.whiteSpace:L&&L.getComputedStyle?L.getComputedStyle(n,null).getPropertyValue("white-space"):0;N=M&&"pre"===M.substring(0,3)}var R=i.linenums;(R="true"===R||+R)||(R=m.match(/\blinenums\b(?::(\d+))?/),R=R?R[1]&&R[1].length?+R[1]:!0:!1),R&&o(n,R,N),g={langExtension:k,sourceNode:n,numberLines:R,pre:N},l(g)}}}y<p.length?setTimeout(a,250):"function"==typeof e&&e()}for(var i=t||document.body,s=i.ownerDocument||document,d=[n("pre"),n("code"),n("xmp")],p=[],c=0;c<d.length;++c)for(var h=0,m=d[c].length;m>h;++h)p.push(d[c][h]);d=null;var f=Date;f.now||(f={now:function(){return+new Date}});var g,y=0,b=/\blang(?:uage)?-([\w.]+)(?!\S)/,v=/\bprettyprint\b/,x=/\bprettyprinted\b/,w=/pre|xmp/i,T=/^code$/i,A=/^(?:pre|code|xmp)$/i,C={};a()}var u=window,m=["break,continue,do,else,for,if,return,while"],f=[m,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],g=[f,"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],y=[g,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],b=[g,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],v=[b,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],x="all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",w=[g,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],T="caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",A=[m,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],C=[m,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],P=[m,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],_=[m,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],S=[y,v,w,T,A,C,_],k=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,E="str",N="kwd",I="com",L="typ",M="lit",R="pun",O="pln",q="tag",D="dec",H="src",j="atn",V="atv",F="nocode",U="(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*",z=/\S/,B=i({keywords:S,hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),G={};d(B,["default-code"]),d(a([],[[O,/^[^<?]+/],[D,/^<!\w[^>]*(?:>|$)/],[I,/^<\!--[\s\S]*?(?:-\->|$)/],["lang-",/^<\?([\s\S]+?)(?:\?>|$)/],["lang-",/^<%([\s\S]+?)(?:%>|$)/],[R,/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]),d(a([[O,/^[\s]+/,null," 	\r\n"],[V,/^(?:\"[^\"]*\"?|\'[^\']*\'?)/,null,"\"'"]],[[q,/^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],[j,/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],[R,/^[=<>\/]+/],["lang-js",/^on\w+\s*=\s*\"([^\"]+)\"/i],["lang-js",/^on\w+\s*=\s*\'([^\']+)\'/i],["lang-js",/^on\w+\s*=\s*([^\"\'>\s]+)/i],["lang-css",/^style\s*=\s*\"([^\"]+)\"/i],["lang-css",/^style\s*=\s*\'([^\']+)\'/i],["lang-css",/^style\s*=\s*([^\"\'>\s]+)/i]]),["in.tag"]),d(a([],[[V,/^[\s\S]+/]]),["uq.val"]),d(i({keywords:y,hashComments:!0,cStyleComments:!0,types:k}),["c","cc","cpp","cxx","cyc","m"]),d(i({keywords:"null,true,false"}),["json"]),d(i({keywords:v,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:k}),["cs"]),d(i({keywords:b,cStyleComments:!0}),["java"]),d(i({keywords:_,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]),d(i({keywords:A,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]),d(i({keywords:T,hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]),d(i({keywords:C,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]),d(i({keywords:w,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]),d(i({keywords:x,hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]),d(i({keywords:P,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]),d(a([],[[E,/^[\s\S]+/]]),["regex"]);var $=u.PR={createSimpleLexer:a,registerLangHandler:d,sourceDecorator:i,PR_ATTRIB_NAME:j,PR_ATTRIB_VALUE:V,PR_COMMENT:I,PR_DECLARATION:D,PR_KEYWORD:N,PR_LITERAL:M,PR_NOCODE:F,PR_PLAIN:O,PR_PUNCTUATION:R,PR_SOURCE:H,PR_STRING:E,PR_TAG:q,PR_TYPE:L,prettyPrintOne:IN_GLOBAL_SCOPE?u.prettyPrintOne=c:prettyPrintOne=c,prettyPrint:prettyPrint=IN_GLOBAL_SCOPE?u.prettyPrint=h:prettyPrint=h};"function"==typeof define&&define.amd&&define("google-code-prettify",[],function(){return $})}(),define("prettify",function(){});var fixto=function(e,t,n){function r(){this._vendor=null}function a(){var e=!1,t=n.createElement("div"),r=n.createElement("div");t.appendChild(r),t.style[u]="translate(0)",t.style.marginTop="10px",t.style.visibility="hidden",r.style.position="fixed",r.style.top=0,n.body.appendChild(t);var a=r.getBoundingClientRect();return a.top>0&&(e=!0),n.body.removeChild(t),e}function i(t,n,r){this.child=t,this._$child=e(t),this.parent=n,this.options={className:"fixto-fixed",top:0},this._setOptions(r)}function o(e,t,n){i.call(this,e,t,n),this._replacer=new p.MimicNode(e),this._ghostNode=this._replacer.replacer,this._saveStyles(),this._saveViewportHeight(),this._proxied_onscroll=this._bind(this._onscroll,this),this._proxied_onresize=this._bind(this._onresize,this),this.start()}function s(e,t,n){i.call(this,e,t,n),this.start()}var d=function(){var e={getAll:function(e){return n.defaultView.getComputedStyle(e)},get:function(e,t){return this.getAll(e)[t]},toFloat:function(e){return parseFloat(e,10)||0},getFloat:function(e,t){return this.toFloat(this.get(e,t))},_getAllCurrentStyle:function(e){return e.currentStyle}};return n.documentElement.currentStyle&&(e.getAll=e._getAllCurrentStyle),e}(),p=function(){function t(e){this.element=e,this.replacer=n.createElement("div"),this.replacer.style.visibility="hidden",this.hide(),e.parentNode.insertBefore(this.replacer,e)}t.prototype={replace:function(){var e=this.replacer.style,t=d.getAll(this.element);e.width=this._width(),e.height=this._height(),e.marginTop=t.marginTop,e.marginBottom=t.marginBottom,e.marginLeft=t.marginLeft,e.marginRight=t.marginRight,e.cssFloat=t.cssFloat,e.styleFloat=t.styleFloat,e.position=t.position,e.top=t.top,e.right=t.right,e.bottom=t.bottom,e.left=t.left,e.display=t.display},hide:function(){this.replacer.style.display="none"},_width:function(){return this.element.getBoundingClientRect().width+"px"},_widthOffset:function(){return this.element.offsetWidth+"px"},_height:function(){return this.element.getBoundingClientRect().height+"px"},_heightOffset:function(){return this.element.offsetHeight+"px"},destroy:function(){e(this.replacer).remove();for(var t in this)this.hasOwnProperty(t)&&(this[t]=null)}};var r=n.documentElement.getBoundingClientRect();return r.width||(t.prototype._width=t.prototype._widthOffset,t.prototype._height=t.prototype._heightOffset),{MimicNode:t,computedStyle:d}}();r.prototype={_vendors:{webkit:{cssPrefix:"-webkit-",jsPrefix:"Webkit"},moz:{cssPrefix:"-moz-",jsPrefix:"Moz"},ms:{cssPrefix:"-ms-",jsPrefix:"ms"},opera:{cssPrefix:"-o-",jsPrefix:"O"}},_prefixJsProperty:function(e,t){return e.jsPrefix+t[0].toUpperCase()+t.substr(1)},_prefixValue:function(e,t){return e.cssPrefix+t},_valueSupported:function(e,t,n){try{return n.style[e]=t,n.style[e]===t}catch(r){return!1}},propertySupported:function(e){return void 0!==n.documentElement.style[e]},getJsProperty:function(e){if(this.propertySupported(e))return e;if(this._vendor)return this._prefixJsProperty(this._vendor,e);var t;for(var n in this._vendors)if(t=this._prefixJsProperty(this._vendors[n],e),this.propertySupported(t))return this._vendor=this._vendors[n],t;return null},getCssValue:function(e,t){var r=n.createElement("div"),a=this.getJsProperty(e);if(this._valueSupported(a,t,r))return t;var i;if(this._vendor&&(i=this._prefixValue(this._vendor,t),this._valueSupported(a,i,r)))return i;for(var o in this._vendors)if(i=this._prefixValue(this._vendors[o],t),this._valueSupported(a,i,r))return this._vendor=this._vendors[o],i;return null}};var l,c,h=new r,u=h.getJsProperty("transform"),m=h.getCssValue("position","sticky"),f=h.getCssValue("position","fixed"),g="Microsoft Internet Explorer"===navigator.appName;g&&(c=parseFloat(navigator.appVersion.split("MSIE")[1])),i.prototype={_mindtop:function(){var e=0;if(this._$mind)for(var t,n,r=0,a=this._$mind.length;a>r;r++)if(t=this._$mind[r],n=t.getBoundingClientRect(),n.height)e+=n.height;else{var i=d.getAll(t);e+=t.offsetHeight+d.toFloat(i.marginTop)+d.toFloat(i.marginBottom)}return e},stop:function(){this._stop(),this._running=!1},start:function(){this._running||(this._start(),this._running=!0)},destroy:function(){this.stop(),this._destroy(),this._$child.removeData("fixto-instance");for(var e in this)this.hasOwnProperty(e)&&(this[e]=null)},_setOptions:function(t){e.extend(this.options,t),this.options.mind&&(this._$mind=e(this.options.mind)),this.options.zIndex&&(this.child.style.zIndex=this.options.zIndex)},setOptions:function(e){this._setOptions(e),this.refresh()},_stop:function(){},_start:function(){},_destroy:function(){},refresh:function(){}},o.prototype=new i,e.extend(o.prototype,{_bind:function(e,t){return function(){return e.call(t)}},_toresize:8===c?n.documentElement:t,_onscroll:function(){if(this._scrollTop=n.documentElement.scrollTop||n.body.scrollTop,this._parentBottom=this.parent.offsetHeight+this._fullOffset("offsetTop",this.parent),this.options.mindBottomPadding!==!1&&(this._parentBottom-=d.getFloat(this.parent,"paddingBottom")),this.fixed){if(this._scrollTop>this._parentBottom||this._scrollTop<this._fullOffset("offsetTop",this._ghostNode)-this.options.top-this._mindtop())return void this._unfix();this._adjust()}else{var e=d.getAll(this.child);this._scrollTop<this._parentBottom&&this._scrollTop>this._fullOffset("offsetTop",this.child)-this.options.top-this._mindtop()&&this._viewportHeight>this.child.offsetHeight+d.toFloat(e.marginTop)+d.toFloat(e.marginBottom)&&(this._fix(),this._adjust())}},_adjust:function(){var e=0,t=this._mindtop(),n=0,r=d.getAll(this.child),a=null;l&&(a=this._getContext(),a&&(e=Math.abs(a.getBoundingClientRect().top))),n=this._parentBottom-this._scrollTop-(this.child.offsetHeight+d.toFloat(r.marginBottom)+t+this.options.top),n>0&&(n=0),this.child.style.top=n+t+e+this.options.top-d.toFloat(r.marginTop)+"px"},_fullOffset:function(e,t,n){for(var r=t[e],a=t.offsetParent;null!==a&&a!==n;)r+=a[e],a=a.offsetParent;return r},_getContext:function(){for(var e,t,r=this.child,a=null;!a;){if(e=r.parentNode,e===n.documentElement)return null;if(t=d.getAll(e),"none"!==t[u]){a=e;break}r=e}return a},_fix:function(){var e=this.child,t=e.style,r=d.getAll(e),a=e.getBoundingClientRect().left,i=r.width;if(this._saveStyles(),n.documentElement.currentStyle&&(i=e.offsetWidth-(d.toFloat(r.paddingLeft)+d.toFloat(r.paddingRight)+d.toFloat(r.borderLeftWidth)+d.toFloat(r.borderRightWidth))+"px"),l){var o=this._getContext();o&&(a=e.getBoundingClientRect().left-o.getBoundingClientRect().left)}this._replacer.replace(),t.left=a-d.toFloat(r.marginLeft)+"px",t.width=i,t.position="fixed",t.top=this._mindtop()+this.options.top-d.toFloat(r.marginTop)+"px",this._$child.addClass(this.options.className),this.fixed=!0},_unfix:function(){var e=this.child.style;this._replacer.hide(),e.position=this._childOriginalPosition,e.top=this._childOriginalTop,e.width=this._childOriginalWidth,e.left=this._childOriginalLeft,this._$child.removeClass(this.options.className),this.fixed=!1},_saveStyles:function(){var e=this.child.style;this._childOriginalPosition=e.position,this._childOriginalTop=e.top,this._childOriginalWidth=e.width,this._childOriginalLeft=e.left},_onresize:function(){this.refresh()},_saveViewportHeight:function(){this._viewportHeight=t.innerHeight||n.documentElement.clientHeight},_stop:function(){this._unfix(),e(t).unbind("scroll",this._proxied_onscroll),e(this._toresize).unbind("resize",this._proxied_onresize)},_start:function(){this._onscroll(),e(t).bind("scroll",this._proxied_onscroll),e(this._toresize).bind("resize",this._proxied_onresize)},_destroy:function(){this._replacer.destroy()},refresh:function(){this._saveViewportHeight(),this._unfix(),this._onscroll()}}),s.prototype=new i,e.extend(s.prototype,{_start:function(){var e=d.getAll(this.child);this._childOriginalPosition=e.position,this._childOriginalTop=e.top,this.child.style.position=m,this.refresh()},_stop:function(){this.child.style.position=this._childOriginalPosition,this.child.style.top=this._childOriginalTop},refresh:function(){this.child.style.top=this._mindtop()+this.options.top+"px"}});var y=function(e,t,n){return m&&!n||m&&n&&n.useNativeSticky!==!1?new s(e,t,n):f?(void 0===l&&(l=a()),new o(e,t,n)):"Neither fixed nor sticky positioning supported"};return 8>c&&(y=function(){return"not supported"}),e.fn.fixTo=function(t,n){var r=e(t),a=0;return this.each(function(){var i=e(this).data("fixto-instance");if(i){var o=t;i[o].call(i,n)}else e(this).data("fixto-instance",y(this,r[a],n));a++})},{FixToContainer:o,fixTo:y,computedStyle:d,mimicNode:p}}(window.jQuery,window,document);define("jquery.fixto",["jquery"],function(){}),+function(e){"use strict";function t(n,r){var a,i=e.proxy(this.process,this);this.$element=e(e(n).is("body")?window:n),this.$body=e("body"),this.$scrollElement=this.$element.on("scroll.bs.scroll-spy.data-api",i),this.options=e.extend({},t.DEFAULTS,r),this.selector=(this.options.target||(a=e(n).attr("href"))&&a.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.offsets=e([]),this.targets=e([]),this.activeTarget=null,this.refresh(),this.process()}t.DEFAULTS={offset:10},t.prototype.refresh=function(){var t=this.$element[0]==window?"offset":"position";this.offsets=e([]),this.targets=e([]);var n=this;this.$body.find(this.selector).map(function(){var r=e(this),a=r.data("target")||r.attr("href"),i=/^#\w/.test(a)&&e(a);return i&&i.length&&[[i[t]().top+(!e.isWindow(n.$scrollElement.get(0))&&n.$scrollElement.scrollTop()),a]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){n.offsets.push(this[0]),n.targets.push(this[1])})},t.prototype.process=function(){var e,t=this.$scrollElement.scrollTop()+this.options.offset,n=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,r=n-this.$scrollElement.height(),a=this.offsets,i=this.targets,o=this.activeTarget;if(t>=r)return o!=(e=i.last()[0])&&this.activate(e);for(e=a.length;e--;)o!=i[e]&&t>=a[e]&&(!a[e+1]||t<=a[e+1])&&this.activate(i[e])},t.prototype.activate=function(t){this.activeTarget=t,e(this.selector).parents(".active").removeClass("active");var n=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',r=e(n).parents("li").addClass("active");r.parent(".dropdown-menu").length&&(r=r.closest("li.dropdown").addClass("active")),r.trigger("activate.bs.scrollspy")};var n=e.fn.scrollspy;e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),a=r.data("bs.scrollspy"),i="object"==typeof n&&n;a||r.data("bs.scrollspy",a=new t(this,i)),"string"==typeof n&&a[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.noConflict=function(){return e.fn.scrollspy=n,this},e(window).on("load",function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(jQuery),define("bootstrap.scrollspy",["jquery"],function(){}),function(){define("modules/scrollspy",["bootstrap.scrollspy"],function(e){var t;return t=function(){function e(){}return e.prototype.init=function(e){return $("body").scrollspy({target:"#doc-navigation",offest:0}),e!==!0?$("#doc-navigation").on("activate.bs.scrollspy",function(e){var t,n,r,a,i,o;return n=$(e.currentTarget),t=n.find(".active"),a=$(".nav li"),a.removeClass("open-subnav"),t.addClass("open-subnav"),t.parents(".active")&&t.parents("li").removeClass("active").addClass("open-subnav"),i=t.find("> a").attr("href"),o=i.replace("#",""),r=$(i),r.attr("id",""),history.pushState?history.replaceState("",i,i):location.replace(i),r.attr("id",o)}):void 0},e}()})}.call(this),function(){define("modules/responsive-tables",["jquery"],function(e){var t;return t=function(t){return e(t).each(function(t,n){var r,a,i,o,s,d,p;return r=e(n),a=r.find("thead").find("th"),i=r.find("tbody").find("tr"),d=[],o=[],s={},a.each(function(t,n){return d[t]=e(n).text()}),i.each(function(t,n){return e(n).find("td").each(function(t,n){var r;return r=e(n).html(),s['"'+d[t]+'"']=r}),o.push(s),s={}}),p='<ul id="table-list-id-'+t+'" class="list-from-table" />',r.after(p),e.each(o,function(n,r){var a;return a='<li><dl id="entry-id-'+n+'"></dl></li>',e("#table-list-id-"+t).append(a),e.each(d,function(a,i){var o,s;return s="<dt>"+i+"</dt>",o="<dd>"+r['"'+i+'"']+"</dd>",e("#table-list-id-"+t).find("#entry-id-"+n).append(s+o)})})})}})}.call(this),function(){define("modules/process-documentation",["jquery","prettify","jquery.fixto","modules/scrollspy","modules/responsive-tables","nprogress"],function(e,t,n,r,a,i){var o;return o=function(){function t(e){this.options=e,this.options&&(this.elements=e.elements)}return t.prototype.isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),t.prototype.initFixTo=function(){var t;return t=this.elements,e(t.header).fixTo("body"),e(t.nav).fixTo("body",{mind:t.header}),e(t.humans).fixTo(".document",{mind:t.header}),e(t.machines).each(function(n,r){var a;return a=e(r).parents(".document"),e(r).fixTo(a,{mind:t.header})})},t.prototype.destroyFixTo=function(){var t;return t=this.elements,e(t.header).fixTo("destroy"),e(t.nav).fixTo("destroy")},t.prototype.scrollSpyController=function(t){var n,a,i,o,s,d,p=this;return"init"===t&&(d=new r),a=window.location.hash,n=e(this.elements.doc).find("img"),i=n.length,o=0,s=function(){return"init"===t?d.init():(e("body").scrollspy("refresh"),e(p.elements.nav).find('a[href="'+a+'"]').parent().addClass("active"))},this.scrollToHash(a,200),0===i?s():n.on("load",function(){return o++,o===i?s():void 0})},t.prototype.processHtml=function(){var t;return e("pre").addClass("prettyprint"),prettyPrint(),e(this.elements.doc).find("img").parent().addClass("center"),e(this.elements.doc).find("table").wrap('<div class="definitions" />'),t=e("h1").text(),e("title").text("Points - "+t),void 0===this.doc?e(this.elements.header).find("li:first").addClass("active"):e(this.elements.header).find('a:contains("'+t+'")').parent().addClass("active")},t.prototype.bindDocNavEvents=function(){var t=this;return e(this.elements.nav).find("a").on("click",function(n){var r;return n.preventDefault(),r=e(n.currentTarget).attr("href"),t.scrollToHash(r,0)})},t.prototype.scrollToHash=function(t,n){return t?e("html, body").animate({scrollTop:e(t).offset().top},n):void 0},t.prototype.bindHeaderNavEvents=function(){var t=this;return e(this.elements.header).find("a").on("click",function(n){var r,a,i,o;return history.pushState&&t.isMobile!==!0?(NProgress.start(),n.preventDefault(),r=e(n.currentTarget),a=e(t.elements.header).find(".active a").attr("href"),o=r.attr("href"),i=r.text,e(t.elements.header).find("li").removeClass("active"),r.parent().addClass("active"),e("body").removeClass("api-page"),history.pushState({url:a},i,o),e(t.elements.nav).empty(),e(t.elements.doc).empty(),window.scrollTo(0,0),t.reload(),NProgress.done()):void 0})},t.prototype.bindPopstate=function(){var t,n,r,a=this;return t=e(this.elements.header).find('a[href="'+r+'"]'),n=t.text(),r=t.attr("href"),history.pushState({url:r},n,r),e(window).on("popstate",function(t){return e(a.elements.header).find("li").removeClass("active"),e("body").removeClass("api-page"),e(a.elements.nav).empty(),e(a.elements.doc).empty(),a.reload()})},t.prototype.reload=function(){return this.destroyFixTo(),this.init(),this.scrollSpyController()},t.prototype.initProcess=function(){return this.processHtml(),a("table"),this.isMobile!==!0&&this.initFixTo(),this.bindDocNavEvents()},t}()})}.call(this),define("text",{}),define("json",{load:function(e){throw new Error("Dynamic load not allowed: "+e)}}),define("json!api-documents.json",function(){return{articles:[{title:"Documentation Overview",id:"documentation-overview",exampleId:"",parent:""},{title:"Release Notes",id:"release-notes",exampleId:"",parent:""},{title:"Accounts",id:"accounts",exampleId:"accounts-example",parent:""},{title:"Get an Account",id:"get-an-account",exampleId:"get-an-account-example",parent:"accounts"},{title:"Update an Account",id:"update-an-account",exampleId:"update-an-account-example",parent:"accounts"},{title:"Account Credentials",id:"account-credentials",exampleId:"account-credentials-example",parent:""},{title:"Create Account Credentials",id:"create-account-credentials",exampleId:"create-account-credentials-example",parent:"account-credentials"},{title:"Get Account Credentials",id:"get-account-credentials",exampleId:"get-account-credentials-example",parent:"account-credentials"},{title:"Delete Account Credentials",id:"delete-account-credentials",exampleId:"delete-account-credentials-example",parent:"account-credentials"},{title:"Account Permissions",id:"account-permissions",exampleId:"account-permissions-example",parent:""},{title:"Get Account Permissions",id:"get-account-permissions",exampleId:"get-account-permissions-example",parent:"account-permissions"},{title:"Update Account Permissions",id:"update-account-permissions",exampleId:"update-account-permissions-example",parent:"account-permissions"},{title:"Apps",id:"apps",exampleId:"apps-example",parent:""},{title:"Create an App",id:"create-an-app",exampleId:"create-an-app-example",parent:"apps"},{title:"Get an App",id:"get-an-app",exampleId:"get-an-app-example",parent:"apps"},{title:"Get an App by MAC Key Identifier",id:"get-an-app-by-mac",exampleId:"get-an-app-by-mac-example",parent:"apps"},{title:"List all Apps",id:"list-all-apps",exampleId:"list-all-apps-example",parent:"apps"},{title:"Credits",id:"credits",exampleId:"credits-example",parent:""},{title:"Create a Credit",id:"create-a-credit",exampleId:"create-a-credit-example",parent:"credits"},{title:"Get a Credit",id:"get-a-credit",exampleId:"get-a-credit-example",parent:"credits"},{title:"List all Credits",id:"list-all-credits",exampleId:"list-all-credits-example",parent:"credits"},{title:"Update a Credit",id:"update-a-credit",exampleId:"update-a-credit-example",parent:"credits"},{title:"Debits",id:"debits",exampleId:"debits-example",parent:""},{title:"Create a Debit",id:"create-a-debit",exampleId:"create-a-debit-example",parent:"debits"},{title:"Get a Debit",id:"get-a-debit",exampleId:"get-a-debit-example",parent:"debits"},{title:"List all Debits",id:"list-all-debits",exampleId:"list-all-debits-example",parent:"debits"},{title:"Update a Debit",id:"update-a-debit",exampleId:"update-a-debit-example",parent:"debits"},{title:"Live Credentials",id:"live-credentials",exampleId:"live-credentials-example",parent:""},{title:"Get Live Credentials",id:"get-live-credentials",exampleId:"get-live-credentials-example",parent:"live-credentials"},{title:"Live Permissions",id:"live-permissions",exampleId:"live-permissions-example",parent:""},{title:"Get Live Permissions",id:"get-live-permissions",exampleId:"get-live-permissions-example",parent:"live-permissions"},{title:"List all Live Permissions",id:"list-all-live-permissions",exampleId:"list-all-live-permissions-example",parent:"live-permissions"},{title:"Loyalty Programs (LPs)",id:"loyalty-programs",exampleId:"loyalty-programs-example",parent:""},{title:"Get an LP",id:"get-an-lp",exampleId:"get-an-lp-example",parent:"loyalty-programs"},{title:"List all LPs",id:"list-all-lps",exampleId:"list-all-lps-example",parent:"loyalty-programs"},{title:"Member Validations (MVs)",id:"member-validations",exampleId:"member-validations-example",parent:""},{title:"Create an MV",id:"create-a-mv",exampleId:"create-a-mv-example",parent:"member-validations"},{title:"Get an MV",id:"get-a-mv",exampleId:"get-a-mv-example",parent:"member-validations"},{title:"Update an MV",id:"update-a-mv",exampleId:"update-a-mv-example",parent:"member-validations"},{title:"MV Delegates",id:"mv-delegates",exampleId:"mv-delegates-example",parent:""},{title:"Create an MV Delegate",id:"create-a-mv-delegate",exampleId:"create-a-mv-delegate-example",parent:"mv-delegates"},{title:"Get an MV Delegate",id:"get-a-mv-delegate",exampleId:"get-a-mv-delegate-example",parent:"mv-delegates"},{title:"MV Request Schema",id:"mv-request-schema",exampleId:"mv-request-schema-example",parent:""},{title:"Get an MV Request Schema",id:"get-an-mv-request-schema",exampleId:"get-an-mv-request-schema-example",parent:"mv-request-schema"},{title:"Orders",id:"orders",exampleId:"orders-example",parent:""},{title:"Create an Order",id:"create-an-order",exampleId:"create-an-order-example",parent:"orders"},{title:"Get an order",id:"get-an-order",exampleId:"get-an-order-example",parent:"orders"},{title:"List all orders",id:"list-all-orders",exampleId:"list-all-orders-example",parent:"orders"},{title:"Update an order",id:"update-an-order",exampleId:"update-an-order-example",parent:"orders"},{title:"Sandbox Credentials",id:"sandbox-credentials",exampleId:"sandbox-credentials-example",parent:""},{title:"Get Sandbox Credentials",id:"get-sandbox-credentials",exampleId:"get-sandbox-credentials-example",parent:"sandbox-credentials"},{title:"Sandbox MVs",id:"sandbox-mvs",exampleId:"sandbox-mvs-example",parent:""},{title:"Get Sandbox MVs",id:"get-sandbox-mvs",exampleId:"get-sandbox-mvs-example",parent:"sandbox-mvs"},{title:"Sandbox Permissions",id:"sandbox-permissions",exampleId:"sandbox-permissions-example",parent:""},{title:"Create Sandbox Permissions",id:"create-sandbox-permissions",exampleId:"create-sandbox-permissions-example",parent:"sandbox-permissions"},{title:"Get Sandbox Permissions",id:"get-sandbox-permissions",exampleId:"get-sandbox-permissions-example",parent:"sandbox-permissions"},{title:"List all Sandbox Permissions",id:"list-all-sandbox-permissions",exampleId:"list-all-sandbox-permissions-example",parent:"sandbox-permissions"},{title:"Update Sandbox Permissions",id:"update-sandbox-permissions",exampleId:"update-sandbox-permissions-example",parent:"sandbox-permissions"},{title:"Delete Sandbox Permissions",id:"delete-sandbox-permissions",exampleId:"delete-sandbox-permissions-example",parent:"sandbox-permissions"}]}});var Handlebars={};!function(e,t){e.VERSION="1.0.0",e.COMPILER_REVISION=4,e.REVISION_CHANGES={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:">= 1.0.0"},e.helpers={},e.partials={};var n=Object.prototype.toString,r="[object Function]",a="[object Object]";e.registerHelper=function(t,r,i){if(n.call(t)===a){if(i||r)throw new e.Exception("Arg not supported with multiple helpers");e.Utils.extend(this.helpers,t)}else i&&(r.not=i),this.helpers[t]=r},e.registerPartial=function(t,r){n.call(t)===a?e.Utils.extend(this.partials,t):this.partials[t]=r},e.registerHelper("helperMissing",function(e){if(2===arguments.length)return t;throw new Error("Missing helper: '"+e+"'")}),e.registerHelper("blockHelperMissing",function(t,a){var i=a.inverse||function(){},o=a.fn,s=n.call(t);return s===r&&(t=t.call(this)),t===!0?o(this):t===!1||null==t?i(this):"[object Array]"===s?t.length>0?e.helpers.each(t,a):i(this):o(t)}),e.K=function(){},e.createFrame=Object.create||function(t){e.K.prototype=t;var n=new e.K;return e.K.prototype=null,n},e.logger={
DEBUG:0,INFO:1,WARN:2,ERROR:3,level:3,methodMap:{0:"debug",1:"info",2:"warn",3:"error"},log:function(t,n){if(e.logger.level<=t){var r=e.logger.methodMap[t];"undefined"!=typeof console&&console[r]&&console[r].call(console,n)}}},e.log=function(t,n){e.logger.log(t,n)},e.registerHelper("each",function(t,a){var i,o=a.fn,s=a.inverse,d=0,p="",l=n.call(t);if(l===r&&(t=t.call(this)),a.data&&(i=e.createFrame(a.data)),t&&"object"==typeof t)if(t instanceof Array)for(var c=t.length;c>d;d++)i&&(i.index=d),p+=o(t[d],{data:i});else for(var h in t)t.hasOwnProperty(h)&&(i&&(i.key=h),p+=o(t[h],{data:i}),d++);return 0===d&&(p=s(this)),p}),e.registerHelper("if",function(t,a){var i=n.call(t);return i===r&&(t=t.call(this)),!t||e.Utils.isEmpty(t)?a.inverse(this):a.fn(this)}),e.registerHelper("unless",function(t,n){return e.helpers["if"].call(this,t,{fn:n.inverse,inverse:n.fn})}),e.registerHelper("with",function(t,a){var i=n.call(t);return i===r&&(t=t.call(this)),e.Utils.isEmpty(t)?void 0:a.fn(t)}),e.registerHelper("log",function(t,n){var r=n.data&&null!=n.data.level?parseInt(n.data.level,10):1;e.log(r,t)});var i=function(){function e(){this.yy={}}var t={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,simpleInverse:6,statements:7,statement:8,openInverse:9,closeBlock:10,openBlock:11,mustache:12,partial:13,CONTENT:14,COMMENT:15,OPEN_BLOCK:16,inMustache:17,CLOSE:18,OPEN_INVERSE:19,OPEN_ENDBLOCK:20,path:21,OPEN:22,OPEN_UNESCAPED:23,CLOSE_UNESCAPED:24,OPEN_PARTIAL:25,partialName:26,params:27,hash:28,dataName:29,param:30,STRING:31,INTEGER:32,BOOLEAN:33,hashSegments:34,hashSegment:35,ID:36,EQUALS:37,DATA:38,pathSegments:39,SEP:40,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"CONTENT",15:"COMMENT",16:"OPEN_BLOCK",18:"CLOSE",19:"OPEN_INVERSE",20:"OPEN_ENDBLOCK",22:"OPEN",23:"OPEN_UNESCAPED",24:"CLOSE_UNESCAPED",25:"OPEN_PARTIAL",31:"STRING",32:"INTEGER",33:"BOOLEAN",36:"ID",37:"EQUALS",38:"DATA",40:"SEP"},productions_:[0,[3,2],[4,2],[4,3],[4,2],[4,1],[4,1],[4,0],[7,1],[7,2],[8,3],[8,3],[8,1],[8,1],[8,1],[8,1],[11,3],[9,3],[10,3],[12,3],[12,3],[13,3],[13,4],[6,2],[17,3],[17,2],[17,2],[17,1],[17,1],[27,2],[27,1],[30,1],[30,1],[30,1],[30,1],[30,1],[28,1],[34,2],[34,1],[35,3],[35,3],[35,3],[35,3],[35,3],[26,1],[26,1],[26,1],[29,2],[21,1],[39,3],[39,1]],performAction:function(e,t,n,r,a,i,o){var s=i.length-1;switch(a){case 1:return i[s-1];case 2:this.$=new r.ProgramNode([],i[s]);break;case 3:this.$=new r.ProgramNode(i[s-2],i[s]);break;case 4:this.$=new r.ProgramNode(i[s-1],[]);break;case 5:this.$=new r.ProgramNode(i[s]);break;case 6:this.$=new r.ProgramNode([],[]);break;case 7:this.$=new r.ProgramNode([]);break;case 8:this.$=[i[s]];break;case 9:i[s-1].push(i[s]),this.$=i[s-1];break;case 10:this.$=new r.BlockNode(i[s-2],i[s-1].inverse,i[s-1],i[s]);break;case 11:this.$=new r.BlockNode(i[s-2],i[s-1],i[s-1].inverse,i[s]);break;case 12:this.$=i[s];break;case 13:this.$=i[s];break;case 14:this.$=new r.ContentNode(i[s]);break;case 15:this.$=new r.CommentNode(i[s]);break;case 16:this.$=new r.MustacheNode(i[s-1][0],i[s-1][1]);break;case 17:this.$=new r.MustacheNode(i[s-1][0],i[s-1][1]);break;case 18:this.$=i[s-1];break;case 19:this.$=new r.MustacheNode(i[s-1][0],i[s-1][1],"&"===i[s-2][2]);break;case 20:this.$=new r.MustacheNode(i[s-1][0],i[s-1][1],!0);break;case 21:this.$=new r.PartialNode(i[s-1]);break;case 22:this.$=new r.PartialNode(i[s-2],i[s-1]);break;case 23:break;case 24:this.$=[[i[s-2]].concat(i[s-1]),i[s]];break;case 25:this.$=[[i[s-1]].concat(i[s]),null];break;case 26:this.$=[[i[s-1]],i[s]];break;case 27:this.$=[[i[s]],null];break;case 28:this.$=[[i[s]],null];break;case 29:i[s-1].push(i[s]),this.$=i[s-1];break;case 30:this.$=[i[s]];break;case 31:this.$=i[s];break;case 32:this.$=new r.StringNode(i[s]);break;case 33:this.$=new r.IntegerNode(i[s]);break;case 34:this.$=new r.BooleanNode(i[s]);break;case 35:this.$=i[s];break;case 36:this.$=new r.HashNode(i[s]);break;case 37:i[s-1].push(i[s]),this.$=i[s-1];break;case 38:this.$=[i[s]];break;case 39:this.$=[i[s-2],i[s]];break;case 40:this.$=[i[s-2],new r.StringNode(i[s])];break;case 41:this.$=[i[s-2],new r.IntegerNode(i[s])];break;case 42:this.$=[i[s-2],new r.BooleanNode(i[s])];break;case 43:this.$=[i[s-2],i[s]];break;case 44:this.$=new r.PartialNameNode(i[s]);break;case 45:this.$=new r.PartialNameNode(new r.StringNode(i[s]));break;case 46:this.$=new r.PartialNameNode(new r.IntegerNode(i[s]));break;case 47:this.$=new r.DataNode(i[s]);break;case 48:this.$=new r.IdNode(i[s]);break;case 49:i[s-2].push({part:i[s],separator:i[s-1]}),this.$=i[s-2];break;case 50:this.$=[{part:i[s]}]}},table:[{3:1,4:2,5:[2,7],6:3,7:4,8:6,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,5],22:[1,14],23:[1,15],25:[1,16]},{1:[3]},{5:[1,17]},{5:[2,6],7:18,8:6,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,19],20:[2,6],22:[1,14],23:[1,15],25:[1,16]},{5:[2,5],6:20,8:21,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,5],20:[2,5],22:[1,14],23:[1,15],25:[1,16]},{17:23,18:[1,22],21:24,29:25,36:[1,28],38:[1,27],39:26},{5:[2,8],14:[2,8],15:[2,8],16:[2,8],19:[2,8],20:[2,8],22:[2,8],23:[2,8],25:[2,8]},{4:29,6:3,7:4,8:6,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,5],20:[2,7],22:[1,14],23:[1,15],25:[1,16]},{4:30,6:3,7:4,8:6,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,5],20:[2,7],22:[1,14],23:[1,15],25:[1,16]},{5:[2,12],14:[2,12],15:[2,12],16:[2,12],19:[2,12],20:[2,12],22:[2,12],23:[2,12],25:[2,12]},{5:[2,13],14:[2,13],15:[2,13],16:[2,13],19:[2,13],20:[2,13],22:[2,13],23:[2,13],25:[2,13]},{5:[2,14],14:[2,14],15:[2,14],16:[2,14],19:[2,14],20:[2,14],22:[2,14],23:[2,14],25:[2,14]},{5:[2,15],14:[2,15],15:[2,15],16:[2,15],19:[2,15],20:[2,15],22:[2,15],23:[2,15],25:[2,15]},{17:31,21:24,29:25,36:[1,28],38:[1,27],39:26},{17:32,21:24,29:25,36:[1,28],38:[1,27],39:26},{17:33,21:24,29:25,36:[1,28],38:[1,27],39:26},{21:35,26:34,31:[1,36],32:[1,37],36:[1,28],39:26},{1:[2,1]},{5:[2,2],8:21,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,19],20:[2,2],22:[1,14],23:[1,15],25:[1,16]},{17:23,21:24,29:25,36:[1,28],38:[1,27],39:26},{5:[2,4],7:38,8:6,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,19],20:[2,4],22:[1,14],23:[1,15],25:[1,16]},{5:[2,9],14:[2,9],15:[2,9],16:[2,9],19:[2,9],20:[2,9],22:[2,9],23:[2,9],25:[2,9]},{5:[2,23],14:[2,23],15:[2,23],16:[2,23],19:[2,23],20:[2,23],22:[2,23],23:[2,23],25:[2,23]},{18:[1,39]},{18:[2,27],21:44,24:[2,27],27:40,28:41,29:48,30:42,31:[1,45],32:[1,46],33:[1,47],34:43,35:49,36:[1,50],38:[1,27],39:26},{18:[2,28],24:[2,28]},{18:[2,48],24:[2,48],31:[2,48],32:[2,48],33:[2,48],36:[2,48],38:[2,48],40:[1,51]},{21:52,36:[1,28],39:26},{18:[2,50],24:[2,50],31:[2,50],32:[2,50],33:[2,50],36:[2,50],38:[2,50],40:[2,50]},{10:53,20:[1,54]},{10:55,20:[1,54]},{18:[1,56]},{18:[1,57]},{24:[1,58]},{18:[1,59],21:60,36:[1,28],39:26},{18:[2,44],36:[2,44]},{18:[2,45],36:[2,45]},{18:[2,46],36:[2,46]},{5:[2,3],8:21,9:7,11:8,12:9,13:10,14:[1,11],15:[1,12],16:[1,13],19:[1,19],20:[2,3],22:[1,14],23:[1,15],25:[1,16]},{14:[2,17],15:[2,17],16:[2,17],19:[2,17],20:[2,17],22:[2,17],23:[2,17],25:[2,17]},{18:[2,25],21:44,24:[2,25],28:61,29:48,30:62,31:[1,45],32:[1,46],33:[1,47],34:43,35:49,36:[1,50],38:[1,27],39:26},{18:[2,26],24:[2,26]},{18:[2,30],24:[2,30],31:[2,30],32:[2,30],33:[2,30],36:[2,30],38:[2,30]},{18:[2,36],24:[2,36],35:63,36:[1,64]},{18:[2,31],24:[2,31],31:[2,31],32:[2,31],33:[2,31],36:[2,31],38:[2,31]},{18:[2,32],24:[2,32],31:[2,32],32:[2,32],33:[2,32],36:[2,32],38:[2,32]},{18:[2,33],24:[2,33],31:[2,33],32:[2,33],33:[2,33],36:[2,33],38:[2,33]},{18:[2,34],24:[2,34],31:[2,34],32:[2,34],33:[2,34],36:[2,34],38:[2,34]},{18:[2,35],24:[2,35],31:[2,35],32:[2,35],33:[2,35],36:[2,35],38:[2,35]},{18:[2,38],24:[2,38],36:[2,38]},{18:[2,50],24:[2,50],31:[2,50],32:[2,50],33:[2,50],36:[2,50],37:[1,65],38:[2,50],40:[2,50]},{36:[1,66]},{18:[2,47],24:[2,47],31:[2,47],32:[2,47],33:[2,47],36:[2,47],38:[2,47]},{5:[2,10],14:[2,10],15:[2,10],16:[2,10],19:[2,10],20:[2,10],22:[2,10],23:[2,10],25:[2,10]},{21:67,36:[1,28],39:26},{5:[2,11],14:[2,11],15:[2,11],16:[2,11],19:[2,11],20:[2,11],22:[2,11],23:[2,11],25:[2,11]},{14:[2,16],15:[2,16],16:[2,16],19:[2,16],20:[2,16],22:[2,16],23:[2,16],25:[2,16]},{5:[2,19],14:[2,19],15:[2,19],16:[2,19],19:[2,19],20:[2,19],22:[2,19],23:[2,19],25:[2,19]},{5:[2,20],14:[2,20],15:[2,20],16:[2,20],19:[2,20],20:[2,20],22:[2,20],23:[2,20],25:[2,20]},{5:[2,21],14:[2,21],15:[2,21],16:[2,21],19:[2,21],20:[2,21],22:[2,21],23:[2,21],25:[2,21]},{18:[1,68]},{18:[2,24],24:[2,24]},{18:[2,29],24:[2,29],31:[2,29],32:[2,29],33:[2,29],36:[2,29],38:[2,29]},{18:[2,37],24:[2,37],36:[2,37]},{37:[1,65]},{21:69,29:73,31:[1,70],32:[1,71],33:[1,72],36:[1,28],38:[1,27],39:26},{18:[2,49],24:[2,49],31:[2,49],32:[2,49],33:[2,49],36:[2,49],38:[2,49],40:[2,49]},{18:[1,74]},{5:[2,22],14:[2,22],15:[2,22],16:[2,22],19:[2,22],20:[2,22],22:[2,22],23:[2,22],25:[2,22]},{18:[2,39],24:[2,39],36:[2,39]},{18:[2,40],24:[2,40],36:[2,40]},{18:[2,41],24:[2,41],36:[2,41]},{18:[2,42],24:[2,42],36:[2,42]},{18:[2,43],24:[2,43],36:[2,43]},{5:[2,18],14:[2,18],15:[2,18],16:[2,18],19:[2,18],20:[2,18],22:[2,18],23:[2,18],25:[2,18]}],defaultActions:{17:[2,1]},parseError:function(e,t){throw new Error(e)},parse:function(e){function t(){var e;return e=n.lexer.lex()||1,"number"!=typeof e&&(e=n.symbols_[e]||e),e}var n=this,r=[0],a=[null],i=[],o=this.table,s="",d=0,p=0,l=0;this.lexer.setInput(e),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,"undefined"==typeof this.lexer.yylloc&&(this.lexer.yylloc={});var c=this.lexer.yylloc;i.push(c);var h=this.lexer.options&&this.lexer.options.ranges;"function"==typeof this.yy.parseError&&(this.parseError=this.yy.parseError);for(var u,m,f,g,y,b,v,x,w,T={};;){if(f=r[r.length-1],this.defaultActions[f]?g=this.defaultActions[f]:((null===u||"undefined"==typeof u)&&(u=t()),g=o[f]&&o[f][u]),"undefined"==typeof g||!g.length||!g[0]){var A="";if(!l){w=[];for(b in o[f])this.terminals_[b]&&b>2&&w.push("'"+this.terminals_[b]+"'");A=this.lexer.showPosition?"Parse error on line "+(d+1)+":\n"+this.lexer.showPosition()+"\nExpecting "+w.join(", ")+", got '"+(this.terminals_[u]||u)+"'":"Parse error on line "+(d+1)+": Unexpected "+(1==u?"end of input":"'"+(this.terminals_[u]||u)+"'"),this.parseError(A,{text:this.lexer.match,token:this.terminals_[u]||u,line:this.lexer.yylineno,loc:c,expected:w})}}if(g[0]instanceof Array&&g.length>1)throw new Error("Parse Error: multiple actions possible at state: "+f+", token: "+u);switch(g[0]){case 1:r.push(u),a.push(this.lexer.yytext),i.push(this.lexer.yylloc),r.push(g[1]),u=null,m?(u=m,m=null):(p=this.lexer.yyleng,s=this.lexer.yytext,d=this.lexer.yylineno,c=this.lexer.yylloc,l>0&&l--);break;case 2:if(v=this.productions_[g[1]][1],T.$=a[a.length-v],T._$={first_line:i[i.length-(v||1)].first_line,last_line:i[i.length-1].last_line,first_column:i[i.length-(v||1)].first_column,last_column:i[i.length-1].last_column},h&&(T._$.range=[i[i.length-(v||1)].range[0],i[i.length-1].range[1]]),y=this.performAction.call(T,s,p,d,this.yy,g[1],a,i),"undefined"!=typeof y)return y;v&&(r=r.slice(0,-1*v*2),a=a.slice(0,-1*v),i=i.slice(0,-1*v)),r.push(this.productions_[g[1]][0]),a.push(T.$),i.push(T._$),x=o[r[r.length-2]][r[r.length-1]],r.push(x);break;case 3:return!0}}return!0}},n=function(){var e={EOF:1,parseError:function(e,t){if(!this.yy.parser)throw new Error(e);this.yy.parser.parseError(e,t)},setInput:function(e){return this._input=e,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var e=this._input[0];this.yytext+=e,this.yyleng++,this.offset++,this.match+=e,this.matched+=e;var t=e.match(/(?:\r\n?|\n).*/g);return t?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),e},unput:function(e){var t=e.length,n=e.split(/(?:\r\n?|\n)/g);this._input=e+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-t-1),this.offset-=t;var r=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),n.length-1&&(this.yylineno-=n.length-1);var a=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:n?(n.length===r.length?this.yylloc.first_column:0)+r[r.length-n.length].length-n[0].length:this.yylloc.first_column-t},this.options.ranges&&(this.yylloc.range=[a[0],a[0]+this.yyleng-t]),this},more:function(){return this._more=!0,this},less:function(e){this.unput(this.match.slice(e))},pastInput:function(){var e=this.matched.substr(0,this.matched.length-this.match.length);return(e.length>20?"...":"")+e.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var e=this.match;return e.length<20&&(e+=this._input.substr(0,20-e.length)),(e.substr(0,20)+(e.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var e=this.pastInput(),t=new Array(e.length+1).join("-");return e+this.upcomingInput()+"\n"+t+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var e,t,n,r,a;this._more||(this.yytext="",this.match="");for(var i=this._currentRules(),o=0;o<i.length&&(n=this._input.match(this.rules[i[o]]),!n||t&&!(n[0].length>t[0].length)||(t=n,r=o,this.options.flex));o++);return t?(a=t[0].match(/(?:\r\n?|\n).*/g),a&&(this.yylineno+=a.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:a?a[a.length-1].length-a[a.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+t[0].length},this.yytext+=t[0],this.match+=t[0],this.matches=t,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(t[0].length),this.matched+=t[0],e=this.performAction.call(this,this.yy,this,i[r],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),e?e:void 0):""===this._input?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+". Unrecognized text.\n"+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var e=this.next();return"undefined"!=typeof e?e:this.lex()},begin:function(e){this.conditionStack.push(e)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(e){this.begin(e)}};return e.options={},e.performAction=function(e,t,n,r){switch(n){case 0:return t.yytext="\\",14;case 1:if("\\"!==t.yytext.slice(-1)&&this.begin("mu"),"\\"===t.yytext.slice(-1)&&(t.yytext=t.yytext.substr(0,t.yyleng-1),this.begin("emu")),t.yytext)return 14;break;case 2:return 14;case 3:return"\\"!==t.yytext.slice(-1)&&this.popState(),"\\"===t.yytext.slice(-1)&&(t.yytext=t.yytext.substr(0,t.yyleng-1)),14;case 4:return t.yytext=t.yytext.substr(0,t.yyleng-4),this.popState(),15;case 5:return 25;case 6:return 16;case 7:return 20;case 8:return 19;case 9:return 19;case 10:return 23;case 11:return 22;case 12:this.popState(),this.begin("com");break;case 13:return t.yytext=t.yytext.substr(3,t.yyleng-5),this.popState(),15;case 14:return 22;case 15:return 37;case 16:return 36;case 17:return 36;case 18:return 40;case 19:break;case 20:return this.popState(),24;case 21:return this.popState(),18;case 22:return t.yytext=t.yytext.substr(1,t.yyleng-2).replace(/\\"/g,'"'),31;case 23:return t.yytext=t.yytext.substr(1,t.yyleng-2).replace(/\\'/g,"'"),31;case 24:return 38;case 25:return 33;case 26:return 33;case 27:return 32;case 28:return 36;case 29:return t.yytext=t.yytext.substr(1,t.yyleng-2),36;case 30:return"INVALID";case 31:return 5}},e.rules=[/^(?:\\\\(?=(\{\{)))/,/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|$)))/,/^(?:[\s\S]*?--\}\})/,/^(?:\{\{>)/,/^(?:\{\{#)/,/^(?:\{\{\/)/,/^(?:\{\{\^)/,/^(?:\{\{\s*else\b)/,/^(?:\{\{\{)/,/^(?:\{\{&)/,/^(?:\{\{!--)/,/^(?:\{\{![\s\S]*?\}\})/,/^(?:\{\{)/,/^(?:=)/,/^(?:\.(?=[}\/ ]))/,/^(?:\.\.)/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}\}\})/,/^(?:\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=[}\s]))/,/^(?:false(?=[}\s]))/,/^(?:-?[0-9]+(?=[}\s]))/,/^(?:[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.]))/,/^(?:\[[^\]]*\])/,/^(?:.)/,/^(?:$)/],e.conditions={mu:{rules:[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],inclusive:!1},emu:{rules:[3],inclusive:!1},com:{rules:[4],inclusive:!1},INITIAL:{rules:[0,1,2,31],inclusive:!0}},e}();return t.lexer=n,e.prototype=t,t.Parser=e,new e}();e.Parser=i,e.parse=function(t){return t.constructor===e.AST.ProgramNode?t:(e.Parser.yy=e.AST,e.Parser.parse(t))},e.AST={},e.AST.ProgramNode=function(t,n){this.type="program",this.statements=t,n&&(this.inverse=new e.AST.ProgramNode(n))},e.AST.MustacheNode=function(e,t,n){this.type="mustache",this.escaped=!n,this.hash=t;var r=this.id=e[0],a=this.params=e.slice(1),i=this.eligibleHelper=r.isSimple;this.isHelper=i&&(a.length||t)},e.AST.PartialNode=function(e,t){this.type="partial",this.partialName=e,this.context=t},e.AST.BlockNode=function(t,n,r,a){var i=function(t,n){if(t.original!==n.original)throw new e.Exception(t.original+" doesn't match "+n.original)};i(t.id,a),this.type="block",this.mustache=t,this.program=n,this.inverse=r,this.inverse&&!this.program&&(this.isInverse=!0)},e.AST.ContentNode=function(e){this.type="content",this.string=e},e.AST.HashNode=function(e){this.type="hash",this.pairs=e},e.AST.IdNode=function(t){this.type="ID";for(var n="",r=[],a=0,i=0,o=t.length;o>i;i++){var s=t[i].part;if(n+=(t[i].separator||"")+s,".."===s||"."===s||"this"===s){if(r.length>0)throw new e.Exception("Invalid path: "+n);".."===s?a++:this.isScoped=!0}else r.push(s)}this.original=n,this.parts=r,this.string=r.join("."),this.depth=a,this.isSimple=1===t.length&&!this.isScoped&&0===a,this.stringModeValue=this.string},e.AST.PartialNameNode=function(e){this.type="PARTIAL_NAME",this.name=e.original},e.AST.DataNode=function(e){this.type="DATA",this.id=e},e.AST.StringNode=function(e){this.type="STRING",this.original=this.string=this.stringModeValue=e},e.AST.IntegerNode=function(e){this.type="INTEGER",this.original=this.integer=e,this.stringModeValue=Number(e)},e.AST.BooleanNode=function(e){this.type="BOOLEAN",this.bool=e,this.stringModeValue="true"===e},e.AST.CommentNode=function(e){this.type="comment",this.comment=e};var o=["description","fileName","lineNumber","message","name","number","stack"];e.Exception=function(e){for(var t=Error.prototype.constructor.apply(this,arguments),n=0;n<o.length;n++)this[o[n]]=t[o[n]]},e.Exception.prototype=new Error,e.SafeString=function(e){this.string=e},e.SafeString.prototype.toString=function(){return this.string.toString()};var s={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},d=/[&<>"'`]/g,p=/[&<>"'`]/,l=function(e){return s[e]||"&amp;"};e.Utils={extend:function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},escapeExpression:function(t){return t instanceof e.SafeString?t.toString():null==t||t===!1?"":(t=t.toString(),p.test(t)?t.replace(d,l):t)},isEmpty:function(e){return e||0===e?"[object Array]"===n.call(e)&&0===e.length?!0:!1:!0}};var c=e.Compiler=function(){},h=e.JavaScriptCompiler=function(){};c.prototype={compiler:c,disassemble:function(){for(var e,t,n,r=this.opcodes,a=[],i=0,o=r.length;o>i;i++)if(e=r[i],"DECLARE"===e.opcode)a.push("DECLARE "+e.name+"="+e.value);else{t=[];for(var s=0;s<e.args.length;s++)n=e.args[s],"string"==typeof n&&(n='"'+n.replace("\n","\\n")+'"'),t.push(n);a.push(e.opcode+" "+t.join(" "))}return a.join("\n")},equals:function(e){var t=this.opcodes.length;if(e.opcodes.length!==t)return!1;for(var n=0;t>n;n++){var r=this.opcodes[n],a=e.opcodes[n];if(r.opcode!==a.opcode||r.args.length!==a.args.length)return!1;for(var i=0;i<r.args.length;i++)if(r.args[i]!==a.args[i])return!1}if(t=this.children.length,e.children.length!==t)return!1;for(n=0;t>n;n++)if(!this.children[n].equals(e.children[n]))return!1;return!0},guid:0,compile:function(e,t){this.children=[],this.depths={list:[]},this.options=t;var n=this.options.knownHelpers;if(this.options.knownHelpers={helperMissing:!0,blockHelperMissing:!0,each:!0,"if":!0,unless:!0,"with":!0,log:!0},n)for(var r in n)this.options.knownHelpers[r]=n[r];return this.program(e)},accept:function(e){return this[e.type](e)},program:function(e){var t,n=e.statements;this.opcodes=[];for(var r=0,a=n.length;a>r;r++)t=n[r],this[t.type](t);return this.isSimple=1===a,this.depths.list=this.depths.list.sort(function(e,t){return e-t}),this},compileProgram:function(e){var t,n=(new this.compiler).compile(e,this.options),r=this.guid++;this.usePartial=this.usePartial||n.usePartial,this.children[r]=n;for(var a=0,i=n.depths.list.length;i>a;a++)t=n.depths.list[a],2>t||this.addDepth(t-1);return r},block:function(e){var t=e.mustache,n=e.program,r=e.inverse;n&&(n=this.compileProgram(n)),r&&(r=this.compileProgram(r));var a=this.classifyMustache(t);"helper"===a?this.helperMustache(t,n,r):"simple"===a?(this.simpleMustache(t),this.opcode("pushProgram",n),this.opcode("pushProgram",r),this.opcode("emptyHash"),this.opcode("blockValue")):(this.ambiguousMustache(t,n,r),this.opcode("pushProgram",n),this.opcode("pushProgram",r),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},hash:function(e){var t,n,r=e.pairs;this.opcode("pushHash");for(var a=0,i=r.length;i>a;a++)t=r[a],n=t[1],this.options.stringParams?(n.depth&&this.addDepth(n.depth),this.opcode("getContext",n.depth||0),this.opcode("pushStringParam",n.stringModeValue,n.type)):this.accept(n),this.opcode("assignToHash",t[0]);this.opcode("popHash")},partial:function(e){var t=e.partialName;this.usePartial=!0,e.context?this.ID(e.context):this.opcode("push","depth0"),this.opcode("invokePartial",t.name),this.opcode("append")},content:function(e){this.opcode("appendContent",e.string)},mustache:function(e){var t=this.options,n=this.classifyMustache(e);"simple"===n?this.simpleMustache(e):"helper"===n?this.helperMustache(e):this.ambiguousMustache(e),e.escaped&&!t.noEscape?this.opcode("appendEscaped"):this.opcode("append")},ambiguousMustache:function(e,t,n){var r=e.id,a=r.parts[0],i=null!=t||null!=n;this.opcode("getContext",r.depth),this.opcode("pushProgram",t),this.opcode("pushProgram",n),this.opcode("invokeAmbiguous",a,i)},simpleMustache:function(e){var t=e.id;"DATA"===t.type?this.DATA(t):t.parts.length?this.ID(t):(this.addDepth(t.depth),this.opcode("getContext",t.depth),this.opcode("pushContext")),this.opcode("resolvePossibleLambda")},helperMustache:function(e,t,n){var r=this.setupFullMustacheParams(e,t,n),a=e.id.parts[0];if(this.options.knownHelpers[a])this.opcode("invokeKnownHelper",r.length,a);else{if(this.options.knownHelpersOnly)throw new Error("You specified knownHelpersOnly, but used the unknown helper "+a);this.opcode("invokeHelper",r.length,a)}},ID:function(e){this.addDepth(e.depth),this.opcode("getContext",e.depth);var t=e.parts[0];t?this.opcode("lookupOnContext",e.parts[0]):this.opcode("pushContext");for(var n=1,r=e.parts.length;r>n;n++)this.opcode("lookup",e.parts[n])},DATA:function(t){if(this.options.data=!0,t.id.isScoped||t.id.depth)throw new e.Exception("Scoped data references are not supported: "+t.original);this.opcode("lookupData");for(var n=t.id.parts,r=0,a=n.length;a>r;r++)this.opcode("lookup",n[r])},STRING:function(e){this.opcode("pushString",e.string)},INTEGER:function(e){this.opcode("pushLiteral",e.integer)},BOOLEAN:function(e){this.opcode("pushLiteral",e.bool)},comment:function(){},opcode:function(e){this.opcodes.push({opcode:e,args:[].slice.call(arguments,1)})},declare:function(e,t){this.opcodes.push({opcode:"DECLARE",name:e,value:t})},addDepth:function(e){if(isNaN(e))throw new Error("EWOT");0!==e&&(this.depths[e]||(this.depths[e]=!0,this.depths.list.push(e)))},classifyMustache:function(e){var t=e.isHelper,n=e.eligibleHelper,r=this.options;if(n&&!t){var a=e.id.parts[0];r.knownHelpers[a]?t=!0:r.knownHelpersOnly&&(n=!1)}return t?"helper":n?"ambiguous":"simple"},pushParams:function(e){for(var t,n=e.length;n--;)t=e[n],this.options.stringParams?(t.depth&&this.addDepth(t.depth),this.opcode("getContext",t.depth||0),this.opcode("pushStringParam",t.stringModeValue,t.type)):this[t.type](t)},setupMustacheParams:function(e){var t=e.params;return this.pushParams(t),e.hash?this.hash(e.hash):this.opcode("emptyHash"),t},setupFullMustacheParams:function(e,t,n){var r=e.params;return this.pushParams(r),this.opcode("pushProgram",t),this.opcode("pushProgram",n),e.hash?this.hash(e.hash):this.opcode("emptyHash"),r}};var u=function(e){this.value=e};h.prototype={nameLookup:function(e,t){return/^[0-9]+$/.test(t)?e+"["+t+"]":h.isValidJavaScriptVariableName(t)?e+"."+t:e+"['"+t+"']"},appendToBuffer:function(e){return this.environment.isSimple?"return "+e+";":{appendToBuffer:!0,content:e,toString:function(){return"buffer += "+e+";"}}},initializeBuffer:function(){return this.quotedString("")},namespace:"Handlebars",compile:function(t,n,r,a){this.environment=t,this.options=n||{},e.log(e.logger.DEBUG,this.environment.disassemble()+"\n\n"),this.name=this.environment.name,this.isChild=!!r,this.context=r||{programs:[],environments:[],aliases:{}},this.preamble(),this.stackSlot=0,this.stackVars=[],this.registers={list:[]},this.compileStack=[],this.inlineStack=[],this.compileChildren(t,n);var i,o=t.opcodes;for(this.i=0,y=o.length;this.i<y;this.i++)i=o[this.i],"DECLARE"===i.opcode?this[i.name]=i.value:this[i.opcode].apply(this,i.args);return this.createFunctionContext(a)},nextOpcode:function(){var e=this.environment.opcodes;return e[this.i+1]},eat:function(){this.i=this.i+1},preamble:function(){var e=[];if(this.isChild)e.push("");else{var t=this.namespace,n="helpers = this.merge(helpers, "+t+".helpers);";this.environment.usePartial&&(n=n+" partials = this.merge(partials, "+t+".partials);"),this.options.data&&(n+=" data = data || {};"),e.push(n)}this.environment.isSimple?e.push(""):e.push(", buffer = "+this.initializeBuffer()),this.lastContext=0,this.source=e},createFunctionContext:function(t){var n=this.stackVars.concat(this.registers.list);if(n.length>0&&(this.source[1]=this.source[1]+", "+n.join(", ")),!this.isChild)for(var r in this.context.aliases)this.context.aliases.hasOwnProperty(r)&&(this.source[1]=this.source[1]+", "+r+"="+this.context.aliases[r]);this.source[1]&&(this.source[1]="var "+this.source[1].substring(2)+";"),this.isChild||(this.source[1]+="\n"+this.context.programs.join("\n")+"\n"),this.environment.isSimple||this.source.push("return buffer;");for(var a=this.isChild?["depth0","data"]:["Handlebars","depth0","helpers","partials","data"],i=0,o=this.environment.depths.list.length;o>i;i++)a.push("depth"+this.environment.depths.list[i]);var s=this.mergeSource();if(!this.isChild){var d=e.COMPILER_REVISION,p=e.REVISION_CHANGES[d];s="this.compilerInfo = ["+d+",'"+p+"'];\n"+s}if(t)return a.push(s),Function.apply(this,a);var l="function "+(this.name||"")+"("+a.join(",")+") {\n  "+s+"}";return e.log(e.logger.DEBUG,l+"\n\n"),l},mergeSource:function(){for(var e,n="",r=0,a=this.source.length;a>r;r++){var i=this.source[r];i.appendToBuffer?e=e?e+"\n    + "+i.content:i.content:(e&&(n+="buffer += "+e+";\n  ",e=t),n+=i+"\n  ")}return n},blockValue:function(){this.context.aliases.blockHelperMissing="helpers.blockHelperMissing";var e=["depth0"];this.setupParams(0,e),this.replaceStack(function(t){return e.splice(1,0,t),"blockHelperMissing.call("+e.join(", ")+")"})},ambiguousBlockValue:function(){this.context.aliases.blockHelperMissing="helpers.blockHelperMissing";var e=["depth0"];this.setupParams(0,e);var t=this.topStack();e.splice(1,0,t),e[e.length-1]="options",this.source.push("if (!"+this.lastHelper+") { "+t+" = blockHelperMissing.call("+e.join(", ")+"); }")},appendContent:function(e){this.source.push(this.appendToBuffer(this.quotedString(e)))},append:function(){this.flushInline();var e=this.popStack();this.source.push("if("+e+" || "+e+" === 0) { "+this.appendToBuffer(e)+" }"),this.environment.isSimple&&this.source.push("else { "+this.appendToBuffer("''")+" }")},appendEscaped:function(){this.context.aliases.escapeExpression="this.escapeExpression",this.source.push(this.appendToBuffer("escapeExpression("+this.popStack()+")"))},getContext:function(e){this.lastContext!==e&&(this.lastContext=e)},lookupOnContext:function(e){this.push(this.nameLookup("depth"+this.lastContext,e,"context"))},pushContext:function(){this.pushStackLiteral("depth"+this.lastContext)},resolvePossibleLambda:function(){this.context.aliases.functionType='"function"',this.replaceStack(function(e){return"typeof "+e+" === functionType ? "+e+".apply(depth0) : "+e})},lookup:function(e){this.replaceStack(function(t){return t+" == null || "+t+" === false ? "+t+" : "+this.nameLookup(t,e,"context")})},lookupData:function(e){this.push("data")},pushStringParam:function(e,t){this.pushStackLiteral("depth"+this.lastContext),this.pushString(t),"string"==typeof e?this.pushString(e):this.pushStackLiteral(e)},emptyHash:function(){this.pushStackLiteral("{}"),this.options.stringParams&&(this.register("hashTypes","{}"),this.register("hashContexts","{}"))},pushHash:function(){this.hash={values:[],types:[],contexts:[]}},popHash:function(){var e=this.hash;this.hash=t,this.options.stringParams&&(this.register("hashContexts","{"+e.contexts.join(",")+"}"),this.register("hashTypes","{"+e.types.join(",")+"}")),this.push("{\n    "+e.values.join(",\n    ")+"\n  }")},pushString:function(e){this.pushStackLiteral(this.quotedString(e))},push:function(e){return this.inlineStack.push(e),e},pushLiteral:function(e){this.pushStackLiteral(e)},pushProgram:function(e){null!=e?this.pushStackLiteral(this.programExpression(e)):this.pushStackLiteral(null)},invokeHelper:function(e,t){this.context.aliases.helperMissing="helpers.helperMissing";var n=this.lastHelper=this.setupHelper(e,t,!0),r=this.nameLookup("depth"+this.lastContext,t,"context");this.push(n.name+" || "+r),this.replaceStack(function(e){return e+" ? "+e+".call("+n.callParams+") : helperMissing.call("+n.helperMissingParams+")"})},invokeKnownHelper:function(e,t){var n=this.setupHelper(e,t);this.push(n.name+".call("+n.callParams+")")},invokeAmbiguous:function(e,t){this.context.aliases.functionType='"function"',this.pushStackLiteral("{}");var n=this.setupHelper(0,e,t),r=this.lastHelper=this.nameLookup("helpers",e,"helper"),a=this.nameLookup("depth"+this.lastContext,e,"context"),i=this.nextStack();this.source.push("if ("+i+" = "+r+") { "+i+" = "+i+".call("+n.callParams+"); }"),this.source.push("else { "+i+" = "+a+"; "+i+" = typeof "+i+" === functionType ? "+i+".apply(depth0) : "+i+"; }")},invokePartial:function(e){var t=[this.nameLookup("partials",e,"partial"),"'"+e+"'",this.popStack(),"helpers","partials"];this.options.data&&t.push("data"),this.context.aliases.self="this",this.push("self.invokePartial("+t.join(", ")+")")},assignToHash:function(e){var t,n,r=this.popStack();this.options.stringParams&&(n=this.popStack(),t=this.popStack());var a=this.hash;t&&a.contexts.push("'"+e+"': "+t),n&&a.types.push("'"+e+"': "+n),a.values.push("'"+e+"': ("+r+")")},compiler:h,compileChildren:function(e,t){for(var n,r,a=e.children,i=0,o=a.length;o>i;i++){n=a[i],r=new this.compiler;var s=this.matchExistingProgram(n);null==s?(this.context.programs.push(""),s=this.context.programs.length,n.index=s,n.name="program"+s,this.context.programs[s]=r.compile(n,t,this.context),this.context.environments[s]=n):(n.index=s,n.name="program"+s)}},matchExistingProgram:function(e){for(var t=0,n=this.context.environments.length;n>t;t++){var r=this.context.environments[t];if(r&&r.equals(e))return t}},programExpression:function(e){if(this.context.aliases.self="this",null==e)return"self.noop";for(var t,n=this.environment.children[e],r=n.depths.list,a=[n.index,n.name,"data"],i=0,o=r.length;o>i;i++)t=r[i],
1===t?a.push("depth0"):a.push("depth"+(t-1));return(0===r.length?"self.program(":"self.programWithDepth(")+a.join(", ")+")"},register:function(e,t){this.useRegister(e),this.source.push(e+" = "+t+";")},useRegister:function(e){this.registers[e]||(this.registers[e]=!0,this.registers.list.push(e))},pushStackLiteral:function(e){return this.push(new u(e))},pushStack:function(e){this.flushInline();var t=this.incrStack();return e&&this.source.push(t+" = "+e+";"),this.compileStack.push(t),t},replaceStack:function(e){var t,n="",r=this.isInline();if(r){var a=this.popStack(!0);if(a instanceof u)t=a.value;else{var i=this.stackSlot?this.topStackName():this.incrStack();n="("+this.push(i)+" = "+a+"),",t=this.topStack()}}else t=this.topStack();var o=e.call(this,t);return r?((this.inlineStack.length||this.compileStack.length)&&this.popStack(),this.push("("+n+o+")")):(/^stack/.test(t)||(t=this.nextStack()),this.source.push(t+" = ("+n+o+");")),t},nextStack:function(){return this.pushStack()},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var e=this.inlineStack;if(e.length){this.inlineStack=[];for(var t=0,n=e.length;n>t;t++){var r=e[t];r instanceof u?this.compileStack.push(r):this.pushStack(r)}}},isInline:function(){return this.inlineStack.length},popStack:function(e){var t=this.isInline(),n=(t?this.inlineStack:this.compileStack).pop();return!e&&n instanceof u?n.value:(t||this.stackSlot--,n)},topStack:function(e){var t=this.isInline()?this.inlineStack:this.compileStack,n=t[t.length-1];return!e&&n instanceof u?n.value:n},quotedString:function(e){return'"'+e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},setupHelper:function(e,t,n){var r=[];this.setupParams(e,r,n);var a=this.nameLookup("helpers",t,"helper");return{params:r,name:a,callParams:["depth0"].concat(r).join(", "),helperMissingParams:n&&["depth0",this.quotedString(t)].concat(r).join(", ")}},setupParams:function(e,t,n){var r,a,i,o=[],s=[],d=[];o.push("hash:"+this.popStack()),a=this.popStack(),i=this.popStack(),(i||a)&&(i||(this.context.aliases.self="this",i="self.noop"),a||(this.context.aliases.self="this",a="self.noop"),o.push("inverse:"+a),o.push("fn:"+i));for(var p=0;e>p;p++)r=this.popStack(),t.push(r),this.options.stringParams&&(d.push(this.popStack()),s.push(this.popStack()));return this.options.stringParams&&(o.push("contexts:["+s.join(",")+"]"),o.push("types:["+d.join(",")+"]"),o.push("hashContexts:hashContexts"),o.push("hashTypes:hashTypes")),this.options.data&&o.push("data:data"),o="{"+o.join(",")+"}",n?(this.register("options",o),t.push("options")):t.push(o),t.join(", ")}};for(var m="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield".split(" "),f=h.RESERVED_WORDS={},g=0,y=m.length;y>g;g++)f[m[g]]=!0;h.isValidJavaScriptVariableName=function(e){return!h.RESERVED_WORDS[e]&&/^[a-zA-Z_$][0-9a-zA-Z_$]+$/.test(e)?!0:!1},e.precompile=function(t,n){if(null==t||"string"!=typeof t&&t.constructor!==e.AST.ProgramNode)throw new e.Exception("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+t);n=n||{},"data"in n||(n.data=!0);var r=e.parse(t),a=(new c).compile(r,n);return(new h).compile(a,n)},e.compile=function(n,r){function a(){var a=e.parse(n),i=(new c).compile(a,r),o=(new h).compile(i,r,t,!0);return e.template(o)}if(null==n||"string"!=typeof n&&n.constructor!==e.AST.ProgramNode)throw new e.Exception("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+n);r=r||{},"data"in r||(r.data=!0);var i;return function(e,t){return i||(i=a()),i.call(this,e,t)}},e.VM={template:function(t){var n={escapeExpression:e.Utils.escapeExpression,invokePartial:e.VM.invokePartial,programs:[],program:function(t,n,r){var a=this.programs[t];return r?a=e.VM.program(t,n,r):a||(a=this.programs[t]=e.VM.program(t,n)),a},merge:function(t,n){var r=t||n;return t&&n&&(r={},e.Utils.extend(r,n),e.Utils.extend(r,t)),r},programWithDepth:e.VM.programWithDepth,noop:e.VM.noop,compilerInfo:null};return function(r,a){a=a||{};var i=t.call(n,e,r,a.helpers,a.partials,a.data),o=n.compilerInfo||[],s=o[0]||1,d=e.COMPILER_REVISION;if(s!==d){if(d>s){var p=e.REVISION_CHANGES[d],l=e.REVISION_CHANGES[s];throw"Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+p+") or downgrade your runtime to an older version ("+l+")."}throw"Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+o[1]+")."}return i}},programWithDepth:function(e,t,n){var r=Array.prototype.slice.call(arguments,3),a=function(e,a){return a=a||{},t.apply(this,[e,a.data||n].concat(r))};return a.program=e,a.depth=r.length,a},program:function(e,t,n){var r=function(e,r){return r=r||{},t(e,r.data||n)};return r.program=e,r.depth=0,r},noop:function(){return""},invokePartial:function(n,r,a,i,o,s){var d={helpers:i,partials:o,data:s};if(n===t)throw new e.Exception("The partial "+r+" could not be found");if(n instanceof Function)return n(a,d);if(e.compile)return o[r]=e.compile(n,{data:s!==t}),o[r](a,d);throw new e.Exception("The partial "+r+" could not be compiled when running in runtime-only mode")}},e.template=e.VM.template}(Handlebars),define("Handlebars",function(e){return function(){var t;return t||e.Handlebars}}(this)),define("hbars",["text","Handlebars"],function(e,t){"use strict";var n={},r="define('{pluginName}!{moduleName}', ['Handlebars'], function (Handlebars) { return Handlebars.template({content}); });\n";return{version:"0.0.2",load:function(r,a,i,o){if(n[r])i(n[r]);else{var s=o.hbars&&o.hbars.extension||".html",d=o.hbars&&o.hbars.path||"",p=o.hbars&&o.hbars.compileOptions||{},l=function(e){o.isBuild?(n[r]=t.precompile(e,p),i()):(n[r]=t.compile(e),i(n[r]))};l.error=i.error,e.load(d+r+s,a,l,o)}},write:function(e,t,a,i){var o=n[t];o&&a.asModule(e+"!"+t,r.replace("{pluginName}",e).replace("{moduleName}",t).replace("{content}",o))}}}),define("hbars!modules/../../templates/navigation",["Handlebars"],function(e){return e.template(function(e,t,n,r,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),a=a||{};var i,o="",s="function",d=this.escapeExpression;return o+='<li><a href="#',(i=n.id)?i=i.call(t,{hash:{},data:a}):(i=t.id,i=typeof i===s?i.apply(t):i),o+=d(i)+'">',(i=n.title)?i=i.call(t,{hash:{},data:a}):(i=t.title,i=typeof i===s?i.apply(t):i),o+=d(i)+"</a></li>\n"})}),define("hbars!modules/../../templates/api-section",["Handlebars"],function(e){return e.template(function(e,t,n,r,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),a=a||{};var i,o="",s="function",d=this.escapeExpression;return o+='<section class="api-documents" id="section-',(i=n.id)?i=i.call(t,{hash:{},data:a}):(i=t.id,i=typeof i===s?i.apply(t):i),o+=d(i)+'"></section>\n'})}),define("hbars!modules/../../templates/api-article",["Handlebars"],function(e){return e.template(function(e,t,n,r,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),a=a||{};var i,o="",s="function",d=this.escapeExpression;return o+='<article class="document">\n  <div class="for-humans" id=',(i=n.id)?i=i.call(t,{hash:{},data:a}):(i=t.id,i=typeof i===s?i.apply(t):i),o+=d(i)+">\n    ",(i=n.content)?i=i.call(t,{hash:{},data:a}):(i=t.content,i=typeof i===s?i.apply(t):i),(i||0===i)&&(o+=i),o+='\n  </div>\n  <div class="for-machines">\n    ',(i=n.example)?i=i.call(t,{hash:{},data:a}):(i=t.example,i=typeof i===s?i.apply(t):i),(i||0===i)&&(o+=i),o+="\n  </div>\n</article>\n"})}),define("mdown",[],function(){return{load:function(e,t,n,r){}}}),define("mdown!modules/../../documents/api/account-credentials-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "accountCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/account-credentials.md",[],function(){return"<h2>Account Credentials</h2>\n\n<p>Account credentials authenticate you to perform actions on your developer account. A set of account credentials is created automatically when you create your developer account. Account credentials are the same for both sandbox and live mode. They are available at <code>/accounts/&lt;account-id&gt;/account-credentials</code> and are used to sign requests to <code>/accounts</code> and <code>/apps</code>.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>macAlgorithm</td>\n            <td>The MAC algorithm describes the algorithm used to create the signature.</td>\n        </tr>\n        <tr>\n            <td>macKey</td>\n            <td>The MAC key is the shared secret key. It should never be shared with anyone or transmitted in any request. Keep this key secure as you would any private key.</td>\n        </tr>\n        <tr>\n            <td>macKeyIdentifier</td>\n            <td>The MAC key identifier uniquely identifies the MAC key. The MAC key identifier is sent with each request to tell the server which MAC key was used to sign the request.</td>\n        </td>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/account-permissions-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/account-permissions"\n    }\n  },\n  "support": [\n    "https://lcp.points.com/v1/accounts/&lt;account-id1&gt;",\n    "https://lcp.points.com/v1/accounts/&lt;account-id2&gt;"\n  ],\n  "type": "accountPermission",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/account-permissions.md",[],function(){return'<h2>Account Permissions</h2>\n\n<p>Account permissions allow you to grant other accounts access to your application.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>support</td>\n            <td>A list of <a href="#accounts">accounts</a> that have permission to support the application. Accounts with support permissions have read-only access to the application and all of the application’s transactions.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/accounts-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "accountCredentials": [\n    {\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;/account-credentials/&lt;ac-id&gt;"\n        }\n      },\n      "macAlgorithm": "HMAC-SHA1",\n      "macKey": "&lt;macKey&gt;",\n      "macKeyIdentifier": "&lt;macKeyIdentifier&gt;"\n    }\n  ],\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "email": "youremail@yourcompany.com",\n  "firstName": "First Name",\n  "lastName": "Last Name",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;"\n    },\n    "friendly": {\n      "href": "https://lcp.points.com/v1/accounts/youremail%40yourcompany.com"\n    }\n  },\n  "organizationName": "Company",\n  "phone": "416-555-1234",\n  "roles": [\n    {\n      "role": "https://lcp.points.com/v1/roles/application-developer"\n    },\n    {\n      "role": "https://lcp.points.com/v1/roles/report-viewer",\n      "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }\n  ],\n  "timeZone": "America/Toronto",\n  "type": "account",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/accounts.md",[],function(){return'<h2>Accounts</h2>\n\n<p>An account is your own personal developer account on the LCP system. It is tied to your email address and gives you access credentials to the LCP. It also enables you to create one or more applications that interface with the LCP. Create an account in the <a href="https://admin.lcp.points.com/">LCP Admin</a>.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>accountCredentials</td>\n            <td>An array of <a href="#account-credentials">account credential</a> objects that can be used to access this account.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>email</td>\n            <td>The email address of the account owner.</td>\n        </tr>\n        <tr>\n            <td>firstName</td>\n            <td>The first name of the account owner.</td>\n        </tr>\n        <tr>\n            <td>lastName</td>\n            <td>The last name of the account owner.</td>\n        </tr>\n        <tr>\n            <td>organizationName</td>\n            <td>The organization of the account owner.</td>\n        </tr>\n        <tr>\n            <td>phone</td>\n            <td>The phone number of the account owner.</td>\n        </tr>\n        <tr>\n            <td>roles</td>\n            <td>List of roles the account belongs to.</td>\n        </tr>\n        <tr>\n            <td>timeZone</td>\n            <td>The time zone of the account owner.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/apps-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "&lt;description&gt;",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;"\n    },\n    "reports": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;/reports/"\n    }\n  },\n  "liveCredentials": [],\n  "name": "&lt;name&gt;",\n  "sandboxCredentials": [\n    "https://lcp.points.com/v1/apps/&lt;id&gt;/sandbox-credentials/&lt;sc-id&gt;"\n  ],\n  "type": "app",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/apps.md",[],function(){return'<h2>Apps</h2>\n\n<p>Apps allow you to communicate with one or more loyalty programs. Apps are stored under the <code>/apps</code> endpoint. Use your account credentials to create one or more apps and to access your existing apps. Each app has its own set of business rules that determine which loyalty programs it can interact with, what actions it can perform, and how much each action costs.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>description</td>\n            <td>The description of the app.</td>\n        </tr>\n        <tr>\n            <td>liveCredentials</td>\n            <td>An array of <a href="#live-credentials">live credential</a> objects that the app can use to access the live environment.</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>The name of the app.</td>\n        </tr>\n        <tr>\n            <td>sandboxCredentials</td>\n            <td>An array of <a href="#sandbox-credentials">sandbox credential</a> objects that the app can use to access the sandbox environment.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/create-a-credit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "amount": 2000,\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "status": "success",\n  "transactionId": "15786560",\n  "type": "credit",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-credit.md",[],function(){return'<h3>Create a Credit</h3>\n\n<p>Create a credit object to attempt to add points to a loyalty program member\'s account. A credit first requires a successful <a href="#member-validations">member validation</a> that has not been used previously with another transaction. To create a new credit, POST a link to the member validation and the amount to add to the member\'s account under the credits endpoint for the loyalty program. Requests must be signed with your app\'s credentials.</p>\n\n<p>In sandbox mode, the LCP never communicates with the loyalty program. All operations are simulated. The LCP simulates different success and failure responses depending on the parameters sent when creating a credit.</p>\n\n<p>Credits can happen in real-time or in batch mode depending on the loyalty program. For real-time credits, the credit will be immediately executed by the loyalty program and the credit status will be either success or failure. For batch mode, the credit will be queued with other transactions and sent to the loyalty program in a batch job typically once a day. Batch credits will initially have a status of pending. Once the loyalty program responds, the credit will be updated to success or failure.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href="#loyalty-programs">loyalty program</a> (LP).</td>\n        </tr>\n        <tr>\n            <td>amount</td>\n            <td><p>The number of points to add to the member\'s account. Must be a positive integer.</p>\n                <p><strong>Sandbox mode</strong>: Set "amount" to these values to simulate different values for "status" in the response:\n                    <ul>\n                        <li>92: "systemError"</li>\n                        <li>93: "failure"</li>\n                        <li>94: "pending"</li>\n                        <li>95: "pending" that changes to "success"</li>\n                        <li>96: "pending" that changes to "failure"</li>\n                        <li>97: "systemError"</li>\n                        <li>98: "failure"</li>\n                        <li>99: "failure"</li>\n                        <li>Other: "success"</li>\n                    </ul>\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td>creditType</td>\n            <td>Indicates whether the credit is for base or bonus points or both (optional). Can be one of "base", "bonus" or "combinedBaseBonus".</td>\n        </tr>\n        <tr>\n            <td>memberValidation</td>\n            <td>Link to a member validation that identifies the member\'s account to be credited. The member validation cannot have been used with another transaction.</td>\n        </tr>\n        <tr>\n            <td>pic</td>\n            <td>Product Identification Code (optional). Only set this field if directed to by the loyalty program.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The credit object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the member validation is not valid.</p>'}),define("mdown!modules/../../documents/api/create-a-debit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "amount": 2000,\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "status": "success",\n  "transactionId": "15786561",\n  "type": "debit",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-debit.md",[],function(){return'<h3>Create a Debit</h3>\n\n<p>Create a debit object to attempt to deduct points from a loyalty program member\'s account. A debit first requires a successful <a href="#member-validations">member validation</a> that has not been used previously with another transaction. To create a new debit, POST a link to the member validation and the amount to deduct from the member\'s account under the debits endpoint for the loyalty program. Requests must be signed with your app\'s credentials.</p>\n\n<p>In sandbox mode, the LCP never communicates with the loyalty program. All operations are simulated. The LCP simulates different success and failure responses depending on the parameters sent when creating a debit.</p>\n\n<p>Debits can happen in real-time or in batch mode depending on the loyalty program. For real-time debits, the debit will be immediately executed by the loyalty program and the debit status will be either success or failure. For batch mode, the debit will be queued with other transactions and sent to the loyalty program in a batch job typically once a day. Batch debits will initially have a status of pending. Once the loyalty program responds, the debit will be updated to success or failure.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href="#loyalty-programs">loyalty program</a> (LP).</td>\n        </tr>\n        <tr>\n            <td>amount</td>\n            <td><p>The number of points to deduct from the member\'s account. Must be a positive integer less than the member\'s balance obtained from the member validation.</p>\n                <p><strong>Sandbox mode</strong>: Set "amount" to these values to simulate different values for "status" in the response:\n                    <ul>\n                        <li>91: "systemError"</li>\n                        <li>94: "pending"</li>\n                        <li>95: "pending" that changes to "success"</li>\n                        <li>96: "pending" that changes to "failure"</li>\n                        <li>97: "systemError"</li>\n                        <li>98: "systemError"</li>\n                        <li>99: "failure"</li>\n                        <li>Other: "success"</li>\n                    </ul>\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td>memberValidation</td>\n            <td>Link to a member validation that identifies the member\'s account to be debited. The member validation cannot have been used with another transaction.</td>\n        </tr>\n        <tr>\n            <td>pic</td>\n            <td>Product Identification Code (optional). Only set this field if directed to by the loyalty program.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The debit object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the member validation is not valid or if the amount is greater than the balance in the member validation.</p>'}),define("mdown!modules/../../documents/api/create-a-mv-delegate-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "memberValidation": {\n    "identifyingFactors": {\n      "firstName": "John",\n      "lastName": "Doe",\n      "memberId": "1234"\n    },\n    "authenticatingFactors": {\n      "password": "ABCD"\n    }\n  },\n  "memberValidationResponse": {\n    "balance": 2000\n  }\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/&lt;id&gt;\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "links": {\n    "self": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/&lt;id&gt;"\n  },\n  "type": "memberValidationDelegate",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-mv-delegate.md",[],function(){return'<h3>Create an MV Delegate</h3>\n\n<p>A loyalty program creates an MV delegate to pass an authenticated user to another application. To create an MV delegate, provide all the member information that is normally included in an MV request and response as well as the application that should have access to the MV. As a side effect, the LCP creates an MV using the provided member information and gives the other application read access to the MV. The LCP creates the MV without contacting the loyalty program since the creator of the MV delegate is considered a trusted source of member information. Only loyalty program applications can create MV delegates.</p>\n\n<p>The MV delegate response contains a link to the created MV. The loyalty program should redirect the user to the other application and pass the MV link to the other application. The other application then retrieves the MV and the member information. Using this method, the application does not have to collect member credentials to create its own MV. Instead, the application can immediately use the MV for debits and credits since the loyalty program has already validated the member’s credentials.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href="#loyalty-programs">loyalty program</a> (LP) making the request.</td>\n        </tr>\n        <tr>\n            <td>application</td>\n            <td>The application that will have permission to access the member validation.</td>\n        </tr>\n        <tr>\n            <td>identifyingFactors</td>\n            <td>Dictionary of fields that identify the loyalty program member (e.g., firstName, lastName, memberId). Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>authenticatingFactors</td>\n            <td>Dictionary of fields that authenticate the loyalty program member (e.g., password, pin). These fields are not displayed. Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>balance</td>\n            <td>The balance in the loyalty program member’s account.</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this member validation belongs to (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV delegate object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if any of the required MV request and response fields for the given LP are not provided.</p>'}),define("mdown!modules/../../documents/api/create-a-mv-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "identifyingFactors": {\n    "firstName": "John",\n    "lastName": "Doe",\n    "memberId": "1234"\n  },\n  "authenticatingFactors": {\n    "password": "ABCD"\n  }\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;\n{\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 2000,\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "identifyingFactors": {\n    "firstName": "John",\n    "lastName": "Doe",\n    "memberId": "1234"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-mv.md",[],function(){return'<h3>Create an MV</h3>\n\n<p>To create a new MV, POST the loyalty program member\'s account details to the loyalty program\'s MV service and sign the request with your app credentials. In sandbox mode, the LCP never communicates with the loyalty program. All operations are simulated. The LCP simulates different success and failure responses depending on the parameters sent when creating a MV. See <a href="#sandbox-mvs">Sandbox MVs</a> for details.</p>\n\n<p>Authenticating a member requires a specific set of fields, defined by the specific loyalty program you wish to communicate with. For example, some loyalty programs may require a member ID and password, while others require a member ID, last name, and password. To determine which fields are required for a particular loyalty program, get its <a href="#mv-request-schema">MV request schema</a>.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href="#loyalty-programs">loyalty program</a> (LP).</td>\n        </tr>\n        <tr>\n            <td>identifyingFactors</td>\n            <td>Dictionary of fields that identify the loyalty program member (e.g., firstName, lastName, memberId). Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>authenticatingFactors</td>\n            <td>Dictionary of fields that authenticate the loyalty program member (e.g., password, pin). These fields are not displayed. Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this member validation belongs to (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the required credentials are not provided or if the member could not be validated for the given loyalty program.</p>\n\n<table>\n    <thead>\n        <tr>\n            <th>HTTP Status Code</th>\n            <th>Error Code</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>422 Unprocessable Entity</td>\n            <td>INELIGIBLE</td>\n            <td>The member is not eligible to perform this transaction.</td>\n        </tr>\n        <tr>\n            <td>422 Unprocessable Entity</td>\n            <td>MAXIMUM_ATTEMPTS_EXCEEDED</td>\n            <td>The maximum number of incorrect MV attempts has been exceeded for this user.</td>\n        </tr>\n        <tr>\n            <td>422 Unprocessable Entity</td>\n            <td>UNKNOWN_MEMBER</td>\n            <td>The loyalty program couldn\'t find a member with the given credentials.</td>\n        </tr>\n        <tr>\n            <td>502 Bad Gateway</td>\n            <td>INVALID_UPSTREAM_RESPONSE</td>\n            <td>An external upstream service issued an invalid response.</td>\n        </tr>\n    </tbody>\n</table>';
}),define("mdown!modules/../../documents/api/create-a-report-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "description": "Report on all transactions performed by my app",\n  "name": "My App’s Transaction Report",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Report on all transactions performed by my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;"\n    },\n    "instances": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;/instances/"\n    }\n  },\n  "name": "My App’s Transaction Report",\n  "type": "report",\n  "updatedAt": "2014-04-19T07:56:08.482556Z",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-report-instance-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;\n{\n  "contentType": "application/json",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;"\n    },\n    "data": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;/data"\n    },\n    "report": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;"\n    }\n  },\n  "status": "success",\n  "type": "reportInstance",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-a-report-instance.md",[],function(){return'<h3>Create a Report Instance</h3>\n\n<p>Create a report instance to generate a copy of a report. Creating a report instance triggers the LCP to perform a GET on the URL provided in the report definition. If the GET is successful, the response body is the data for the report. Currently, the LCP only supports data with a Content-Type of application/json. The LCP keeps a copy of the data so the report instance can be retrieved later.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>report-id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The report instance if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the application or report does not exist. If the report instance was created, the status field indicates the progress in retrieving the report data from the application URL. A status of “success” indicates the report data is ready. A status is “failure” means one of the following:</p>\n\n<ul>\n  <li>The LCP could not connect to the URL provided in the report definition</li>\n  <li>The URL did not respond within 30 seconds</li>\n  <li>The URL did not return a 200 response</li>\n  <li>The Content-Type of the response was not application/json</li>\n</ul>'}),define("mdown!modules/../../documents/api/create-a-report.md",[],function(){return'<h3>Create a Report</h3>\n\n<p>Applications can publish reports that can be accessed by other users of the LCP. Create a report to register a new report with the LCP. Provide a name and description for your report as well as a URL where the LCP can get the report data when it is requested by a user.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>description</td>\n            <td>The description of the report (optional).</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>The name of the report.</td>\n        </tr>\n        <tr>\n            <td>url</td>\n            <td>The URL to access the report. Must be HTTPS.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The report object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the name is not provided or if the URL is not a valid HTTPS URL.</p>'}),define("mdown!modules/../../documents/api/create-account-credentials-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n}\n</code></pre>\n\n<h4>Example Request</h4>\n\n<pre><code>201 CREATED\nlocation: https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "accountCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-account-credentials.md",[],function(){return'<h3>Create Account Credentials</h3>\n\n<p>Account credentials are automatically created when you create your account. However, you can create additional credentials if you want another set or if your first set has been compromised. You must use your first set of credentials to sign the request.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>account-id</td>\n            <td>The identifier of the account to add credentials to.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The account credentials object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if you are not authorized to create new account credentials on this account.</p>'}),define("mdown!modules/../../documents/api/create-an-app-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://lcp.points.com/v1/apps/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "name": "My App",\n  "description": "Description of my app"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://lcp.points.com/v1/apps/&lt;id&gt;\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Description of my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;"\n    },\n    "reports": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;/reports/"\n    }\n  },\n  "liveCredentials": [],\n  "name": "My App",\n  "sandboxCredentials": [\n    "https://lcp.points.com/v1/apps/&lt;id&gt;/sandbox-credentials/&lt;sc-id&gt;"\n  ],\n  "type": "app",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-an-app.md",[],function(){return'<h3>Create an App</h3>\n\n<p>To create a new application, POST the application name and description to <code>/apps</code> and sign the request with your account credentials. Sandbox credentials are created automatically when you create an app. Your app can use these credentials to access the sandbox environment. Credentials to access the live environment can only be created by Points.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>name</td>\n            <td>The name of your app (required). Provide a short name for your app, up to 50 characters.</td>\n        </tr>\n        <tr>\n            <td>description</td>\n            <td>A description for your app (required). Provide a detailed description of your app, up to 4000 characters.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The app object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the name or description is not provided.</p>'}),define("mdown!modules/../../documents/api/create-an-order-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/orders/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "1234", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "1234", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "initial",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:47:00.000000Z",\n  "updates": []\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-an-order.md",[],function(){return'<h3>Create an Order</h3>\n\n<p>Create an order to store details of a transaction. Requests must be signed with app credentials (sandbox or live).</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>data.clientIpAddress</td>\n            <td>User’s IP address. Between 7 and 40 characters.</td>\n        </tr>\n        <tr>\n            <td>data.clientUserAgent</td>\n            <td>Header provided by user’s browser (user agent). Maximum length of 300 characters.</td>\n        </tr>\n        <tr>\n            <td>data.language</td>\n            <td>The user’s preferred language. Must be an <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tag</a>, which includes a two letter language code and an optional country code, hyphen separated. Language code is lowercase, country code is upper case.</td>\n        </tr>\n        <tr>\n            <td>data.orderDetails.basePoints</td>\n            <td>Number of points being added to or removed from the user’s LP account.</td>\n        </tr>\n        <tr>\n            <td>data.orderDetails.loyaltyProgram</td>\n            <td>Link to the loyalty program resource.</td>\n        </tr>\n        <tr>\n            <td>data.user.email</td>\n            <td>The email address of the user.</td>\n        </tr>\n        <tr>\n            <td>data.user.firstName</td>\n            <td>The first name of user.</td>\n        </tr>\n        <tr>\n            <td>data.user.lastName</td>\n            <td>The last name of user.</td>\n        </tr>\n        <tr>\n            <td>data.user.memberId</td>\n            <td>The member ID of the user’s LP account.</td>\n        </tr>\n        <tr>\n            <td>data.user.memberValidation</td>\n            <td>Link to the member validation resource.</td>\n        </tr>\n        <tr>\n            <td>orderType</td>\n            <td>\n                <p>The type of order. Can be one of:\n                    <ul>\n                        <li>"EXCHANGE_CREDIT" for credit orders</li>\n                        <li>"REDEEM_DEBIT" for debit orders</li>\n                    </ul>\n                    Contact Points to determine which order type you should use.\n                </p>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The order object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the order was not created due to a data validation error.</p>'}),define("mdown!modules/../../documents/api/create-sandbox-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>POST https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"]\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>201 CREATED\nlocation: https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "sandboxPermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/create-sandbox-permissions.md",[],function(){return'<h3>Create Sandbox Permissions</h3>\n\n<p>Gives an application permission to perform operations in sandbox mode on an LP. Only one set of sandbox permissions can exist for a given app-LP relationship.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The URL of the <a href="#loyalty-programs">loyalty program</a>.</td>\n        </tr>\n        <tr>\n            <td>operations</td>\n            <td>An array of operations that the applications is permitted to do in sandbox mode for the LP. Must be one or more of "mvs", "member-details", "mv-delegates", "debits", "credits", "credit-delegates".</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The sandbox permissions object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the app or LP doesn’t exist or if an invalid operation is provided. Returns an error with SANDBOX_PERMISSIONS_ALREADY_EXIST if the loyalty program and application already have sandbox permissions configured.</p>'}),define("mdown!modules/../../documents/api/credits-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "claimCode": "TZ9E-9YHMHU-PDEE",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "creditType": "base",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786560",\n  "type": "credit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/credits.md",[],function(){return"<h2>Credits</h2>\n\n<p>A credit is a transaction that adds points to a loyalty program member's account. Creating a credit object triggers the addition of points. A record of the credit is kept that can later be retrieved. A credit requires a member validation that has not been previously used for another transaction. Credits are stored for each loyalty program under <code>/lps/&lt;lp-id&gt;/credits/</code>.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>amount</td>\n            <td>The number of points added to the member's account. Must be a positive integer.</td>\n        </tr>\n        <tr>\n            <td>application</td>\n            <td>The application that created the transaction.</td>\n        </tr>\n        <tr>\n            <td>claimCode</td>\n            <td>The claim code for Amazon gift cards.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>creditType</td>\n            <td>Indicates whether the credit is for base or bonus points or both.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The loyalty program involved in the transaction.</td>\n        </tr>\n        <tr>\n            <td>memberValidation</td>\n            <td>Link to a member validation that identifies the member's account that was credited.</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this credit belongs to.</td>\n        </tr>\n        <tr>\n            <td>pic</td>\n            <td>Product Identification Code.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The status of the credit. The status can be success, failure, systemError, or pending. Pending indicates the transaction is waiting for a response from the loyalty program. Retrieve the credit later to determine whether it succeeded or failed.</td>\n        </tr>\n        <tr>\n            <td>transactionId</td>\n            <td>A transaction ID that can be used to reconcile the credit against the loyalty partner's records.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href=\"http://en.wikipedia.org/wiki/ISO_8601\">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/debits-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786561",\n  "type": "debit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/debits.md",[],function(){return'<h2>Debits</h2>\n\n<p>A debit is a transaction that takes points out of a loyalty program member’s account. Creating a debit object triggers the removal of points. A record of the debit is kept that can later be retrieved. A debit requires a member validation that has not been previously used for another transaction. Debits are stored for each loyalty program under <code>/lps/&lt;lp-id&gt;/debits/</code>.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>amount</td>\n            <td>The number of points deducted from the member\'s account. Must be a positive integer.</td>\n        </tr>\n        <tr>\n            <td>application</td>\n            <td>The application that created the transaction.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The loyalty program involved in the transaction.</td>\n        </tr>\n        <tr>\n            <td>memberValidation</td>\n            <td>Link to a member validation that identifies the member\'s account that was debited.</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this debit belongs to.</td>\n        </tr>\n        <tr>\n            <td>pic</td>\n            <td>Product Identification Code.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The status of the debit. The status can be success, failure, systemError, or pending. Pending indicates the transaction is waiting for a response from the loyalty program. Retrieve the debit later to determine whether it succeeded or failed.</td>\n        </tr>\n        <tr>\n            <td>transactionId</td>\n            <td>A transaction ID that can be used to reconcile the debit against the loyalty partner\'s records.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/delete-account-credentials-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>DELETE https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>204 NO CONTENT\n</code></pre>'}),define("mdown!modules/../../documents/api/delete-account-credentials.md",[],function(){return'<h3>Delete Account Credentials</h3>\n\n<p>If your account credentials have been compromised or if you no longer wish to use one of them, you can delete them. However, you must have at least one set of account credentials. You cannot delete your only set. If you want to replace your current set of credentials, first <a href="#create-account-credentials">create a new set of credentials</a> before deleting your current set.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>account-id</td>\n            <td>The identifier of the account that has the credentials.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the account credentials to be deleted.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>HTTP status code 204 (No Content) if successful. Otherwise, returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/delete-sandbox-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>DELETE https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>204 NO CONTENT\n</code></pre>'}),define("mdown!modules/../../documents/api/delete-sandbox-permissions.md",[],function(){return'<h3>Delete Sandbox Permissions</h3>\n\n<p>Revokes permissions for an application to perform operations in sandbox mode on an LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the sandbox permissions object.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>HTTP status code 204 (No Content) if successful. Otherwise, returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/documentation-overview.md",[],function(){return'<h1>LCP API Reference</h1>\n\n<p>For Points Loyalty Commerce Platform - Version 1.0<br><br></p>\n\n<h2>Document Overview</h2>\n\n<p>This document contains a complete list of all objects and actions supported by the Points Loyalty Commerce Platform (LCP) API. The document is organized as follows. Each object is described with the list its properties and an example instance. For each object, a list of possible actions are provided. Each action contains a description of the action itself as well as descriptions and examples of the request and response parameters to perform the action. This document assumes you are already familiar with the LCP and have read the <a href="./">LCP Getting Started Guide for Developers</a> and the <a href="./?doc=reference-manual">LCP Reference Manual</a>.</p>'}),define("mdown!modules/../../documents/api/get-a-credit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "claimCode": "TZ9E-9YHMHU-PDEE",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "creditType": "base",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786560",\n  "type": "credit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-credit.md",[],function(){return'<h3>Get a Credit</h3>\n\n<p>Retrieves the details of a previous credit. This retrieves a historical record of the credit transaction when it was created, including whether the transaction succeeded or failed.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the credit.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The credit object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-a-debit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786561",\n  "type": "debit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-debit.md",[],function(){return'<h3>Get a Debit</h3>\n\n<p>Retrieves the details of a previous debit. This retrieves a historical record of the debit transaction when it was created, including whether the transaction succeeded or failed.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the debit.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The debit object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-a-mv-delegate-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "links": {\n    "self": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/&lt;id&gt;"\n  },\n  "type": "memberValidationDelegate",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-mv-delegate.md",[],function(){return'<h3>Get an MV Delegate</h3>\n\n<p>Retrieves the details of a previous MV delegate. The MV delegate includes a link to the MV that was created and a link to the application that can retrieve the MV.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the MV delegate.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV delegate object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-a-mv-example.md",[],function(){
return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 2000,\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "identifyingFactors": {\n    "firstName": "John",\n    "lastName": "Doe",\n    "memberId": "1234"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-mv.md",[],function(){return"<h3>Get an MV</h3>\n\n<p>Retrieves the details of a previous MV. This retrieves the MV and member's balance in the state it was when it was when the MV was created. To get an updated member's balance, create a new MV. Requests must be signed with your app's credentials.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the member validation (MV).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV object if it exists, otherwise returns an <a href=\"./?doc=reference-manual#errors\">error</a>.</p>"}),define("mdown!modules/../../documents/api/get-a-report-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Report on all transactions performed by my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;"\n    },\n    "instances": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;/instances/"\n    }\n  },\n  "name": "My App’s Transaction Report",\n  "type": "report",\n  "updatedAt": "2014-05-08T17:55:34.511304Z",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-report-instance-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "contentType": "application/json",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;"\n    },\n    "data": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;/data"\n    },\n    "report": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;"\n    }\n  },\n  "status": "success",\n  "type": "reportInstance",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-a-report-instance.md",[],function(){return'<h3>Get a Report Instance</h3>\n\n<p>Retrieves the details of a report instance. The report instance contains a timestamp of when the report instance was created and the status of the request to generate the report instance. If the report instance was successful, get the data link to retrieve the report data.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>report-id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the report instance.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The report instance if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-a-report.md",[],function(){return'<h3>Get a Report</h3>\n\n<p>Retrieves the details of a report. The report contains the name and description of the report. It does not contain the report data. To get the report data, request an instance of the report.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The report object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-account-credentials-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;account-id&gt;/account-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "accountCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-account-credentials.md",[],function(){return'<h3>Get Account Credentials</h3>\n\n<p>Retrieves an existing set of account credentials.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>account-id</td>\n            <td>The identifier of the account that has the credentials.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the account credentials.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The account credentials object if it exists and you’re authorized to access it, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-account-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/account-permissions\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/account-permissions"\n    }\n  },\n  "support": [\n    "https://lcp.points.com/v1/accounts/&lt;account-id1&gt;",\n    "https://lcp.points.com/v1/accounts/&lt;account-id2&gt;"\n  ],\n  "type": "accountPermission",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-account-permissions.md",[],function(){return'<h3>Get Account Permissions</h3>\n\n<p>Retrieves the list of accounts that have permission to access the application and its resources.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The account permissions for the application if the application exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-an-account-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/accounts/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "accountCredentials": [\n    {\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;/account-credentials/&lt;ac-id&gt;"\n        }\n      },\n      "macAlgorithm": "HMAC-SHA1",\n      "macKey": "&lt;macKey&gt;",\n      "macKeyIdentifier": "&lt;macKeyIdentifier&gt;"\n    }\n  ],\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "email": "youremail@yourcompany.com",\n  "firstName": "First Name",\n  "lastName": "Last Name",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;"\n    },\n    "friendly": {\n      "href": "https://lcp.points.com/v1/accounts/youremail%40yourcompany.com"\n    }\n  },\n  "organizationName": "Company",\n  "phone": "416-555-1234",\n  "roles": [\n    "appDeveloper"\n  ],\n  "timeZone": "America/Toronto",\n  "type": "account",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-account.md",[],function(){return'<h3>Get an Account</h3>\n\n<p>Retrieves the account details for an existing account.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the account.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The account object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-an-app-by-mac-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/?macKeyIdentifier=&lt;mac-key-id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "apps": [\n    {\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "description": "Description of my app",\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;id&gt;"\n        },\n        "reports": {\n          "href": "https://lcp.points.com/v1/apps/&lt;id&gt;/reports/"\n        }\n      },\n      "liveCredentials": [],\n      "name": "My App",\n      "sandboxCredentials": [\n        "https://lcp.points.com/v1/apps/&lt;id&gt;/sandbox-credentials/&lt;sc-id&gt;"\n      ],\n      "type": "app",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    }\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-app-by-mac.md",[],function(){return"<h3>Get an App by MAC Key Identifier</h3>\n\n<p>If you don't remember your app's ID, you can also retrieve it by querying the <code>/apps</code> endpoint with your app's MAC key identifier.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>mac-key-id</td>\n            <td>The MAC key identifier for the live or sandbox credentials of an app.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>A list of apps. If an app was found with the given MAC key identifier, the app is included in the list. Otherwise, the list is empty.</p>"}),define("mdown!modules/../../documents/api/get-an-app-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Description of my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;"\n    },\n    "reports": {\n      "href": "https://lcp.points.com/v1/apps/&lt;id&gt;/reports/"\n    }\n  },\n  "liveCredentials": [],\n  "name": "My App",\n  "sandboxCredentials": [\n    "https://lcp.points.com/v1/apps/&lt;id&gt;/sandbox-credentials/&lt;sc-id&gt;"\n  ],\n  "type": "app",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-app.md",[],function(){return'<h3>Get an App</h3>\n\n<p>Retrieves the details of an existing app.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the app.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The app object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-an-lp-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/lps/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "creditType": "combinedBaseBonus",\n  "defaultLanguage": "en",\n  "hidden": false,\n  "links": {\n    "credits": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/credits/"\n    },\n    "debits": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/debits/"\n    },\n    "memberValidations": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/mvs/"\n    },\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;"\n    }\n  },\n  "name": "Rapid Rewards",\n  "partnerId": "dVNm",\n  "partnerName": "Southwest",\n  "rewardCurrency": "Points",\n  "translations": {\n    "es": {\n      "name": "Rapid Rewards",\n      "partnerName": "Southwest",\n      "rewardCurrency": "puntos"\n  },\n  "type": "loyaltyProgram",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-lp.md",[],function(){return'<h3>Get an LP</h3>\n\n<p>Retrieves the details of an LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The LP object if it exists and the requestor has permission to access it, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-an-mv-request-schema-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/schema\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "presentation": {\n    "labels": {\n      "identifyingFactors.firstName": {\n        "en": "First Name"\n      },\n      "identifyingFactors.lastName": {\n        "en": "Last Name"\n      },\n      "identifyingFactors.memberId": {\n        "en": "Membership Number"\n      },\n      "authenticatingFactors.password": {\n        "en": "Password"\n      }\n    },\n    "order": ["identifyingFactors.firstName", "identifyingFactors.lastName", "identifyingFactors.memberId", "authenticatingFactors.password"]\n  },\n  "schema": {\n    "type": "object",\n    "properties": {\n      "identifyingFactors": {\n        "type": "object",\n        "properties": {\n          "firstName": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          },\n          "lastName": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          },\n          "memberId": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          }\n        },\n        "required": ["firstName", "lastName", "memberId"],\n        "additionalProperties": false\n      },\n      "authenticatingFactors": {\n        "type": "object",\n        "properties": {\n          "password": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          }\n        },\n        "required": ["password"],\n        "additionalProperties": false\n      }\n    },\n    "required": ["identifyingFactors", "authenticatingFactors"],\n    "additionalProperties": false\n  },\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/schema"\n    }\n  },\n  "type": "memberValidationRequestSchema",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-mv-request-schema.md",[],function(){return'<h3>Get an MV Request Schema</h3>\n\n<p>Retrieves the MV request schema that defines the JSON document applications must send to do an MV.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV request schema object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-an-order-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "1234", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "complete",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:50:00.000000Z",\n  "updates": [\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n      "status": "success",\n      "type": "memberValidation",\n      "updatedAt": "2014-02-26T17:47:30.000000Z"\n    },\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;credit-id&gt;",\n      "status": "success",\n      "type": "credit",\n      "updatedAt": "2014-02-26T17:49:00.000000Z"\n    }\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-an-order.md",[],function(){return'<h3>Get an Order</h3>\n\n<p>Retrieves the details of an order.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the order.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The order object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-live-credentials-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-credentials/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "liveCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-live-credentials.md",[],function(){return'<h3>Get Live Credentials</h3>\n\n<p>Retrieves an existing set of live credentials.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the app that has the credentials.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the live credentials.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The live credentials object if it exists and you\'re authorized to access it, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-live-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-permissions/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "livePermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-live-permissions.md",[],function(){return'<h3>Get Live Permissions</h3>\n\n<p>Retrieves the operations that an app can perform in live mode for an LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the live permissions object.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The live permissions object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-report-instance-data-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;/data\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  &lt;data provided by application&gt;\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-report-instance-data.md",[],function(){return'<h3>Get Report Instance Data</h3>\n\n<p>Retrieves the data in a report instance. The data is a cached copy of what the application returned to the LCP when the report instance was created. Check the Content-Type header to determine how to process the data.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>report-id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the report instance.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The report data if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-sandbox-credentials-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-credentials/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "sandboxCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-sandbox-credentials.md",[],function(){return'<h3>Get Sandbox Credentials</h3>\n\n<p>Retrieves an existing set of sandbox credentials.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the app that has the credentials.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the sandbox credentials.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The sandbox credentials object if it exists and you\'re authorized to access it, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-sandbox-mvs-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/sandbox-responses\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "sandboxResponses": [\n    {\n      "request": {\n        "identifyingFactors": {\n          "firstName": "Tony",\n          "lastName": "Smith",\n          "memberId": "99999999"\n        },\n        "authenticatingFactors": {\n          "password": "PASSWORD"\n        }\n      },\n      "response": {\n         "error": "INVALID_UPSTREAM_RESPONSE"\n      }\n    },\n    {\n      "request": {\n        "identifyingFactors": {\n          "firstName": "Joe",\n          "lastName": "Smith",\n          "memberId": "12345678"\n        },\n        "authenticatingFactors": {\n          "password": "ABCDEFGH"\n        }\n      },\n      "response": {\n        "balance": 205123\n      }\n    },\n    ...\n  ],\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/sandbox-responses"\n    }\n  }\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-sandbox-mvs.md",[],function(){return'<h3>Get Sandbox MVs</h3>\n\n<p>Retrieves the list of sandbox MVs that can be used for testing MVs in sandbox mode. Sandbox MVs are LP-specific.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The sandbox MVs for the LP, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/get-sandbox-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "sandboxPermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/get-sandbox-permissions.md",[],function(){return'<h3>Get Sandbox Permissions</h3>\n\n<p>Retrieves the operations that an app can perform in sandbox mode for an LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the sandbox permissions object.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The sandbox permissions object if it exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/list-all-apps-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/?limit=10&amp;offset=0\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "apps": [\n    {\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "description": "Description of my app",\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;id&gt;"\n        },\n        "reports": {\n          "href": "https://lcp.points.com/v1/apps/&lt;id&gt;/reports/"\n        }\n      },\n      "liveCredentials": [],\n      "name": "My App",\n      "sandboxCredentials": [\n        "https://lcp.points.com/v1/apps/&lt;id&gt;/sandbox-credentials/&lt;sc-id&gt;"\n      ],\n      "type": "app",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-apps.md",[],function(){return"<h3>List all Apps</h3>\n\n<p>Retrieves a list of all apps that you have permission to access.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>limit</td>\n            <td>The maximum number of apps to include in the list (optional). If not provided, defaults to 10. Max is 100.</td>\n        </tr>\n        <tr>\n            <td>offset</td>\n            <td>The starting offset when returning a list of apps (optional). Use for pagination. For example, to retrieve the second page of 10 apps, use offset=10. Defaults to 0 if not provided.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The list of apps you have permission to access.</p>"}),define("mdown!modules/../../documents/api/list-all-credits-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/credits/?startCreatedAt=2014-04-19T07:00:00.000000Z&amp;endCreatedAt=2014-04-19T08:00:00.000000Z&amp;limit=10&amp;offset=0\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "credits" : [\n    {\n      "amount": 2000,\n      "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n      "claimCode": "TZ9E-9YHMHU-PDEE",\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "creditType": "base",\n      "links": {\n        "self": {\n          "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;"\n        }\n      },\n      "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n      "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n      "pic": "ABC",\n      "status": "success",\n      "transactionId": "15786560",\n      "type": "credit",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    },\n    ...\n  ]\n}\n</code></pre>';
}),define("mdown!modules/../../documents/api/list-all-credits.md",[],function(){return'<h3>List all Credits</h3>\n\n<p>Retrieves the list of all credits that the requestor has permission to access.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>application</td>\n            <td>Filters the list by application (optional).</td>\n        </tr>\n        <tr>\n            <td>endCreatedAt</td>\n            <td>Filters the list to resources created before the given <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time (optional).</td>\n        </tr>\n        <tr>\n            <td>limit</td>\n            <td>The maximum number of resources to include in the list (optional). If not provided, defaults to 10. Max is 100.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>Filters the list by loyalty program (optional).</td>\n        </tr>\n        <tr>\n            <td>offset</td>\n            <td>The starting offset when returning a list of resources (optional). Use for pagination. For example, to retrieve the second page of 10 resources, use offset=10. Defaults to 0 if not provided.</td>\n        </tr>\n        <tr>\n            <td>startCreatedAt</td>\n            <td>Filters the list to resources created at or after the given <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>A list of credits.</p>'}),define("mdown!modules/../../documents/api/list-all-debits-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/debits/?startCreatedAt=2014-04-19T07:00:00.000000Z&amp;endCreatedAt=2014-04-19T08:00:00.000000Z&amp;limit=10&amp;offset=0\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "debits" : [\n    {\n      "amount": 2000,\n      "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "links": {\n        "self": {\n          "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;"\n        }\n      },\n      "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n      "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n      "pic": "ABC",\n      "status": "success",\n      "transactionId": "15786561",\n      "type": "debit",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-debits.md",[],function(){return'<h3>List all Debits</h3>\n\n<p>Retrieves the list of all debits that the requestor has permission to access.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>application</td>\n            <td>Filters the list by application (optional).</td>\n        </tr>\n        <tr>\n            <td>endCreatedAt</td>\n            <td>Filters the list to resources created before the given <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time (optional).</td>\n        </tr>\n        <tr>\n            <td>limit</td>\n            <td>The maximum number of resources to include in the list (optional). If not provided, defaults to 10. Max is 100.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>Filters the list by loyalty program (optional).</td>\n        </tr>\n        <tr>\n            <td>offset</td>\n            <td>The starting offset when returning a list of resources (optional). Use for pagination. For example, to retrieve the second page of 10 resources, use offset=10. Defaults to 0 if not provided.</td>\n        </tr>\n        <tr>\n            <td>startCreatedAt</td>\n            <td>Filters the list to resources created at or after the given <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>A list of debits.</p>'}),define("mdown!modules/../../documents/api/list-all-live-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-permissions/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "livePermissions": [\n    {\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-permissions/&lt;id&gt;"\n        }\n      },\n      "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n      "operations": ["mvs", "debits", "credits"],\n      "type": "livePermission"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-live-permissions.md",[],function(){return'<h3>List all Live Permissions</h3>\n\n<p>Retrieves the list of operations that an app can perform in live mode for each LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The list of live permissions if the app exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/list-all-lps-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/lps/?limit=10&amp;offset=0&amp;partnerName=Southwest&amp;type=loyaltyProgram\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "lps" : [\n    {\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "creditType": "combinedBaseBonus",\n      "defaultLanguage": "en",\n      "hidden": false,\n      "links": {\n        "credits": {\n          "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/credits/"\n        },\n        "debits": {\n          "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/debits/"\n        },\n        "memberValidations": {\n          "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/mvs/"\n        },\n        "self": {\n          "href": "https://lcp.points.com/v1/lps/&lt;id&gt;"\n        }\n      },\n      "name": "Rapid Rewards",\n      "partnerId": "dVNm",\n      "partnerName": "Southwest",\n      "rewardCurrency": "Points",\n      "translations": {\n        "es": {\n          "name": "Rapid Rewards",\n          "partnerName": "Southwest",\n          "rewardCurrency": "puntos"\n      },\n      "type": "loyaltyProgram",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-lps.md",[],function(){return'<h3>List all LPs</h3>\n\n<p>Retrieves the list of all LPs in the platform. Requests using live or sandbox credentials only return LPs that the app has permission to access in live or sandbox mode.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>limit</td>\n            <td>The maximum number of LPs to include in the list (optional). If not provided, defaults to 10. Max is 100.</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>Filters the list by the name associated with the loyalty program (optional).</td>\n        </tr>\n        <tr>\n            <td>offset</td>\n            <td>The starting offset when returning a list of LPs (optional). Use for pagination. For example, to retrieve the second page of 10 LPs, use offset=10. Defaults to 0 if not provided.</td>\n        </tr>\n        <tr>\n            <td>partnerName</td>\n            <td>Filters the list by the partner associated with the loyalty program (optional).</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource (optional). Can be either "loyaltyProgram" or "giftCard".</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>A list of LP objects.</p>'}),define("mdown!modules/../../documents/api/list-all-orders-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/search/orders/?limit=10&amp;offset=0&amp;q=orderType:EXCHANGE_CREDIT\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "orders" : [\n    {\n      "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n      "confirmationNumber": "3902-2266-8404-8538-1721",\n      "createdAt": "2014-02-26T17:47:00.000000Z",\n      "data": {\n        "clientIpAddress": "127.0.0.1", \n        "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n        "language": "en-US", \n        "orderDetails": {\n          "basePoints": 2000, \n          "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n        }, \n        "user": {\n          "email": "jdoe@example.com",\n          "firstName": "John", \n          "lastName": "Doe", \n          "memberId": "1234", \n          "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n        }\n      },\n      "links": {\n        "self": {\n          "href": "https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;"\n        }\n      },\n      "orderType": "EXCHANGE_CREDIT",\n      "status": "complete",\n      "type": "order",\n      "updatedAt": "2014-02-26T17:50:00.000000Z",\n      "updates": [\n        {\n          "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n          "status": "success",\n          "type": "memberValidation",\n          "updatedAt": "2014-02-26T17:47:30.000000Z"\n        },\n        {\n          "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;credit-id&gt;",\n          "status": "success",\n          "type": "credit",\n          "updatedAt": "2014-02-26T17:49:00.000000Z"\n        }\n      ]\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-orders.md",[],function(){return'<h3>List all Orders</h3>\n\n<p>Retrieves the list of all orders that the requestor has permission to access.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>limit</td>\n            <td>The maximum number of orders to include in the list (optional). If not provided, defaults to 10. Max is 100.</td>\n        </tr>\n        <tr>\n            <td>offset</td>\n            <td>The starting offset when returning a list of orders (optional). Use for pagination. For example, to retrieve the second page of 10 orders, use offset=10. Defaults to 0 if not provided.</td>\n        </tr>\n        <tr>\n            <td>q</td>\n            <td>Filters the list of orders using <a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html#query-string-syntax">Elastic Search query string syntax</a> (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>A list of orders.</p>'}),define("mdown!modules/../../documents/api/list-all-report-instances-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "instances": [\n    {\n      "contentType": "application/json",\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;"\n        },\n        "data": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;/data"\n        },\n        "report": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;"\n        }\n      },\n      "status": "success",\n      "type": "reportInstance",\n      "updatedAt": "2014-05-08T17:55:34.511304Z"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-report-instances.md",[],function(){return'<h3>List all Report Instances</h3>\n\n<p>Retrieves the list of report instances that have been requested.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>report-id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The list of reports instances if the app and report exist, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/list-all-reports-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "reports": [\n    {\n      "createdAt": "2014-04-19T07:56:08.482556Z",\n      "description": "Report on all transactions performed by my app",\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;"\n        },\n        "instances": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;/instances/"\n        }\n      },\n      "name": "My App’s Transaction Report",\n      "type": "report",\n      "updatedAt": "2014-05-08T17:55:34.511304Z",\n      "url": "https://myapp.com/reports/report-name"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-reports.md",[],function(){return'<h3>List all Reports</h3>\n\n<p>Retrieves the list of reports that an app has registered with the LCP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The list of reports if the app exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/list-all-sandbox-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>GET https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "sandboxPermissions": [\n    {\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;"\n        }\n      },\n      "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n      "operations": ["mvs", "debits", "credits"],\n      "type": "sandboxPermission"\n    },\n    ...\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/list-all-sandbox-permissions.md",[],function(){return'<h3>List all Sandbox Permissions</h3>\n\n<p>Retrieves the list of operations that an app can perform in sandbox mode for each LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The list of sandbox permissions if the app exists, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/live-credentials-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "liveCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/live-credentials.md",[],function(){return"<h2>Live Credentials</h2>\n\n<p>Live credentials authenticate your app to perform actions on the LCP in live mode. App credentials are different for sandbox and live mode. Live credentials are created by Points when your app is promoted to live mode. Live credentials are available at <code>/apps/&lt;app-id&gt;/live-credentials</code> and are used to sign requests to <code>/lps</code> in live mode. You cannot create or delete live credentials.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>macAlgorithm</td>\n            <td>The MAC algorithm describes the algorithm used to create the signature.</td>\n        </tr>\n        <tr>\n            <td>macKey</td>\n            <td>The MAC key is the shared secret key. It should never be shared with anyone or transmitted in any request. Keep this key secure as you would any private key.</td>\n        </tr>\n        <tr>\n            <td>macKeyIdentifier</td>\n            <td>The MAC key identifier uniquely identifies the MAC key. The MAC key identifier is sent with each request to tell the server which MAC key was used to sign the request.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/live-permissions-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/live-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "livePermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/live-permissions.md",[],function(){return"<h2>Live Permissions</h2>\n\n<p>Live permissions describe what operations an application can do in live mode for each loyalty program.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The URL of the loyalty program.</td>\n        </tr>\n        <tr>\n            <td>operations</td>\n            <td>An array of operations that the application is permitted to do in live mode for the LP.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/loyalty-programs-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "creditType": "combinedBaseBonus",\n  "defaultLanguage": "en",\n  "hidden": false,\n  "links": {\n    "credits": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/credits/"\n    },\n    "debits": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/debits/"\n    },\n    "memberValidations": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;/mvs/"\n    },\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;id&gt;"\n    }\n  },\n  "name": "Rapid Rewards",\n  "partnerId": "dVNm",\n  "partnerName": "Southwest",\n  "rewardCurrency": "Points",\n  "translations": {\n    "es": {\n      "name": "Rapid Rewards",\n      "partnerName": "Southwest",\n      "rewardCurrency": "puntos"\n  },\n  "type": "loyaltyProgram",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/loyalty-programs.md",[],function(){return'<h2>Loyalty Programs (LPs)</h2>\n\n<p>A loyalty program (LP) allows applications to perform member validations, debits, and credits against the loyalty program’s member database. Loyalty programs are found under the <code>/lps</code> endpoint.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>creditType</td>\n            <td>Indicates whether the LP requires base and bonus points to be fulfilled as one credit or as two separate credits.</td>\n        </tr>\n        <tr>\n            <td>defaultLanguage</td>\n            <td>The default language of the loyalty program. The name, partnerName, and rewardCurrency properties are in this language. <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tags</a> are used.</td>\n        </tr>\n        <tr>\n            <td>hidden</td>\n            <td>Flag indicating whether the LP is shown in the list of LPs.</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>The name of the loyalty program.</td>\n        </tr>\n        <tr>\n            <td>partnerId</td>\n            <td>A four character string uniquely identifying the loyalty program.</td>\n        </tr>\n        <tr>\n            <td>partnerName</td>\n            <td>The partner associated with the loyalty program.</td>\n        </tr>\n        <tr>\n            <td>rewardCurrency</td>\n            <td>The name of the reward currency (e.g. points or miles).</td>\n        </tr>\n        <tr>\n            <td>translations</td>\n            <td>A set of language translations for the name, partnerName, and rewardCurrency properties. <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tags</a> are used.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/member-validations-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 2000,\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "identifyingFactors": {\n    "firstName": "John",\n    "lastName": "Doe",\n    "memberId": "1234"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/member-validations.md",[],function(){return'<h2>Member Validations (MVs)</h2>\n\n<p>A member validation (MV) authenticates a member of a loyalty program and retrieves their balance. MVs are required before any other transactions can be performed on a member\'s account and each transaction requires a separate MV.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>application</td>\n            <td>The application that created the transaction.</td>\n        </tr>\n        <tr>\n            <td>authenticatingFactors</td>\n            <td>Dictionary of fields that authenticate the loyalty program member (e.g., password, pin). These fields are not displayed. Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>balance</td>\n            <td>The balance in the loyalty program member\'s account.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>identifyingFactors</td>\n            <td>Dictionary of fields that identify the loyalty program member (e.g., firstName, lastName, memberId). Varies based on the LP’s <a href="#mv-request-schema">MV request schema</a>.</td>\n        </tr>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The loyalty program involved in the transaction.</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this member validation belongs to.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The status of the member validation. The status is always success.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/mv-delegates-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "links": {\n    "self": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mv-delegates/&lt;id&gt;"\n  },\n  "type": "memberValidationDelegate",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/mv-delegates.md",[],function(){return'<h2>MV Delegates</h2>\n\n<p>An MV delegate is a member validation that a loyalty program created for another application. MV delegates are used for Single Sign-On (SSO) behaviour. When a loyalty program application wants to redirect an authenticated member to a 3rd-party application, the loyalty program application can create an MV delegate so that the other application doesn’t need to re-authenticate the user.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>application</td>\n            <td>The application that has permission to access the member validation.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>memberValidation</td>\n            <td>A link to the member validation that the application can access.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/mv-request-schema-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "presentation": {\n    "labels": {\n      "identifyingFactors.firstName": {\n        "en": "First Name"\n      },\n      "identifyingFactors.lastName": {\n        "en": "Last Name"\n      },\n      "identifyingFactors.memberId": {\n        "en": "Membership Number"\n      },\n      "authenticatingFactors.password": {\n        "en": "Password"\n      }\n    },\n    "order": ["identifyingFactors.firstName", "identifyingFactors.lastName", "identifyingFactors.memberId", "authenticatingFactors.password"]\n  },\n  "schema": {\n    "type": "object",\n    "properties": {\n      "identifyingFactors": {\n        "type": "object",\n        "properties": {\n          "firstName": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          },\n          "lastName": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          },\n          "memberId": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          }\n        },\n        "required": ["firstName", "lastName", "memberId"],\n        "additionalProperties": false\n      },\n      "authenticatingFactors": {\n        "type": "object",\n        "properties": {\n          "password": {\n            "type": "string",\n            "minLength": 1,\n            "maxLength": 100\n          }\n        },\n        "required": ["password"],\n        "additionalProperties": false\n      }\n    },\n    "required": ["identifyingFactors", "authenticatingFactors"],\n    "additionalProperties": false\n  },\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/schema"\n    }\n  },\n  "type": "memberValidationRequestSchema",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/mv-request-schema.md",[],function(){return'<h2>MV Request Schema</h2>\n\n<p>Each LP has an MV request schema that defines the JSON document applications must send to do an MV.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>presentation</td>\n            <td>Describes how to present the MV request schema to the user to obtain their loyalty program credentials. Includes localized labels for each MV request field and the order to present the fields. <a href="http://en.wikipedia.org/wiki/IETF_language_tag">IETF language tags</a> are used.</td>\n        </tr>\n        <tr>\n            <td>schema</td>\n            <td>A JSON schema that defines the format for MV requests. The preferred format is two top-level properties: identifyingFactors and authenticatingFactors. Identifying factors include fields like first name, last name, and member ID. Authenticating factors include fields like password and pin that should not be displayed to users.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>';
}),define("mdown!modules/../../documents/api/orders-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "1234", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "complete",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:50:00.000000Z",\n  "updates": [\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n      "status": "success",\n      "type": "memberValidation",\n      "updatedAt": "2014-02-26T17:47:30.000000Z"\n    },\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;credit-id&gt;",\n      "status": "success",\n      "type": "credit",\n      "updatedAt": "2014-02-26T17:49:00.000000Z"\n    }\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/orders.md",[],function(){return'<h2>Orders</h2>\n\n<p>All transactions must be part of an order for them to appear in the order search support tool and the transaction reports in the <a href="https://admin.lcp.points.com/">LCP Admin</a> console. An order is a composite transaction that associates multiple primitive transactions together. Primitive transactions include MVs, debits, and credits. The order contains details about the composite transaction and its fulfillment history. Additional metadata about the order can also be included in the data section. If you have <a href="https://www.getpostman.com/" target="_new">Postman</a> installed, click <a href="https://www.getpostman.com/collections/9393bd27614afdd01e6b">here</a> to install a Postman collection which will take through two examples of what is involved in creating an order on the LCP (in order for it to run, you will first need to download and import <a href="HelloLoyaltyWorld.json">this Postman environment</a>).</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>application</td>\n            <td>The application that created the transaction.</td>\n        </tr>\n        <tr>\n            <td>confirmationNumber</td>\n            <td>The order confirmation number. Provide this number to the user. Use it when contacting Points for support.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>data</td>\n            <td>The details of the order.</td>\n        </tr>\n        <tr>\n            <td>orderType</td>\n            <td>\n                <p>The type of order. Can be one of:\n                    <ul>\n                        <li>"EXCHANGE_CREDIT" for credit orders</li>\n                        <li>"REDEEM_DEBIT" for debit orders</li>\n                    </ul>\n                    Contact Points to determine which order type you should use.\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>\n                <p>The overall status of the order. Can be one of:\n                    <ul>\n                        <li>"initial" when the order is created</li>\n                        <li>"debitFailed" if the debit status is failure</li>\n                        <li>"debitPending" if the debit status is pending</li>\n                        <li>"debitError" if the debit status is systemError</li>\n                        <li>"creditFailed" if the credit status is failure</li>\n                        <li>"creditPending" if the credit status is pending</li>\n                        <li>"creditError" if the credit status is systemError</li>\n                        <li>"complete" if all primitives succeeded</li>\n                        <li>"reversed" if all primitives are reversed</li>\n                        <li>"statusPending" if the order has been updated and needs its status to be recalculated</li>\n                    </ul>\n                </p>\n            </td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n        <tr>\n            <td>updates</td>\n            <td>\n                <p>A list of updates to transactions attached to this order. Each update contains:\n                    <ul>\n                        <li><strong>resource</strong>: a link to the transaction</li>\n                        <li><strong>status</strong>: the status of the transaction</li>\n                        <li><strong>type</strong>: the type of transaction</li>\n                        <li><strong>updatedAt</strong>: the timestamp when the transaction was updated</li>\n                    </ul>\n                </p>\n            </td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/release-notes.md",[],function(){return"<h2>Release Notes</h2>\n\n<table>\n    <thead>\n        <tr>\n            <th>Release Date</th>\n            <th>Notes</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>2016-01-28</td>\n            <td>Added ability to filter LPs by name\n            </td>\n        </tr>\n        <tr>\n            <td>2015-12-08</td>\n            <td>Added member-details to sandbox permissions\n            </td>\n        </tr>\n        <tr>\n            <td>2015-10-28</td>\n            <td>Added sandbox permissions\n            </td>\n        </tr>\n        <tr>\n            <td>2015-10-14</td>\n            <td>Added time zone to accounts\n            <br>Added ability to update an account\n            </td>\n        </tr>\n        <tr>\n            <td>2015-09-16</td>\n            <td>Added ability to update transactionId for debits and credits\n            </td>\n        </tr>\n        <tr>\n            <td>2015-07-28</td>\n            <td>Added sandbox MVs\n            <br>Added identifying and authenticating factors for MVs\n            </td>\n        </tr>\n        <tr>\n            <td>2015-06-30</td>\n            <td>Added roles to accounts\n            </td>\n        </tr>\n        <tr>\n            <td>2015-06-19</td>\n            <td>Added hidden flag to LPs\n            </td>\n        </tr>\n        <tr>\n            <td>2015-06-10</td>\n            <td>Added ability to filter LPs by type\n            <br>Added claimCode to credits\n            </td>\n        </tr>\n        <tr>\n            <td>2015-05-14</td>\n            <td>Added ability to localize LPs\n            <br>Added MV request schema\n            </td>\n        </tr>\n        <tr>\n            <td>2015-05-14</td>\n            <td>Added ability to localize LPs\n            </td>\n        </tr>\n        <tr>\n            <td>2015-04-29</td>\n            <td>Added ability to get loyalty programs (LPs)\n            </td>\n        </tr>\n        <tr>\n            <td>2015-04-02</td>\n            <td>Added ability to get lists of debits and credits and update them\n            </td>\n        </tr>\n        <tr>\n            <td>2015-03-24</td>\n            <td>Added creditType to credits\n            <br>Added new sandbox mode behaviour for debits and credits\n            </td>\n        </tr>\n        <tr>\n            <td>2015-03-11</td>\n            <td>Added ability to update order status\n            </td>\n        </tr>\n        <tr>\n            <td>2015-02-10</td>\n            <td>Added orders\n            </td>\n        </tr>\n        <tr>\n            <td>2015-01-21</td>\n            <td>Removed ability to create an account via the API\n            <br>Added additional MV error codes\n            <br>Added systemError status for debits and credits\n            </td>\n        </tr>\n        <tr>\n            <td>2014-10-16</td>\n            <td>Removed billingInfo fields from debits and credits\n            <br>Added optional pic field to debits and credits\n            </td>\n        </tr>\n        <tr>\n            <td>2014-06-25</td>\n            <td>Added status to member validations\n            </td>\n        </tr>\n        <tr>\n            <td>2014-06-06</td>\n            <td>Added application and loyaltyProgram to transactions\n            </td>\n        </tr>\n        <tr>\n            <td>2014-05-28</td>\n            <td>Added account permissions\n            </td>\n        </tr>\n        <tr>\n            <td>2014-05-14</td>\n            <td>Added type, updatedAt, createdAt to all resources\n            </td>\n        </tr>\n        <tr>\n            <td>2014-04-23</td>\n            <td>Added list of apps\n            </td>\n        </tr>\n        <tr>\n            <td>2014-04-03</td>\n            <td>Added reports and report instances\n            </td>\n        </tr>\n        <tr>\n            <td>2014-02-19</td>\n            <td>Updated MV delegates\n            </td>\n        </tr>\n        <tr>\n            <td>2014-01-23</td>\n            <td>Added MV delegates\n            </td>\n        </tr>\n        <tr>\n            <td>2013-12-20</td>\n            <td>Added billingInfo fields to debits and credits\n            </td>\n        </tr>\n        <tr>\n            <td>2013-12-11</td>\n            <td>Added support for OPTIONS HTTP method\n            </td>\n        </tr>\n        <tr>\n            <td>2013-11-27</td>\n            <td>Added live permissions\n            <br>Added pending status for debit and credit transactions\n            </td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/report-instances-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "contentType": "application/json",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;"\n    },\n    "data": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;/instances/&lt;id&gt;/data"\n    },\n    "report": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;report-id&gt;"\n    }\n  },\n  "status": "success",\n  "type": "reportInstance",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/report-instances.md",[],function(){return'<h2>Report Instances</h2>\n\n<p>A report instance is a record of a request to generate a copy of an application report. The report instance contains information about when it was created and the status of the request to generate the report. If the report generation was successful, the report instance contains the content type of the report data and a link to get the report data.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>contentType</td>\n            <td>The content type of the data in the report instance.</td>\n        </tr>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The status of the request to generate a report instance. The status can be success or failure.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/reports-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Report on all transactions performed by my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;"\n    },\n    "instances": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;/instances/"\n    }\n  },\n  "name": "My App’s Transaction Report",\n  "type": "report",\n  "updatedAt": "2014-05-08T17:55:34.511304Z",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/reports.md",[],function(){return'<h2>Reports</h2>\n\n<p>Reports allow applications to publish data that is accessible by other users of the LCP. Reports are registered with the LCP for a given application. The application provides the data for the report when the report is requested. A report definition includes the report name, description and a URL belonging to the application where the LCP requests the data.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>createdAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was created.</td>\n        </tr>\n        <tr>\n            <td>description</td>\n            <td>The description of the report.</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>The name of the report.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n        <tr>\n            <td>updatedAt</td>\n            <td>The <a href="http://en.wikipedia.org/wiki/ISO_8601">ISO 8601</a> time when the resource was last updated.</td>\n        </tr>\n        <tr>\n            <td>url</td>\n            <td>The URL to access the report.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/sandbox-credentials-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-credentials/&lt;id&gt;"\n    }\n  },\n  "macAlgorithm": "HMAC-SHA1",\n  "macKey": "&lt;macKey&gt;",\n  "macKeyIdentifier": "&lt;macKeyIdentifier&gt;",\n  "type": "sandboxCredential"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/sandbox-credentials.md",[],function(){return"<h2>Sandbox Credentials</h2>\n\n<p>Sandbox credentials authenticate your app to perform actions on the LCP. A set of sandbox credentials is created automatically when you create your app. App credentials are different for sandbox and live mode. Sandbox credentials are available at <code>/apps/&lt;app-id&gt;/sandbox-credentials</code> and are used to sign requests to <code>/lps</code>.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>macAlgorithm</td>\n            <td>The MAC algorithm describes the algorithm used to create the signature.</td>\n        </tr>\n        <tr>\n            <td>macKey</td>\n            <td>The MAC key is the shared secret key. It should never be shared with anyone or transmitted in any request. Keep this key secure as you would any private key.</td>\n        </tr>\n        <tr>\n            <td>macKeyIdentifier</td>\n            <td>The MAC key identifier uniquely identifies the MAC key. The MAC key identifier is sent with each request to tell the server which MAC key was used to sign the request.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/sandbox-mvs-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "sandboxResponses": [\n    {\n      "request": {\n        "identifyingFactors": {\n          "firstName": "Tony",\n          "lastName": "Smith",\n          "memberId": "99999999"\n        },\n        "authenticatingFactors": {\n          "password": "PASSWORD"\n        }\n      },\n      "response": {\n         "error": "INVALID_UPSTREAM_RESPONSE"\n      }\n    },\n    {\n      "request": {\n        "identifyingFactors": {\n          "firstName": "Joe",\n          "lastName": "Smith",\n          "memberId": "12345678"\n        },\n        "authenticatingFactors": {\n          "password": "ABCDEFGH"\n        }\n      },\n      "response": {\n        "balance": 205123\n      }\n    },\n    ...\n  ],\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/metadata/sandbox-responses"\n    }\n  }\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/sandbox-mvs.md",[],function(){return'<h2>Sandbox MVs</h2>\n\n<p>Each LP has a set of sandbox MVs that can be used for testing MVs in sandbox mode. If the MV request matches one of the sandbox MVs, the specified MV response or error is returned. If none of the sandbox MV requests match then UNKNOWN_MEMBER is returned.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>sandboxResponses</td>\n            <td>A list of request/response pairs. Each request matches the <a href="#mv-request-schema">MV request schema</a> for the LP. Each response can be either an MV response or an <a href="./?doc=reference-manual#errors">error code</a> of INVALID_UPSTREAM_RESPONSE, INELIGIBLE, or MAXIMUM_ATTEMPTS_EXCEEDED.</td>\n        </tr>\n    </tbody>\n</table>'}),define("mdown!modules/../../documents/api/sandbox-permissions-example.md",[],function(){return'<h4>Example Object</h4>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "sandboxPermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/sandbox-permissions.md",[],function(){return"<h2>Sandbox Permissions</h2>\n\n<p>Sandbox permissions describe what operations an application can do in sandbox mode for each loyalty program.</p>\n\n<h4>Properties</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>loyaltyProgram</td>\n            <td>The URL of the loyalty program.</td>\n        </tr>\n        <tr>\n            <td>operations</td>\n            <td>An array of operations that the application is permitted to do in sandbox mode for the LP.</td>\n        </tr>\n        <tr>\n            <td>type</td>\n            <td>The type of resource.</td>\n        </tr>\n    </tbody>\n</table>"}),define("mdown!modules/../../documents/api/update-a-credit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "status": "success",\n  "transactionId": "15786560"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "claimCode": "TZ9E-9YHMHU-PDEE",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "creditType": "base",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786560",\n  "type": "credit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-a-credit.md",[],function(){return'<h3>Update an Credit</h3>\n\n<p>Points or the loyalty program may update the status of live credits to success or failure when pending credits are processed or to correct system errors caused by connection problems. You can test how your application responds to these changes by updating the status of sandbox credits using your <a href="#account-credentials">account credentials</a>.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href=#loyalty-programs>loyalty program</a> (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the credit.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The updated status of the credit (optional). Must be "failure" or "success".</td>\n        </tr>\n        <tr>\n            <td>transactionId</td>\n            <td>The updated transaction ID of the credit (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The credit resource if successful. Returns an <a href="./?doc=reference-manual#errors">error</a> if you do not have permission to change the credit or if the new status is not valid.</p>'}),define("mdown!modules/../../documents/api/update-a-debit-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "status": "success",\n  "transactionId": "15786561"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "amount": 2000,\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/debits/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "memberValidation": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "pic": "ABC",\n  "status": "success",\n  "transactionId": "15786561",\n  "type": "debit",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-a-debit.md",[],function(){return'<h3>Update an Debit</h3>\n\n<p>Points or the loyalty program may update the status of live debits to success or failure when pending debits are processed or to correct system errors caused by connection problems. You can test how your application responds to these changes by updating the status of sandbox debits using your <a href="#account-credentials">account credentials</a>.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the <a href=#loyalty-programs>loyalty program</a> (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the debit.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The updated status of the debit (optional). Must be "failure" or "success".</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>The updated transaction ID of the debit (optional).</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The debit resource if successful. Returns an <a href="./?doc=reference-manual#errors">error</a> if you do not have permission to change the debit or if the new status is not valid.</p>'}),define("mdown!modules/../../documents/api/update-a-mv-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "application": "https://lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 2000,\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "identifyingFactors": {\n    "firstName": "John",\n    "lastName": "Doe",\n    "memberId": "1234"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "order": "https://sandbox.lcp.points.com/v1/orders/&lt;order-id&gt;",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-a-mv.md",[],function(){return'<h3>Update an MV</h3>\n\n<p>Update a member validation to add it to an order.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>lp-id</td>\n            <td>The identifier of the loyalty program (LP).</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the member validation (MV).</td>\n        </tr>\n        <tr>\n            <td>order</td>\n            <td>Link to the order that this member validation belongs to.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The MV object if it was updated successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the MV does not exist.</p>'}),define("mdown!modules/../../documents/api/update-a-report-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PUT https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "description": "Report on all transactions performed by my app",\n  "name": "My App’s Transaction Report",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "description": "Report on all transactions performed by my app",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;"\n    },\n    "instances": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/reports/&lt;id&gt;/instances/"\n    }\n  },\n  "name": "My App’s Transaction Report",\n  "type": "report",\n  "updatedAt": "2014-05-08T17:55:34.511304Z",\n  "url": "https://myapp.com/reports/report-name"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-a-report.md",[],function(){return'<h3>Update a Report</h3>\n\n<p>Update the name, description or URL of an application report. Provide a name and description for your report as well as a URL where the LCP can get the report data when it is requested by a user.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the report.</td>\n        </tr>\n        <tr>\n            <td>description</td>\n            <td>The description of the report (optional).</td>\n        </tr>\n        <tr>\n            <td>name</td>\n            <td>The name of the report.</td>\n        </tr>\n        <tr>\n            <td>url</td>\n            <td>The URL to access the report. Must be HTTPS.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The updated report object if it was updated successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the report does not exist or if the validation of the JSON fields failed.</p>'}),define("mdown!modules/../../documents/api/update-account-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PUT https://lcp.points.com/v1/apps/&lt;app-id&gt;/account-permissions\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "support": [\n    "https://lcp.points.com/v1/accounts/&lt;account-id1&gt;",\n    "https://lcp.points.com/v1/accounts/&lt;account-id2&gt;"\n  ]\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/account-permissions"\n    }\n  },\n  "support": [\n    "https://lcp.points.com/v1/accounts/&lt;account-id1&gt;",\n    "https://lcp.points.com/v1/accounts/&lt;account-id2&gt;"\n  ],\n  "type": "accountPermission",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-account-permissions.md",[],function(){return'<h3>Update Account Permissions</h3>\n\n<p>Update the list of accounts that have permission to access the application and its resources.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>support</td>\n            <td>A list of <a href="#accounts">accounts</a> that have permission to support the application. Accounts with support permissions have read-only access to the application and all of the application’s transactions.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The updated account permissions if it was updated successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the application does not exist or if the validation of the JSON fields failed.</p>'}),define("mdown!modules/../../documents/api/update-an-account-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://lcp.points.com/v1/accounts/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "firstName": "First Name",\n  "lastName": "Last Name",\n  "organizationName": "Company",\n  "phone": "416-555-1234",\n  "timeZone": "America/Toronto"\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "accountCredentials": [\n    {\n      "links": {\n        "self": {\n          "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;/account-credentials/&lt;ac-id&gt;"\n        }\n      },\n      "macAlgorithm": "HMAC-SHA1",\n      "macKey": "&lt;macKey&gt;",\n      "macKeyIdentifier": "&lt;macKeyIdentifier&gt;"\n    }\n  ],\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "email": "youremail@yourcompany.com",\n  "firstName": "First Name",\n  "lastName": "Last Name",\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;"\n    },\n    "friendly": {\n      "href": "https://lcp.points.com/v1/accounts/youremail%40yourcompany.com"\n    }\n  },\n  "organizationName": "Company",\n  "phone": "416-555-1234",\n  "roles": [\n    "appDeveloper"\n  ],\n  "timeZone": "America/Toronto",\n  "type": "account",\n  "updatedAt": "2014-05-08T17:55:34.511304Z"\n}\n</code></pre>';
}),define("mdown!modules/../../documents/api/update-an-account.md",[],function(){return'<h3>Update an Account</h3>\n\n<p>Updates your account details.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the account.</td>\n        </tr>\n        <tr>\n            <td>firstName</td>\n            <td>Your first name (optional).</td>\n        </tr>\n        <tr>\n            <td>lastName</td>\n            <td>Your last name (optional).</td>\n        </tr>\n        <tr>\n            <td>organizationName</td>\n            <td>Your organization (optional).</td>\n        </tr>\n        <tr>\n            <td>phone</td>\n            <td>Your phone number (optional).</td>\n        </tr>\n        <tr>\n            <td>timeZone</td>\n            <td>Your time zone (optional). Use time zones in the <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">tz database</a>.</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The account object if it was updated successfully, otherwise returns an <a href="./?doc=reference-manual#errors">error</a>.</p>'}),define("mdown!modules/../../documents/api/update-an-order-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "status": "complete",\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/&lt;app-id&gt;",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "1234", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/&lt;id&gt;"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "complete",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:50:00.000000Z",\n  "updates": [\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/mvs/&lt;mv-id&gt;",\n      "status": "success",\n      "type": "memberValidation",\n      "updatedAt": "2014-02-26T17:47:30.000000Z"\n    },\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;credit-id&gt;",\n      "status": "success",\n      "type": "credit",\n      "updatedAt": "2014-02-26T17:49:00.000000Z"\n    }\n  ]\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-an-order.md",[],function(){return'<h3>Update an Order</h3>\n\n<p>Update the status of an order. The application must manage the order status. When a primitive is added to an order, the order status changes to "statusPending". These orders require their status to be updated.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the order.</td>\n        </tr>\n        <tr>\n            <td>status</td>\n            <td>\n                <p>The new status of the order. Can be one of:\n                    <ul>\n                        <li>"debitFailed" if the debit status is failure</li>\n                        <li>"debitPending" if the debit status is pending</li>\n                        <li>"debitError" if the debit status is systemError</li>\n                        <li>"creditFailed" if the credit status is failure</li>\n                        <li>"creditPending" if the credit status is pending</li>\n                        <li>"creditError" if the credit status is systemError</li>\n                        <li>"complete" if all primitives succeeded</li>\n                        <li>"reversed" if all primitives are reversed</li>\n                    </ul>\n                </p>\n            </td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The order object if it was updated successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the order does not exist or if the order status cannot be updated.</p>'}),define("mdown!modules/../../documents/api/update-sandbox-permissions-example.md",[],function(){return'<h4>Example Request</h4>\n\n<pre><code>PATCH https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "operations": ["mvs", "debits", "credits"]\n}\n</code></pre>\n\n<h4>Example Response</h4>\n\n<pre><code>200 OK\n{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/apps/&lt;app-id&gt;/sandbox-permissions/&lt;id&gt;"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;",\n  "operations": ["mvs", "debits", "credits"],\n  "type": "sandboxPermission"\n}\n</code></pre>'}),define("mdown!modules/../../documents/api/update-sandbox-permissions.md",[],function(){return'<h3>Update Sandbox Permissions</h3>\n\n<p>Updates permissions for an application to perform operations in sandbox mode on an LP.</p>\n\n<h4>Parameters</h4>\n\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td>app-id</td>\n            <td>The identifier of the application.</td>\n        </tr>\n        <tr>\n            <td>id</td>\n            <td>The identifier of the sandbox permissions object.</td>\n        </tr>\n        <tr>\n            <td>operations</td>\n            <td>An array of operations that the applications is permitted to do in sandbox mode for the LP. Must be one or more of "mvs", "member-details", "mv-delegates", "debits", "credits", "credit-delegates".</td>\n        </tr>\n    </tbody>\n</table>\n\n<h4>Returns</h4>\n\n<p>The sandbox permissions object if it was created successfully. Returns an <a href="./?doc=reference-manual#errors">error</a> if the app or sandbox permissions object doesn’t exist or if an invalid operation is provided.</p>'}),define("mdown!modules/../../documents/getting-started.md",[],function(){return'<h1>LCP Getting Started Guide</h1>\n\n<p>For Points Loyalty Commerce Platform - Version 1.0</p>\n\n<h2>Document Overview</h2>\n\n<p>The purpose of this document is to provide a beginner’s guide to the Points\nLoyalty Commerce Platform (LCP). You will find below an introduction to the LCP,\nthings you need to know before you get started and a step-by-step guide on how\nto use the APIs to check member balances. To accomplish this, this document will\nintroduce you to the <code>/accounts</code>, <code>/apps</code> and <code>/lps</code> resources that are exposed\nin the API. The sample code provided uses\n<a href="http://en.wikipedia.org/wiki/CURL">cURL</a> to communicate with the LCP. For a\nmore detailed description of the LCP and its capabilities see the <a href="./?doc=reference-manual">LCP Reference\nManual</a> and the <a href="./?doc=api-reference">LCP API\nReference</a>.</p>\n\n<h2>Introducing the Loyalty Commerce Platform API</h2>\n\n<p>The LCP\'s capabilities are exposed to developers through a <a href="https://en.wikipedia.org/wiki/Representational_state_transfer#RESTful_web_APIs">RESTful web\nAPI</a>.\nThe API consists of a set of resources that can be operated on using standard\nHTTP methods. The top-level resources in the LCP are accounts, apps, and lps.</p>\n\n<p><strong>Accounts</strong> - Your developer account information and credentials are stored\nunder <code>/accounts</code>. Once you create your account you can access it at\n<code>/accounts/&lt;account-id&gt;</code></p>\n\n<p><strong>Apps</strong> - Your apps are stored under the <code>/apps</code> endpoint. Each app will be\ngiven a unique ID under <code>/apps</code>.</p>\n\n<p><strong>LPs</strong> - Loyalty programs (LPs) are stored under <code>/lps</code>. Each LP will have it’s\nown ID under <code>/lps</code>.</p>\n\n<p>Some actions can be performed on the collection of resources, while others must\nbe performed on individual resources. Resources can be created, read, updated,\nand deleted using standard HTTP methods.</p>\n\n<p><strong>POST</strong> - Used to create a resource by sending resource data to the collection.\nIf successful, returns a <code>201 (Created)</code> status code with a Location header that\nspecifies the location of the newly created resource. All method parameters must\nbe passed as part of request body using JSON.</p>\n\n<p><strong>GET</strong> - Used to retrieve a resource from the LCP. This operation is\n<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2">idempotent</a> and\nhas no side effects from submitting the same request multiple times. If\nsuccessful, returns a <code>200 (OK)</code> status code with the resource content.</p>\n\n<p><strong>PUT</strong> - Used to update an existing resource. This operation is\n<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.1.2">idempotent</a> and\nhas no side effects from submitting the same request multiple times. If\nsuccessful, returns a <code>200 (OK)</code> status code with the resource content. All\nmethod parameters must be passed as part of request body using JSON.</p>\n\n<p><strong>DELETE</strong> - Used to delete a resource. This operation is\n<a href="http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9.7">idempotent</a> and\nhas no side effects from submitting same request multiple times. If successful,\nreturns a <code>204 (No Content)</code> status code with an empty response body.</p>\n\n<p><strong>OPTIONS</strong> - Used to determine which of the above operations are permitted for\na given resource. If the resource exists, returns a <code>200 (OK)</code> status code with the\nlist of permitted HTTP methods in the Allow header.</p>\n\n<p>All request and response payloads are <a href="http://en.wikipedia.org/wiki/UTF8">UTF8</a>\nencoded <a href="http://en.wikipedia.org/wiki/JSON">JSON</a>.\n<a href="http://en.wikipedia.org/wiki/Https">HTTPS</a> is used for all requests to ensure\nsecure communication. When consuming APIs in the LCP, developers must use <a href="http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02">OAuth\n2.0 Message Authentication Code (MAC) Tokens (draft\n02)</a> to authenticate\nthemselves.\n<a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/util">Utilities</a>\nare available to simplify the request signing process.  See the\n<a href="#security">Security</a> section of this document for more details.</p>\n\n<h2>Things You Should Know About Using the LCP</h2>\n\n<p>The Loyalty Commerce Platform (LCP) allows you to write apps that can access\nmany loyalty programs. The LCP handles the complexity of working with each\nloyalty program, creating one simple interface for working with any number of\nprograms.</p>\n\n<p><img src="static/images/getting-started.png" alt="Getting Started" title="" /></p>\n\n<h3>Sandbox vs. Live Mode</h3>\n\n<p>The LCP supports two different modes of operation: sandbox mode and live mode.\nDuring development, your application will operate in sandbox mode so that it\ndoesn’t make changes to any loyalty program member’s account. In sandbox mode,\nthe LCP never communicates with the loyalty program. All operations are\nsimulated. When you\'re ready to deploy your application, Points will promote\nyour application to live mode.</p>\n\n<p>Sandbox mode is accessed through <code>https://sandbox.lcp.points.com</code> while live mode\nthrough <code>https://lcp.points.com</code>. Each app has two sets of credentials to access\nthe LCP: one set for sandbox mode and another set for live mode. When accessing\nthe LCP in sandbox mode, the sandbox credentials must be used. When your app is\npromoted to live mode, Points will provide you with live mode credentials.</p>\n\n<h3>Security</h3>\n\n<p>This section describes things you will need to know about LCP security to get\nyou started with building applications on the LCP.</p>\n\n<p><strong>All requests to and responses from the LCP are made using HTTPS.</strong> Using HTTPS\nhas a couple of benefits:</p>\n\n<ol>\n<li>HTTPS protects network traffic from eavesdropping by encrypting all traffic\nto and from the LCP so that only the sender and receiver are able to read\nrequests and responses.</li>\n<li>HTTPS permits clients to verify the identity of the server to ensure the\ncorrect server is receiving its requests.</li>\n</ol>\n\n<p><strong>All requests include an HTTP Authorization header</strong> to enable the LCP to\nvalidate the sender’s identity. <a href="http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02">OAuth 2.0 Message Authentication Code (MAC)\nTokens</a>\nare used to sign all requests to the LCP after you’ve created your account.\nOAuth 2.0 MAC is an evolving variant of OAuth 2.0.</p>\n\n<p>MAC tokens provide enhanced security over OAuth 2.0 Bearer tokens because unlike\nBearer tokens, MAC tokens are never sent between the client and the server. A\nbearer token is a shared secret key that is passed from the client to the server\nfor authentication. However, because bearer tokens involves transmitting the\nshared secret key between the client and the server, it can be vulnerable to\nattack if a third party gains access to any HTTP request. MAC tokens avoid this\nsecurity vulnerability by never transmitting the shared secret key. Instead the\nclient sends a signature that is generated using the shared secret key and\ndetails about the request. The server also generates the signature using the\nsame key and request details. If the signatures match then the server knows that\nthe signatures were generated using the same key and that the message was not\nmodified during transmission.</p>\n\n<p>The downside of MAC tokens is that the standard is still evolving and has\nlimited support at this time. This version of the LCP complies with <a href="http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02">draft 02 of\nthe OAuth 2.0 MAC\nstandard</a>. When\nusing this scheme it is highly recommended that you use one of the <a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/util">LCP Client\nUtilities</a> to issue\nplatform requests because these utilities will compute MACs for you.</p>\n\n<p>The credentials required for MAC authentication include a MAC key identifier, a\nMAC key and a MAC algorithm. Below is an example of a JSON document representing\nthe credentials for use with MAC authentication.</p>\n\n<pre><code>{\n  "macKeyIdentifier": "97ee420faaa343d4a04b7378b319b48b",\n  "macKey": "NyWslT0Oe7ZNJynyUIwg-SRj3A44DD_lrH6_-dwZ6E4",\n  "macAlgorithm": "HMAC-SHA1"\n}\n</code></pre>\n\n<p>The MAC key identifier uniquely identifies the MAC key. The MAC key identifier\nis sent with each request to tell the server which MAC key was used to sign the\nrequest. The MAC key is the shared secret key. It should never be shared with\nanyone or transmitted in any request. Keep this key secure as you would any\nprivate key. Finally, the MAC algorithm describes the algorithm used to create\nthe signature.</p>\n\n<p>The LCP defines 2 different types of credentials:</p>\n\n<ol>\n<li><strong>Account credentials</strong>\n<ul><li>Account credentials authenticate you to perform actions on your developer account.</li>\n<li>A set of account credentials is created automatically when you create your developer account.</li>\n<li>Account credentials are the same for both sandbox and live mode.</li>\n<li>They are available at <code>/accounts/&lt;account-id&gt;</code>.</li>\n<li>They are used to sign requests to <code>/accounts</code> and <code>/apps</code>.</li></ul></li>\n<li><strong>Application credentials</strong>\n<ul><li>Application credentials authenticate your app to perform actions on the LCP.</li>\n<li>Each app has two sets of application credentials: one for sandbox mode and one for live mode.</li>\n<li>A set of sandbox credentials is created automatically when you create an app.</li>\n<li>Live credentials are created by Points when your app is promoted to live mode.</li>\n<li>Application credentials are available at <code>/apps/&lt;app-id&gt;</code>.</li>\n<li>They are used to sign requests to <code>/lps</code>.</li></ul></li>\n</ol>\n\n<p>If your credentials are compromised, you can create additional credentials and\ndelete your existing credentials. See the <a href="./?doc=api-reference">LCP API\nReference</a>\nfor details.</p>\n\n<h3>HATEOAS</h3>\n\n<p>HATEOAS or <a href="http://en.wikipedia.org/wiki/HATEOAS">Hypermedia as the Engine of Application\nState</a> is a characteristic of REST APIs.\nIn practical terms, it means each response from the LCP contains URLs to other\nresources that are relevant to the current resource. This helps makes the API\ndiscoverable and means you don’t need to know how to construct URLs to access\nthe LCP platform after the first request. In addition, if resource locations are\nmoved in a later version of the API, your application can automatically follow\nthe new links without modification. All the information necessary to navigate\nthe API is in the resource itself.</p>\n\n<p>JSON response documents that are returned by the LCP contain a "links" property.\nThis property contains URLs that help you consume further resources within the\nLCP REST API. For example:</p>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/1234"\n    },\n    "friendly": {\n      "href": "https://lcp.points.com/v1/accounts/email@company.com"\n    }\n  }\n}\n</code></pre>\n\n<p>All links sections provided by the LCP contain a "self" link that represents a\nURL that can be used to obtain the document again if needed.</p>\n\n<p>Some calls also return a URL called "friendly" which contains a more\nuser-friendly and readable URL to consume a particular resource.</p>\n\n<h2>Getting Started</h2>\n\n<p>Now that you\'ve read through some of the background information and familiarized\nyourself with some of the key principles, you\'re ready to dive in. In this section\nyou\'ll find a set of steps needed to start working with the Loyalty Commerce Platform\n(LCP). By following these steps, you\'ll have everything you need to to build a\nuniversal balance checker to retrieve member balances across multiple loyalty\nprograms. The steps needed are:</p>\n\n<ol>\n<li>Create an account</li>\n<li>Create an app</li>\n<li>Get your app\'s sandbox credentials</li>\n<li>Perform a member validation (MV)</li>\n</ol>\n\n<h3>Create an Account</h3>\n\n<p>To create a universal balance checker, your first step is to create an LCP developer\naccount. A developer account allows you to create one or more applications that\ninterface with the LCP.</p>\n\n<p>To create your developer account, go to the <a href="https://admin.lcp.points.com/">LCP\nAdmin</a> and select "Sign Up". Follow the instructions\nto create your account.</p>\n\n<h3>Create an App</h3>\n\n<p>Once logged into your account, click on "Apps" in the left-hand navigation to see\nyour list of apps.</p>\n\n<p><img src="static/images/empty-app-list.png" alt="Empty App List" title="" /></p>\n\n<p>There are no apps so far, so create one by clicking the "Create a new App" button.\nFill in the name and description of your app and click "Create App".</p>\n\n<p><img src="static/images/create-an-app.png" alt="Create An App" title="" /></p>\n\n<p>You\'ve now created your first app.</p>\n\n<p><img src="static/images/example-app.png" alt="Example App" title="" /></p>\n\n<h3>Get your App\'s Sandbox Credentials</h3>\n\n<p>To access the LCP API, your app needs credentials to authenticate with the LCP. There\nare two types of application credentials: sandbox credentials and live credentials.\nWhen developing your application, you will use sandbox credentials to make requests\nin sandbox mode. Sandbox mode simulates all transactions with the loyalty programs.\nOnce you\'re ready to promote your application to live mode, Points will issue you\nlive credentials. For now, your app only has sandbox credentials.</p>\n\n<p>Click "Show Key" to view your sandbox credentials. You need to re-enter your password\nto confirm your identity.</p>\n\n<p><img src="static/images/sandbox-credentials.png" alt="Sandbox Credentials" title="" /></p>\n\n<p>The MAC key identifier tells the LCP which MAC key you are using. The MAC key is a\nshared secret key between you and the platform that you will use to sign requests.\nKeep it safe as you would a private cryptographic key. It should never be shared with\nanyone or sent directly to the LCP.</p>\n\n<h3>Perform a Member Validation (MV)</h3>\n\n<p>Now you\'re ready to make API requests. A universal balance checker needs to retrieve\nthe balance in a loyalty program member’s account. This is done by performing a\nmember validation or MV. An MV authenticates a member of a loyalty program and\nretrieves their balance.</p>\n\n<p>Click on "Loyalty Programs" in the left-hand navigation to see the list of loyalty\nprograms that are supported. You can also get the list of loyalty programs through\nthe <a href="./?doc=api-reference#list-all-lps">API</a>. Let\'s start with the Flying Blue program\nfrom Air France KLM. Click on "FlyingBlue". The LP URL provides the base URL for the\nloyalty program. Operations against the loyalty program are under this URL. The LP URL is\nfor live mode. Instead, let\'s use the LP URL for sandbox mode by changing the server from\n"lcp.points.com" to "sandbox.lcp.points.com":</p>\n\n<pre><code>https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6\n</code></pre>\n\n<p>To perform a member validation for Flying Blue in sandbox mode, POST to:</p>\n\n<pre><code>https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/\n</code></pre>\n\n<p>and provide the member’s credentials in the body of the request as a JSON object. The\nmember credentials required for an MV vary for each loyalty program. For example, some\nloyalty programs may require a member ID and password, while others may require a first\nname, last name, and member ID. To determine which fields are required for a particular\nloyalty program, you can get its <a href="./?doc=api-reference#mv-request-schema">MV request schema</a>,\nwhich defines the JSON schema for the MV request. Flying Blue requires a member ID and\npassword. Let’s create an MV using curl:</p>\n\n<pre><code>curl -v -X POST -H "Content-Type: application/json" \\\n-d \'{"identifyingFactors": {"memberId": "1234"}, "authenticatingFactors": {"password": "ABCD"}}\' \\\n"https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/"\n</code></pre>\n\n<p>The server returns a 401 status code indicating you are not authorized to POST to the\nMV collection:</p>\n\n<pre><code>HTTP/1.1 401 UNAUTHORIZED\n{\n  "errors": [\n    {\n      "code": "UNAUTHORIZED",\n      "description": "The server could not verify that you are authorized to access the URL requested.",\n      "field": null\n    }\n  ]\n}\n</code></pre>\n\n<p>This error is because we sent an unauthenticated request to the LCP. To authenticate,\nyou need to include an authorization header in your request. The LCP uses <a href="http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02">OAuth 2.0\nMAC</a> for authentication.\nThe <code>lcp_curl.py</code> Python script provided in <a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/util">LCP\nUtilities</a>\nmakes this easy. For more details building the authorization header for OAuth 2.0\nMAC, see <a href="#appendix-a-signing-requests">Appendix A: Signing Requests</a>. </p>\n\n<p><code>lcp_curl.py</code> is a wrapper around curl to add the authorization header. It requires a\n-u parameter and your MAC key identifier and MAC key obtained in the previous step.\nIt passes all other arguments on to curl. It also adds the "Content-Type: application/json"\nheader so we don’t need to provide that. Let’s try to create an MV again using <code>lcp_curl.py</code>:</p>\n\n<pre><code>lcp_curl.py -v -X POST \\\n-u ee83b9af340741e3bec0ad96cb976142:RrvufcCh3Kb3bsqG-wfh8JrQXF8tZG4q3H-_gTACfjM \\\n-d \'{"identifyingFactors": {"memberId": "1234"}, "authenticatingFactors": {"password": "ABCD"}}\' \\\n"https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/"\n</code></pre>\n\n<p>Behind the scenes, <code>lcp_curl.py</code> generates the MAC signature, builds the authorization header, and\nincludes it in a call to curl like so:</p>\n\n<pre><code>curl -v -X POST \\\n-H \'Authorization: MAC id="ee83b9af340741e3bec0ad96cb976142", ts="1438107842",\nnonce="11SChlLd7+w=", ext="c2e5a99d639f902217f2322d4c4d1374ceda3a71",\nmac="2U8yq4PQ3IXw86zAaxEF3fw4YkI="\' \\\n-d \'{"identifyingFactors": {"memberId": "1234"}, "authenticatingFactors": {"password": "ABCD"}}\' \\\n"https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/"\n</code></pre>\n\n<p>Now the request is authenticated but we get a different error indicating there is no\nmember with member ID 1234 and password ABCD in the sandbox:</p>\n\n<pre><code>HTTP/1.1 422 UNPROCESSABLE ENTITY\n{\n  "errors": [\n    {\n      "code": "UNKNOWN_MEMBER",\n      "description": "No member could be found with the given credentials."\n    }\n  ]\n}\n</code></pre>\n\n<p>If you still received 401 unauthorized, check that your computer\'s time is accurate\nor is synced with an internet time server. <code>lcp_curl.py</code> adds a timestamp to each\nrequest and the LCP verifies that the timestamp is within 30 seconds of the server\'s\ntime to prevent replay attacks.</p>\n\n<p>To simulate a successful MV in sandbox mode, we need to use one of the pre-configured\nsandbox MVs. You can get the list of <a href="./?doc=api-reference#sandbox-mvs">sandbox MVs</a>\nfor the loyalty program using the API. For Flying Blue, one of the sandbox MVs has a\nmember ID to "2202" and a password of "PASSWORD". Let’s do the MV again using these values:</p>\n\n<pre><code>lcp_curl.py -v -X POST \\\n-u ee83b9af340741e3bec0ad96cb976142:RrvufcCh3Kb3bsqG-wfh8JrQXF8tZG4q3H-_gTACfjM \\\n-d \'{"identifyingFactors": {"memberId": "2202"}, "authenticatingFactors": {"password": "PASSWORD"}}\' \\\n"https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/"\n</code></pre>\n\n<p>This creates a successful MV with a balance of 100,000 miles as specified in the sandbox MV:</p>\n\n<pre><code>HTTP/1.1 201 CREATED\n{\n  "application": "https://lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 100000,\n  "createdAt": "2014-04-19T07:56:08.482556Z",\n  "identifyingFactors": {\n    "memberId": "2202"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "loyaltyProgram": "https://lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-04-19T07:56:08.482556Z"\n}\n</code></pre>\n\n<p>You can retrieve a previous MV by performing a GET on the self link. This\nretrieves the MV and balance in the state it was when it was created. To get an\nupdated member’s balance, create a new MV.</p>\n\n<p>Congratulations, you’ve successfully performed a member validation. This is all\nyou need to complete your universal balance checker.</p>\n\n<p>To learn more about the capabilities of the LCP, including moving points in and\nout of member accounts, refer to the <a href="./?doc=reference-manual">LCP Reference\nManual</a>\nand the <a href="./?doc=api-reference">LCP API\nReference</a>.</p>\n\n<h2>Appendix A: Signing Requests</h2>\n\n<p>This appendix contains the a step-by-step guide for signing requests with OAuth\n2.0 MAC tokens as well as sample code. Follow these steps if you want to write\nyour own module to sign requests.</p>\n\n<ol>\n<li>Generate a timestamp. The timestamp is the number of seconds since January 1,\n1970 00:00:00 UTC. This is also known as POSIX time or Unix time. Requests\nare only valid within 30 seconds of the timestamp.</li>\n<li>Generate a nonce. A nonce is an arbitrary string that must be different for\neach request in a 30 second window with the same MAC ID.</li>\n<li>Generate the extension string. The extension string is blank for GET and\nDELETE requests. For PUT and POST requests, concatenate the value of the\nContent-Type header (e.g. "application/json") with the request body and hash\nit with SHA1.</li>\n<li>Build the normalized request string as follows:</li>\n</ol>\n\n<table>\n  <thead>\n    <tr>\n      <th>Format</th>\n      <th>GET Example</th>\n      <th>POST Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Timestamp\\n<br>Nonce\\n<br>HTTP Method (all caps)\\n<br>Path\\n<br>Hostname\\n<br>Port\\n<br>Extension\\n</td>\n      <td>1377721336\\n<br>4FvtoumTybo=\\n<br>GET\\n<br>/v1/apps/\\n<br>lcp.points.com\\n<br>443\\n<br>\\n</td>\n      <td>1377724146\\n<br>u8BNUfE5Gu8=\\n<br>POST\\n<br>/v1/apps/\\n<br>lcp.points.com\\n<br>443\\n<br>a9d46382c97bd4b0475b5b152dddaf2d61c0a30d\\n</td>\n    </tr>\n  </tbody>\n</table>\n\n<ol start="5">\n  <li>Decode the MAC key from Base64 if you haven’t already. The MAC key is encoded in Base64 using a URL-safe alphabet. You may need to add padding to the MAC key to decode it.</li>\n  <li>Generate the signature by using the HMAC-SHA1 algorithm and the MAC key over the normalized request string.</li>\n  <li>Encode the signature in Base64. You do not need to use the URL-safe alphabet.</li>\n  <li>Generate the authorization header for the request.</li>\n</ol>\n\n<h4>Example request:</h4>\n\n<pre><code>GET /v1/accounts/342d7d81-c6d0-4968-8518-3525ed71bdb5 HTTP/1.1\nHost: lcp.points.com\nAuthorization: MAC id="97ee420faaa343d4a04b7378b319b48b",\n                   ts="1379541939",\n                   nonce="OK3HY80lkQ0=",\n                   ext="",\n                   mac="EmYShgBbKjp7XB3gbZq9e0zZy+8="\n</code></pre>\n\n<h4>Example C# code:</h4>\n\n<pre><code>using System.Security.Cryptography;\n\npublic string GetAuthorizationHeaderValue(\n    string httpMethod,\n    Uri url,\n    string macKeyIdentifier,\n    string macKey,\n    string contentType,\n    string body)\n{\n    // Step 1: Generate timestamp\n    TimeSpan t = (DateTime.UtcNow - new DateTime(1970, 1, 1));\n    string ts = ((int)t.TotalSeconds).ToString();\n\n    // Step 2: Generate nonce\n    string nonce = new Random().Next().ToString();\n\n    // Step 3: Generate ext\n    string ext = "";\n    if (contentType != null &amp;&amp; body != null &amp;&amp;\n        contentType.Length &gt; 0 &amp;&amp; body.Length &gt; 0)\n    {\n        string contentTypePlusBody = contentType + body;\n        SHA1 sha = new SHA1CryptoServiceProvider();\n        ext = BitConverter.ToString(sha.ComputeHash(\n            Encoding.ASCII.GetBytes(contentTypePlusBody)));\n        ext = ext.Replace("-", "").ToLower();\n    }\n\n    // Step 4: Build normalized request string\n    string normalizedRequestString =\n        string.Format("{0}\\n{1}\\n{2}\\n{3}\\n{4}\\n{5}\\n{6}\\n",\n            ts,\n            nonce,\n            httpMethod,\n            url.AbsolutePath,\n            url.Host,\n            url.Port,\n            ext);\n\n    // Step 5: Base64 decode the MAC key from URL-safe alphabet\n    // and add padding if needed\n    macKey = macKey.Replace(\'-\', \'+\').Replace(\'_\', \'/\');\n    macKey += new string(\'=\', (4 - macKey.Length % 4));\n    HashAlgorithm hashGenerator = new HMACSHA1(\n        System.Convert.FromBase64String(macKey));\n\n    // Step 6: Generate the signature\n    byte[] signature = hashGenerator.ComputeHash(\n        Encoding.ASCII.GetBytes(normalizedRequestString));\n\n    // Step 7: Base64 encode the result\n    string mac = System.Convert.ToBase64String(signature);\n\n    // Step 8: Build Authorization header\n    StringBuilder authorizationHeader = new StringBuilder();\n    authorizationHeader.AppendFormat(@"MAC id=""{0}"", ts=""{1}"", nonce=""{2}"", ext=""{3}"", mac=""{4}""", macKeyIdentifier, ts, nonce, ext, mac);\n\n    return authorizationHeader.ToString();\n}\n</code></pre>\n\n<h4>Example Python code:</h4>\n\n<pre><code>import urlparse\nimport httplib\nimport base64\nimport hmac\nimport hashlib\nimport time\nimport os\n\ndef generate_authorization_header_value(\n        http_method,\n        url,\n        mac_key_identifier,\n        mac_key,\n        content_type,\n        body):\n\n    url_parts = urlparse.urlparse(url)\n    port = url_parts.port\n    if not port:\n        if url_parts.scheme == \'https\':\n            port = httplib.HTTPS_PORT\n        else:\n            port = httplib.HTTP_PORT\n\n    # Step 1: Generate timestamp \n    ts = str(int(time.time()))\n\n    # Step 2: Generate nonce\n    nonce = base64.b64encode(os.urandom(8))\n\n    # Step 3: Generate ext\n    if content_type is not None and body is not None and len(content_type) &gt; 0 and len(body) &gt; 0:\n        content_type_plus_body = content_type + body\n        content_type_plus_body_hash = hashlib.sha1(content_type_plus_body)\n        ext = content_type_plus_body_hash.hexdigest()\n    else:\n        ext = ""\n\n    # Step 4: Build normalized request string\n    normalized_request_string = (\n        ts + \'\\n\' +\n        nonce + \'\\n\' +\n        http_method + \'\\n\' +\n        url_parts.path + \'\\n\' +\n        url_parts.hostname + \'\\n\' +\n        str(port) + \'\\n\' +\n        ext + \'\\n\'\n    )\n\n    # Step 5: Base64 decode the MAC key from URL-safe alphabet\n    # and add padding if needed\n    mac_key += \'=\' * (4 - len(mac_key) % 4)\n    mac_key = base64.urlsafe_b64decode(mac_key)\n\n    # Step 6: Generate the signature\n    signature = hmac.new(mac_key, normalized_request_string, hashlib.sha1)\n\n    # Step 7: Base64 encode the result\n    mac = base64.b64encode(signature.digest())\n\n    # Step 8: Build Authorization header\n    return \'MAC id="{0}", ts="{1}", nonce="{2}", ext="{3}", mac="{4}"\'.format(mac_key_identifier, ts, nonce, ext, mac)\n</code></pre>';
}),define("mdown!modules/../../documents/lp-reference.md",[],function(){return'<h1>Loyalty Partner API Reference Manual</h1>\n\n<p>For Points Loyalty Commerce Platform - Version 1.0</p>\n\n<h2>Document Overview</h2>\n\n<p>This document describes the RESTful API services a Loyalty Partner can use to communicate with the Points Loyalty Commerce Platform (LCP).</p>\n\n<h2>Introducing the Loyalty Partner API</h2>\n\n<p>As a Loyalty Partner (LP), you can integrate with the LCP with four simple calls.</p>\n\n<ol>\n<li>Member Validation</li>\n<li>Credit/Debit Posting</li>\n<li>Transfer Points to/from a member\'s account</li>\n<li>Transaction Retry (posting or transfer)</li>\n</ol>\n\n<p>When an application executes a member validation, credit, or debit operation to you (the Loyalty Partner) via the LCP, the LCP will find the pre-configured URL for your loyalty program\'s API and that specific operation, and send an HTTP request to that URL.</p>\n\n<p>A reference implementation for the LP API\'s member validation and credit/debit postings can be found in the <a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/samples/java/lpapi-reference-implementation">Loyalty Commerce Platform Github repository</a>. Our example web server will be "http://application.herokuapp.com" below.</p>\n\n<p><img src="static/images/lp-overview.png" alt="LP API" title="" /></p>\n\n<h2>Validate a Member</h2>\n\n<p>The basic API call for all LCP partners is the member validation (MV). Applications on the LCP will submit an MV request to determine if a member exists and check the balance of a loyalty program member\'s account.</p>\n\n<p>The MV is the only configurable call. As a Loyalty Partner, you define what data fields you receive and share with applications. An MV <strong>request</strong> body will contain a member\'s details (e.g. account ID, name) and an MV <strong>response</strong> confirms the validity of a member and may include additional member data. Data fields in both the MV request and response are specified in their respective schemas. During the onboarding process, Points configures these schemas on your behalf.</p>\n\n<p>The following parameters are recommended for MV requests:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Parameter</th>\n      <th>Description</th>\n      <th>Required</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>firstName</td>\n      <td>First name of the loyalty program member</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>lastName</td>\n      <td>Last name of the loyalty program member</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>memberId</td>\n      <td>Member ID of the loyalty program member</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>password</td>\n      <td>Password for the member’s account</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>zip</td>\n      <td>Zip or postal code for the member’s account</td>\n      <td>Y</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Sample MV request from applications via the LCP:</p>\n\n<pre><code>POST http://application.herokuapp.com/MemberValidation\n{\n  "firstName": "John",\n  "lastName": "Doe",\n  "memberId": "1234"\n}\n</code></pre>\n\n<p>A successful MV response from you will include member details similar to those below if the member exists and is valid for use. You can return additional data to applications on the LCP to enable them to offer personalized loyalty experiences to consumers (e.g. targeted offers).</p>\n\n<pre><code>200 OK\n{\n "status": "success",\n "memberId": "1234",\n "accountCreationDate": "2015-12-31",\n "countryCode": "CA",\n "balance": 200000,\n "membershipLevel": "Gold",\n "accountStatus": "Active",\n "email": "test@example.com",\n "eligibility": "TransferToAny"\n}\n</code></pre>\n\n<p>An MV response for an invalid member must return a <strong>status</strong> and <strong>statusMessage</strong> with a helpful descriptor:</p>\n\n<pre><code>200 OK\n{\n   "status": "failure",\n   "statusMessage": "UNKNOWN_MEMBER"\n}\n</code></pre>\n\n<h2>Credit or Debit an Account</h2>\n\n<p>As your loyalty members earn or redeem points, this service allows applications on the LCP to post a debit and/or credit to a member’s account. The following parameters are included in posting requests:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Required</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>callback</td>\n      <td>The callback is a URI passed as a string that uniquely identifies a transaction in the LCP. This is helpful for Points\' and your support teams if troubleshooting is required and it is strongly recommended that you store this string.</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>order</td>\n      <td>Details of the order that this debit/credit is executed as part of</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>bonus</td>\n      <td>A boolean value indicating if this is a bonus posting</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>amount</td>\n      <td>Number of points to be added or removed from the member\'s account. This number is negative for debits and positive for credits.</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>pic</td>\n      <td>Product identification code</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>firstName</td>\n      <td>First name of the loyalty program member</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>lastName</td>\n      <td>Last name of the loyalty program member</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>memberId</td>\n      <td>Member ID of the loyalty program member. This is identical to the member ID in the MV.</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>password</td>\n      <td>Password for the member’s account</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>zip</td>\n      <td>Zip or postal code for the member’s account</td>\n      <td>N</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Sample posting request from applications via the LCP:</p>\n\n<pre><code>POST http://application.herokuapp.com/Posting\n{\n   "callback": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;",\n   "amount": 100,\n   "bonus": true|false,\n   "order" : {\n      "orderType": "EARN",\n      "createdAt": "2014-11-25T15:24:00.000000Z",      \n      "confirmationNumber": "12345",\n      "data": {\n           "recipient": {\n                "email": "john@gmail.com", \n                "firstName": "John", \n                "lastName": "Doe", \n                "memberId": "12345678901"\n            }, \n            "user": {\n                "balance": 3800, \n                "email": "jill@gmail.com", \n                "firstName": "Jill", \n                "lastName": "Doe", \n                "memberId": "12345678902",\n                "membershipLevel": ""\n            }\n      }\n   },\n   "pic": "EARNMALL",\n   "memberId": "1234"\n}\n</code></pre>\n\n<p>A posting response returns the <strong>transactionId</strong> and the <strong>status</strong>. In case of a <em>failure</em>, the response must include a <strong>statusMessage</strong>.</p>\n\n<pre><code>200 OK\n{  \n   "status": "success|failure",\n   "transactionId": "12345678"\n}\n</code></pre>\n\n<h2>Transfer Points Between Accounts</h2>\n\n<p>As part of your loyalty program features, you may wish to provide a service to allow applications on the LCP to perform one-shot points transfers between loyalty member accounts. This API call withdraws/debits points from one account and deposits/credits them to another in a single transaction.</p>\n\n<p>The following parameters are included in transfer requests:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Required</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>callback</td>\n      <td>The callback is a URI passed as a string that uniquely identifies a transaction in the LCP. This is helpful for Points\' and your support teams if troubleshooting is required and it is strongly recommended that you store this string.</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>order</td>\n      <td>Details of the order that this debit/credit is executed as part of.</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>amount</td>\n      <td>Number of points to be removed from the member\'s account and added to the recipient\'s. This number is negative (for debits).</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>pic</td>\n      <td>Product identification code</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>member/firstName</td>\n      <td>First name of the loyalty program member transacting</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>member/lastName</td>\n      <td>Last name of the loyalty program member transacting</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>member/memberId</td>\n      <td>Member ID of the loyalty program member transacting. This is identical to the member ID in the MV.</td>\n      <td>Y</td>\n    </tr>\n    <tr>\n      <td>recipient/firstName</td>\n      <td>First name of the loyalty program member receiving the points</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>recipient/lastName</td>\n      <td>Last name of the loyalty program member receiving the points</td>\n      <td>N</td>\n    </tr>\n    <tr>\n      <td>recipient/memberId</td>\n      <td>Member ID of the loyalty program member receiving the points</td>\n      <td>Y</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Sample point transfer request from applications via the LCP:</p>\n\n<pre><code>POST http://application.herokuapp.com/Transfer\n{\n   "callback": "https://lcp.points.com/v1/lps/&lt;lp-id&gt;/credits/&lt;id&gt;",\n   "amount": 100,\n   "order" : {\n      "orderType": "EARN",\n      "createdAt": "2015-11-25T15:24:00.000000Z",\n      "confirmationNumber": "12345"\n   },\n   "pic": "EARNMALL",\n   "member": {\n      "memberId": "1234"\n   },\n   "recipient": {\n      "memberId": "1234"\n   }\n}\n</code></pre>\n\n<p>A point transfer response returns the <strong>transactionId</strong> and the <strong>status</strong>. In case of a <em>failure</em>, the response must include a <strong>statusMessage</strong>.</p>\n\n<pre><code>200 OK\n{  \n   "status": "success|failure",\n   "transactionId": "12345678"\n}\n</code></pre>\n\n<h2>Retry a Transaction</h2>\n\n<p>Occasionally, your system may undergo maintenance or experience downtime. During this time, you can return a <em>systemError</em> status instead of <em>failure</em> to the LCP for any transactions (credit/debit posting, transfer) received. For these transactions, your API should accept a call with the <strong>transactionId</strong>. Our support team can then retry the transaction at a later time by sending the same <strong>transactionId</strong> used on the original request.</p>\n\n<p>The following parameter is included in retry requests:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Name</th>\n      <th>Description</th>\n      <th>Required</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>transactionId</td>\n      <td>ID of the transaction being reattempted. This should be used to ensure that the initial transaction was indeed not successful.</td>\n      <td>Y</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Sample retry request from applications via the LCP:</p>\n\n<pre><code>POST http://application.herokuapp.com/retryTransaction\n{\n   "transactionId": "12345678"\n}\n</code></pre>\n\n<p>A transaction retry response returns the <strong>transactionId</strong> and the <strong>status</strong>. In case of a <em>failure</em>, the response must include a <strong>statusMessage</strong>.</p>\n\n<pre><code>200 OK\n{  \n   "status": "success|failure",\n   "transactionId": "12345678"\n}\n</code></pre>\n\n<h2>Call Authorization</h2>\n\n<p>We recommend using with Basic Auth (an encrypted username/password pair) to authorize calls from the LCP.</p>'}),define("mdown!modules/../../documents/reference-manual.md",[],function(){return'<h1>LCP Reference Manual</h1>\n\n<p>For Points Loyalty Commerce Platform - Version 1.0</p>\n\n<h2>Document Overview</h2>\n\n<p>This document contains an in-depth description of the Points Loyalty Commerce\nPlatform (LCP). Below, you will find descriptions of the platform,\nauthentication, and error codes. This document assumes that you have read the <a href="./">LCP Getting\nStarted Guide for Developers</a>. For a detailed description of the API, see the <a href="./?doc=api-reference">LCP\nAPI Reference</a>.</p>\n\n<h2>Sandbox vs Live</h2>\n\n<p>The LCP operates in two modes: sandbox mode and live mode. Sandbox mode is\naccessed at <code>https://sandbox.lcp.points.com</code> while live mode is accessed at\n<code>https://lcp.points.com</code>. Each has a separate set of credentials for\nauthentication. When you create an application, you will get a set of sandbox\ncredentials for use in the sandbox environment. Live mode credentials are issued\nby Points when you’re ready to deploy your application.</p>\n\n<p>Use sandbox mode during development and to test your application. In the\nSandbox, you can test your application against one or more loyalty programs\nwithout affecting live member accounts of the loyalty programs. Sandbox mode\nnever affects member accounts; all operations are simulated. The API reference\ndescribes how to simulate different success and failure conditions in sandbox\nmode that your app will experience in live mode.</p>\n\n<p>To go live, you’ll need to request live credentials from Points. Once your\nreceive them, you’ll need to update your application to use the live credentials\nand the live endpoint located at <code>https://lcp.points.com</code>. Only Live credentials\nhave permission to access this endpoint. Once in the live environment, we\nrecommend you run additional tests using live test accounts for each of the\nloyalty programs your app interacts.</p>\n\n<h2>Versioning</h2>\n\n<p>The LCP uses version numbering in the URI. To access the version of the API\ndescribed in this document use <code>https://sandbox.lcp.points.com/v1/</code> or\n<code>https://lcp.points.com/v1/</code>. New versions will be created for backwards\nincompatible changes to the API. We will notify you of new versions of the API\nand give you time to transition to the new version before discontinuing support\nfor the old version.</p>\n\n<h2>Multiple Data Centers</h2>\n\n<p>The LCP is a high availability service operating in multiple data centers\nglobally. The platform is designed to maximize availability and scalability but\nunderstanding how the LCP works will ensure your Application knows what to\nexpect.</p>\n\n<p>Requests to the LCP are routed to the closest data center. Unless that data\ncenter fails or you change geographies (significantly) your requests will\ncontinue to be routed to the same data center. Requests that change data in one\ndata center are replicated to the other data centers. Replication happens\nquickly and in the background so as not to delay processing of your requests.\nSince your requests typically hit the same data center, replication is generally\ninvisible to your application. This characteristic of the LCP is called eventual\nconsistency. For more background information on this topic please reference\n<a href="http://www.allthingsdistributed.com/2008/12/eventually_consistent.html">Eventually Consistent -\nRevisited</a>.</p>\n\n<p>In the unlikely event of a data center failing, the LCP will automatically\nfailover to a secondary data center. This may result in recently created\nresources not being immediately available in the data center to which you fail\nover until replication has completed. To get started don\'t worry about this\nfailure scenario. However, keep in mind that you in rare instances, you may need\nto wait and resend your request to access recently created or modified data.</p>\n\n<h2>Authorization</h2>\n\n<p>The LCP uses OAuth 2.0 Message Authentication Code (MAC) Tokens to authenticate\nrequests to the platform. This version of the LCP API matches <a href="http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02">draft 02 of the\nOAuth 2.0 MAC Token\nspecification</a>. We\nhave provided a set of <a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/util">LCP Client\nUtilities</a>\nto help you get started with OAuth 2.0 MAC authentication.</p>\n\n<h3>Types of Credentials</h3>\n\n<p>There are three types of MAC credentials used in the LCP:</p>\n\n<ol>\n<li><a href="./?doc=api-reference#account-credentials">Account credentials</a> are\nused to authenticate you when accessing <code>/accounts</code> and\n<code>/apps</code> resources. Account credentials are created automatically when you\ncreate an account.</li>\n<li><a href="./?doc=api-reference#sandbox-credentials">Sandbox credentials</a> are\nused by your app to authenticate its requests to the <code>/lps</code> resource in the\nsandbox environment. Sandbox credentials are created automatically when you\ncreate an app.</li>\n<li><a href="./?doc=api-reference#live-credentials">Live credentials</a> are used by\nyour app to authenticate its requests to the <code>/lps</code> resource in the live\nenvironment. Live credentials are managed by Points.</li>\n</ol>\n\n<p>Each set of credentials include a MAC key identifier, a MAC key and a MAC\nalgorithm. The MAC key identifier uniquely identifies the MAC key. The MAC key\nidentifier is sent with each request to tell the server which MAC key was used\nto sign the request. The MAC key is the shared secret key. It should never be\nshared with anyone or transmitted in any request. Keep this key secure as you\nwould any private key. Finally, the MAC algorithm describes the algorithm used\nto create the signature. It is always set to <code>HMAC-SHA1</code>.</p>\n\n<pre><code>{\n  "macKeyIdentifier": "97ee420faaa343d4a04b7378b319b48b",\n  "macKey": "NyWslT0Oe7ZNJynyUIwg-SRj3A44DD_lrH6_-dwZ6E4",\n  "macAlgorithm": "HMAC-SHA1"\n}\n</code></pre>\n\n<p>NOTE: The MAC key is <a href="http://tools.ietf.org/html/rfc4648">Base64</a> encoded using\na URL-safe alphabet, which substitutes <code>-</code> instead of <code>+</code> and <code>_</code> instead of <code>/</code>\nin the standard Base64 alphabet. TheMAC key also may not contain padding\n(represented with the <code>=</code> character). Prior to using the MAC key, decode it from\nBase64.</p>\n\n<h3>The Authorization Header</h3>\n\n<p>Except when creating an account, all requests to the platform must include an\nauthorization header. The authorization header includes the authorization type\n“MAC” and the following five fields:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Field</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>id</td>\n      <td>The MAC key identifier that uniquely identifies the MAC key used to generated the MAC signature.</td>\n    </tr>\n    <tr>\n      <td>ts</td>\n      <td>An integer timestamp equal to the number of seconds since January 1, 1970 00:00:00 UTC. This is also known as POSIX time or Unix time. Requests are only valid within 30 seconds of the timestamp.</td>\n    </tr>\n    <tr>\n      <td>nonce</td>\n      <td>An arbitrary string that must be different for each request in a 30 second window with the same MAC key identifier. Used to prevent replay attacks.</td>\n    </tr>\n    <tr>\n      <td>ext</td>\n      <td>The extension string is used to verify the contents of the request. It is an empty string for GET and DELETE request. For PUT and POST requests, concatenate the value of the Content-Type header (e.g. “application/json”) with the request body and hash it with SHA1.</td>\n    </tr>\n    <tr>\n      <td>mac</td>\n      <td>The MAC signature for this request. The MAC signature is a Base64 encoded string that is generated by the HMAC-SHA1 algorithm, the MAC key, and the normalized request string. This process is described in the next section.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Note that the MAC key is not included in the authorization header. This key is a\nsecret and should not be included in any request. Here is an example of an\nauthorization header:</p>\n\n<pre><code>Authorization: MAC id="97ee420faaa343d4a04b7378b319b48b",\n                   ts="1379541939",\n                   nonce="OK3HY80lkQ0=",\n                   ext="",\n                   mac="EmYShgBbKjp7XB3gbZq9e0zZy+8="\n</code></pre>\n\n<p>When this authorization header is provided in requests to protected resources,\nthe LCP authenticates the request using the following steps:</p>\n\n<ol>\n<li>Checks that the timestamp is within 30 seconds of the current time.</li>\n<li>Checks that the nonce has not been used in a previous request with the same\nMAC key identifier in the 30 second window.</li>\n<li>Checks the MAC signature by using the same process as the client. Using the\nMAC key that corresponds to the MAC key identifier and the request details,\nthe LCP generates a MAC signature for this request and compares it to the one\nthat was passed in the authorization header. </li>\n<li>Generates the extension string and verifies that it matches the string provided in the authorization header.</li>\n</ol>\n\n<p>If all of these conditions are met the request is authenticated.</p>\n\n<h3>Generating the MAC Signature</h3>\n\n<p>The MAC signature is generated using the MAC key and a normalized request string\nthat contains the details of the request. The normalized request string is\nassembled as follows (<code>\\n</code> indicates a new line character at the end of every\nline):</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Format</th>\n      <th>GET Example</th>\n      <th>POST Example</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\n        Timestamp\\n<br>\n        Nonce\\n<br>\n        HTTP Method (all caps)\\n<br>\n        Path\\n<br>\n        Hostname\\n<br>\n        Port\\n<br>\n        Extension\\n<br>\n      </td>\n      <td>\n        1377721336\\n<br>\n        4FvtoumTybo=\\n<br>\n        GET\\n<br>\n        /v1/apps/\\n<br>\n        lcp.points.com\\n<br>\n        443\\n<br>\n        \\n<br>\n      </td>\n      <td>\n        1377724146\\n<br>\n        u8BNUfE5Gu8=\\n<br>\n        POST\\n<br>\n        /v1/apps/\\n<br>\n        lcp.points.com\\n<br>\n        443\\n<br>\n        a9d46382c97bd4b0475b5b152dddaf2d61c0a30d\\n<br>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<ul>\n<li><strong>Timestamp:</strong> The number of seconds since January 1, 1970 00:00:00 UTC. This\nis also known as POSIX time or Unix time. Requests are only valid within 30\nseconds of the timestamp.</li>\n<li><strong>Nonce:</strong> An arbitrary string that must be different for each request in a 30\nsecond window with the same MAC ID.</li>\n<li><strong>HTTP Method:</strong> One of GET, PUT, POST, or DELETE (must be uppercase).</li>\n<li><strong>Path:</strong> The path to the resource on the server. Starts with the slash after\nthe hostname/port in the URI.</li>\n<li><strong>Hostname:</strong> The hostname of the server in the HTTP request. Do not include\nthe protocol (<code>https://</code>), port or path.</li>\n<li><strong>Port:</strong> The port for the HTTP request. Use 443 for HTTPS.</li>\n<li><strong>Extension:</strong> Blank for GET and DELETE request. For PUT and POST requests,\nconcatenate the value of the Content-Type header (e.g. <code>application/json</code>)\nwith the request body and hash it with SHA1.</li>\n</ul>\n\n<p>This normalized request string and the MAC key are fed into the HMAC-SHA1\nalgorithm to obtained the binary MAC signature. The binary signature is\n<a href="http://tools.ietf.org/html/rfc4648">Base64</a> encoded for inclusion in the\n<a href="#the-authorization-header">authorization header</a> for the request.</p>\n\n<p>Here is an example of using the HMAC-SHA1 algorithm to generate the signature in Python:</p>\n\n<pre><code>def generate_signature(mac_key, normalized_request_string):\n    """Generate a request\'s MAC given a normalized request string (aka\n    a summary of the key elements of the request and the mac key (shared\n    secret)."""\n\n    import hmac\n    import hashlib\n    import base64\n\n    # Add padding to the MAC key if needed\n    mac_key+= \'=\' * (4 - len(mac_key) % 4)\n\n    # Base64 decode the MAC key using URL-safe alphabet\n    mac_key= base64.urlsafe_b64decode(mac_key)\n\n    # Create the hash\n    hashed = hmac.new(mac_key, normalized_request_string, hashlib.sha1)\n\n    # Base64 encode the result\n    return base64.b64encode(hashed.digest())\n</code></pre>\n\n<h2>Correlation ID</h2>\n\n<p>Every request sent to the LCP is assigned a correlation ID. This value is returned\nin the API response in the <code>PTS-LCP-CID</code> header. When inquiring about a request, send\nthis value to Points to help us find your request as quickly as possible.</p>\n\n<h2>Single Sign-On (SSO)</h2>\n\n<p>There are two ways to validate loyalty program member credentials and obtain account\nbalances: direct MV and SSO MV.</p>\n\n<p><img src="static/images/sso.png" alt="SSO" title="" /></p>\n\n<h3>Direct MV</h3>\n\n<p>Applications perform a member validation against a loyalty program. Applications\n<a href="./?doc=api-reference#create-a-mv">create an MV</a> and provide the member’s\ncredentials. The LCP verifies these credentials with the loyalty program and returns\nthe member’s account balance to the application. This is the simplest solution for\nboth applications and loyalty programs, but requires the application to collect\nmember credentials.</p>\n\n<h3>SSO MV</h3>\n\n<p>Single sign-on doesn’t require the application to collect member credentials and\navoids requiring the member to login with both the loyalty program and the\napplication. If the member is already signed in on the loyalty program’s website and\nthe loyalty program’s website links to the application, the loyalty program can\nprovide the member’s info to the LCP and allow the application to retrieve it without\nsharing any confidential information about the member through the web browser. SSO is\na three step process:</p>\n\n<ol>\n<li>The loyalty program <a href="./?doc=api-reference#create-a-mv-delegate">creates an MV delegate</a>\non the LCP. The loyalty program provides the member info needed to create an MV and\n"delegates" the MV to the application so that the application has permission to access\nthe MV. The LCP creates the MV and returns the MV URL to the loyalty program.</li>\n<li>The loyalty program redirects the user to the application and provides the\napplication with the MV URL. No member information is passed in the redirect. It is\nsecurely stored in the LCP.</li>\n<li>The application <a href="./?doc=api-reference#get-a-mv">gets the MV</a> from the LCP using the MV\nURL to securely obtain information about the member and perform transactions.\nAuthenticating factors like the member’s password are not shared with the application.</li>\n</ol>\n\n<p>To see a reference implementation of this, please proceed to the <a href="https://github.com/Points/Loyalty-Commerce-Platform/tree/master/samples/java/sso-reference-implementation">LCP Samples</a>.</p>\n\n<h2>Real-time vs Batch</h2>\n\n<p>Moving points in or out of loyalty accounts can happen either in real-time or in a\nperiodic batch process. The process used depends on the loyalty program. Applications\nshould be built to handle both cases so they can work with any loyalty program. Even\nwhen using a single loyalty program, applications should test both processes in\nsandbox mode in case the loyalty program changes their process in the future.</p>\n\n<p><img src="static/images/batch.png" alt="Batch" title="" /></p>\n\n<h3>Real-time</h3>\n\n<p>Most loyalty programs process debits and credits in real-time. When applications\ncreate debits or credits, the LCP forwards the request to the loyalty program and the\nloyalty program processes the request immediately. The LCP tells the application\nwhether the debit or credit succeeded.</p>\n\n<h3>Batch</h3>\n\n<p>A few loyalty programs process debits and/or credits in a batch process. When the LCP\nreceives a request, it returns a status of pending and queues the request.\nPeriodically, the LCP sends the queued requests to the loyalty program for processing\n(this happens once a day for most LPs). Some time later (typically within 24 hours),\nthe LP returns the result of all the debits and credits in the batch. The application\nshould periodically poll pending debits or credits to determine their result.</p>\n\n<h2>Using Orders</h2>\n\n<p>All transactions must be part of an order for them to appear in the order search\nsupport tool and the transaction reports in the <a href="https://admin.lcp.points.com/">LCP\nAdmin</a> console. An order is a composite transaction\nthat associates multiple primitive transactions together. Primitive transactions\ninclude MVs, debits, and credits. The order contains details about the composite\ntransaction and its fulfillment history. Additional metadata about the order can also\nbe included in the data section.</p>\n\n<p>There are six steps for using orders:</p>\n\n<ol>\n<li>Create an MV</li>\n<li>Create an order</li>\n<li>Add the MV to the order</li>\n<li>Create the debit or credit</li>\n<li>Update the status of the order</li>\n<li>Search for updated orders</li>\n</ol>\n\n<h3>Create an MV</h3>\n\n<p>The first step is to <a href="./?doc=api-reference#create-a-mv">create a member validation\n(MV)</a> to validate the member\'s credentials. Let\'s\ncreate a sandbox MV for Flying Blue like we did in the <a href="./#perform-a-member-validation-mv-">LCP Getting Started\nGuide</a>. Use your application\'s sandbox\ncredentials to sign the request.</p>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "identifyingFactors": {\n    "memberId": "2202"\n  },\n  "authenticatingFactors": {\n    "password": "PASSWORD"\n  }\n}\n</code></pre>\n\n<p>If the member credentials are correct, you\'ll receive the member\'s balance:</p>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 100000,\n  "createdAt": "2014-02-26T17:46:00.000000Z",\n  "identifyingFactors": {\n    "memberId": "2202"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-02-26T17:46:00.000000Z"\n}\n</code></pre>\n\n<h3>Create an Order</h3>\n\n<p>After the user has successfully validated their credentials, you can <a href="./?doc=api-reference#create-an-order">create an\norder</a> for them. The order type can be either\nEXCHANGE_CREDIT for credit orders or REDEEM_DEBIT for debit orders. Contact Points to\ndetermine which order type you should use.</p>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/orders/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "2202", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT"\n}\n</code></pre>\n\n<p>The order is created with the order details. The order confirmation number can be\nprovided to the user in case they need to inquire about their order later. The order\nstatus is set to "initial".</p>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "2202", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "initial",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:47:00.000000Z",\n  "updates": []\n}\n</code></pre>\n\n<h3>Add the MV to the Order</h3>\n\n<p>The MV you created in the first step needs to be associated with the new order you just\ncreated. To do that, <a href="./?doc=api-reference#update-a-mv">PATCH the MV</a> with a link to\nthe order:</p>\n\n<pre><code>PATCH https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "order": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0"\n}\n</code></pre>\n\n<p>The updated MV is returned in the response:</p>\n\n<pre><code>200 OK\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "authenticatingFactors": {\n    "password": "*****"\n  },\n  "balance": 100000,\n  "createdAt": "2014-02-26T17:46:00.000000Z",\n  "identifyingFactors": {\n    "memberId": "2202"\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6",\n  "order": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0",\n  "status": "success",\n  "type": "memberValidation",\n  "updatedAt": "2014-02-26T17:47:30.000000Z"\n}\n</code></pre>\n\n<h3>Create the Debit or Credit</h3>\n\n<p>Now you can add (credit) or remove (debit) points from the member\'s account. In this\nexample, we\'ll <a href="./?doc=api-reference#create-a-credit">create a credit</a> to add 2000\npoints to the member\'s account:</p>\n\n<pre><code>POST https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "amount": 2000,\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n}\n</code></pre>\n\n<p>The credit is automatically added to the same order as the MV. The credit status can\nbe success, failure, systemError or pending. Failure means that the LP rejected the\nrequest. A system error means there was a problem communicating with the LP. Points\nwill investigate system errors to determine if the transaction went through. Pending\nmeans the credit will be sent in a nightly batch file to the LP and it will be\nupdated later with the result. This credit came back successful:</p>\n\n<pre><code>201 CREATED\nlocation: https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/d38a9ecf-0863-4a7f-81d6-0efaf15a4425\n{\n  "amount": 2000,\n  "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "createdAt": "2014-02-26T17:49:00.000000Z",\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/d38a9ecf-0863-4a7f-81d6-0efaf15a4425"\n    }\n  },\n  "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6",\n  "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54",\n  "order": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0",\n  "status": "success",\n  "transactionId": "15786560",\n  "type": "credit",\n  "updatedAt": "2014-02-26T17:49:00.000000Z"\n}\n</code></pre>\n\n<h3>Update the Status of the Order</h3>\n\n<p>The next step is to <a href="./?doc=api-reference#update-an-order">update the order</a> with its\nstatus. Update the order status based on the status of the debit or credit:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Debit/Credit Status</th>\n      <th>Order Status</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>success</td>\n      <td>complete</td>\n    </tr>\n    <tr>\n      <td>failure</td>\n      <td>debitFailed/creditFailed</td>\n    </tr>\n    <tr>\n      <td>systemError</td>\n      <td>debitError/creditError</td>\n    </tr>\n    <tr>\n      <td>pending</td>\n      <td>debitPending/creditPending</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>In this case, the credit status is "success" so let’s update the order status to\n"complete":</p>\n\n<pre><code>PATCH https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n{\n  "status": "complete"\n}\n</code></pre>\n\n<p>The order with the updated status is returned. Note that the "updates" section of the\norder includes the order fulfillment history including the MV and the credit.</p>\n\n<pre><code>200 OK\n{\n  "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n  "confirmationNumber": "3902-2266-8404-8538-1721",\n  "createdAt": "2014-02-26T17:47:00.000000Z",\n  "data": {\n    "clientIpAddress": "127.0.0.1", \n    "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n    "language": "en-US", \n    "orderDetails": {\n      "basePoints": 2000, \n      "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6"\n    }, \n    "user": {\n      "email": "jdoe@example.com",\n      "firstName": "John", \n      "lastName": "Doe", \n      "memberId": "2202", \n      "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n    }\n  },\n  "links": {\n    "self": {\n      "href": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0"\n    }\n  },\n  "orderType": "EXCHANGE_CREDIT",\n  "status": "complete",\n  "type": "order",\n  "updatedAt": "2014-02-26T17:50:00.000000Z",\n  "updates": [\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54",\n      "status": "success",\n      "type": "memberValidation",\n      "updatedAt": "2014-02-26T17:47:30.000000Z"\n    },\n    {\n      "resource": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/d38a9ecf-0863-4a7f-81d6-0efaf15a4425",\n      "status": "success",\n      "type": "credit",\n      "updatedAt": "2014-02-26T17:49:00.000000Z"\n    }\n  ]\n}\n</code></pre>\n\n<h3>Search for Updated Orders</h3>\n\n<p>Orders can be updated at a later time for the following reasons:</p>\n\n<ul>\n<li>A pending debit or credit succeeded or failed</li>\n<li>A debit or credit with a status of systemError has been investigated and updated to\nsuccess or failure</li>\n<li>The debit or credit has been reversed and the points have been added back to or removed\nfrom the user\'s account</li>\n</ul>\n\n<p>If any of these events happen, the order will have a new entry in its "updates"\nsection describing the change. This section is append only so old entries are not\nreplaced, which allows you to see the order fulfillment history. When the order is\nupdated, its status changes to "statusPending" indicating you need to recalculate the\nstatus of the order. Periodically, you should <a href="./?doc=api-reference#list-all-orders">search for\norders</a> with a status of "statusPending" and\nupdate their status:</p>\n\n<pre><code>GET https://sandbox.lcp.points.com/v1/search/orders/?q=status:statusPending\nAuthorization: MAC id="...", ts="...", nonce="...", ext="...", mac="..."\n</code></pre>\n\n<p>Here is an order where the batch credit was updated from "pending" to "success". The\norder status needs to be updated to "complete".</p>\n\n<pre><code>200 OK\n{\n  "orders" : [\n    {\n      "application": "https://sandbox.lcp.points.com/v1/apps/3ac20648-bce1-4385-9725-83ba3a2161cc",\n      "confirmationNumber": "3902-2266-8404-8538-1721",\n      "createdAt": "2014-02-26T17:47:00.000000Z",\n      "data": {\n        "clientIpAddress": "127.0.0.1", \n        "clientUserAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0", \n        "language": "en-US", \n        "orderDetails": {\n          "basePoints": 2000, \n          "loyaltyProgram": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6"\n        }, \n        "user": {\n          "email": "jdoe@example.com",\n          "firstName": "John", \n          "lastName": "Doe", \n          "memberId": "2202", \n          "memberValidation": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54"\n        }\n      },\n      "links": {\n        "self": {\n          "href": "https://sandbox.lcp.points.com/v1/orders/12f5a924-1126-4e0c-900a-0a103f4146c0"\n        }\n      },\n      "orderType": "EXCHANGE_CREDIT",\n      "status": "statusPending",\n      "type": "order",\n      "updatedAt": "2014-02-26T17:50:00.000000Z",\n      "updates": [\n        {\n          "resource": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/mvs/09651217-c154-4bcb-853f-cdf379ad7e54",\n          "status": "success",\n          "type": "memberValidation",\n          "updatedAt": "2014-02-26T17:47:30.000000Z"\n        },\n        {\n          "resource": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/d38a9ecf-0863-4a7f-81d6-0efaf15a4425",\n          "status": "pending",\n          "type": "credit",\n          "updatedAt": "2014-02-26T17:49:00.000000Z"\n        },\n        {\n          "resource": "https://sandbox.lcp.points.com/v1/lps/3b6a77e6-cb40-4b28-a146-341c5862fab6/credits/d38a9ecf-0863-4a7f-81d6-0efaf15a4425",\n          "status": "success",\n          "type": "credit",\n          "updatedAt": "2014-02-27T06:00:00.000000Z"\n        }\n      ]\n    },\n    ...\n  ]\n}\n</code></pre>\n\n<h2>HTTP Status Codes</h2>\n\n<p>HTTP status codes are used to indicate success or failure. Status codes in the\n<code>200s</code> indicate the request was successful. Status codes in the <code>400s</code> indicate\nclient errors. Status codes in the <code>500s</code> indicate server errors. Details of\nthe success or failure are contained in the body of the response.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>HTTP Status Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>200 OK</td>\n      <td>The request completed successfully. The resource is contained in the body of the response.</td>\n    </tr>\n    <tr>\n      <td>201 Created</td>\n      <td>Request to create a resource completed successful. The URI of the created resource is included in the Location header in the response.</td>\n    </tr>\n    <tr>\n      <td>204 No Content</td>\n      <td>The request completed successfully with no content in the body of the message. Usually a response from a request to delete a resource.</td>\n    </tr>\n    <tr>\n      <td>400 Bad Request</td>\n      <td>The data provided in the request has incorrect. Check the JSON error response for details.</td>\n    </tr>\n    <tr>\n      <td>401 Unauthorized</td>\n      <td>Either the authorization header was not provided or was invalid.</td>\n    </tr>\n    <tr>\n      <td>404 Not Found</td>\n      <td>The requested resource was not found or the current user does not have permission to access it.</td>\n    </tr>\n    <tr>\n      <td>415 Unsupported Media Type</td>\n      <td>Returned if the request provided an unsupported content type. Only application/json is supported.</td>\n    </tr>\n    <tr>\n      <td>422 Unprocessable Entity</td>\n      <td>The data provided in the request is valid, but the request could not be completed for another reason. Check the JSON error response for details.</td>\n    </tr>\n    <tr>\n      <td>500 Internal Server Error</td>\n      <td>The server encountered an unexpected error.</td>\n    </tr>\n    <tr>\n      <td>502 Bad Gateway</td>\n      <td>An external upstream service issued an invalid response.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2>Errors</h2>\n\n<p>When the HTTP status code indicates a failure, the response includes a JSON\ndocument that lists the errors in a predictable format. The JSON contains a hash\ncalled “errors” that is an array of the errors encountered in the request. Here\nis an example of an error response:</p>\n\n<pre><code>{\n  "errors": [\n    {\n      "code": "MISSING_FIELD",\n      "description": "\'name\' is required.",\n      "field": "name"\n    },\n    {\n      "code": "MISSING_FIELD",\n      "description": "\'description\' is required.",\n      "field": "description"\n    }\n  ]\n}\n</code></pre>\n\n<p>Each error array element contains the following fields:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Error Field</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>code</td>\n      <td>A standard code describing the error. You can use this code to programmatically handle the error and take appropriate action. See below for a list of standard error codes.</td>\n    </tr>\n    <tr>\n      <td>description</td>\n      <td>A description of the error that further explains the error that can be displayed to the end-user</td>\n    </tr>\n    <tr>\n      <td>field</td>\n      <td>The name of the field in the request that caused the error (if applicable).</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Here is a list of possible error codes that the LCP may return:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Error Code</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>BAD_REQUEST</td>\n      <td>The browser (or proxy) sent a request that this server could not understand.</td>\n    </tr>\n    <tr>\n      <td>ELEMENTS_NOT_UNIQUE</td>\n      <td>The array requires that all elements are unique and it had duplicate items.</td>\n    </tr>\n    <tr>\n      <td>FORBIDDEN_LAST_CREDENTIALS</td>\n      <td>Unable to delete last set of credentials.</td>\n    </tr>\n    <tr>\n      <td>INCORRECT_TYPE</td>\n      <td>The value provided is of incorrect type. For example, a string was provided when an integer is required.</td>\n    </tr>\n    <tr>\n      <td>INELIGIBLE</td>\n      <td>The member is not eligible to perform this transaction.</td>\n    </tr>\n    <tr>\n      <td>INTERNAL_SERVER_ERROR</td>\n      <td>The server encountered an unexpected error.</td>\n    </tr>\n    <tr>\n      <td>INVALID_UPSTREAM_RESPONSE</td>\n      <td>An external upstream service issued an invalid response.</td>\n    </tr>\n    <tr>\n      <td>INVALID_VALUE</td>\n      <td>The value provided is not allowed. For example, the requested debit amount is greater than the balance on the member validation.</td>\n    </tr>\n    <tr>\n      <td>MAXIMUM_ATTEMPTS_EXCEEDED</td>\n      <td>The maximum number of incorrect MV attempts has been exceeded for this user.</td>\n    </tr>\n    <tr>\n      <td>MISSING_FIELD</td>\n      <td>A required field was not provided in the body of the request. The “field” property of the returned error object contains which required field was not provided.</td>\n    </tr>\n    <tr>\n      <td>MISSING_REPRESENTATION</td>\n      <td>The request expected a JSON object to be provided in the body of the request and none was provided.</td>\n    </tr>\n    <tr>\n      <td>MV_ALREADY_USED</td>\n      <td>The member validation has already been used with another transaction. Member validations can only be used for one transaction.</td>\n    </tr>\n    <tr>\n      <td>MV_LP_MISMATCH</td>\n      <td>The member validation provided was created for a different loyalty program.</td>\n    </tr>\n    <tr>\n      <td>NOT_FOUND</td>\n      <td>The requested URL was not found on the server.  If you entered the URL manually please check your spelling and try again.</td>\n    </tr>\n    <tr>\n      <td>NO_ENUM_MATCH</td>\n      <td>The enum field did not match any of the possible values.</td>\n    </tr>\n    <tr>\n      <td>NO_MATCH</td>\n      <td>A field provided in the request did not match the regular expression used to validate the field. The field name and regular expression is provided in the description of the error message.</td>\n    </tr>\n    <tr>\n      <td>TOO_FEW_ITEMS</td>\n      <td>The array did not have the minimum number of items.</td>\n    </tr>\n    <tr>\n      <td>UNAUTHORIZED</td>\n      <td>The server could not verify that you are authorized to access the URL requested.  You either supplied the wrong credentials (e.g. a bad password), or your browser doesn\'t understand how to supply the credentials required.</td>\n    </tr>\n    <tr>\n      <td>UNEXPECTED_PROPERTY</td>\n      <td>A JSON field was provided in the body of the request that is not supported. The “field” property of the returned error object contains the field that is not supported.</td>\n    </tr>\n    <tr>\n      <td>UNKNOWN_MEMBER</td>\n      <td>The loyalty program couldn\'t find a member with the given credentials.</td>\n    </tr>\n    <tr>\n      <td>UNSUPPORTED_MEDIA_TYPE</td>\n      <td>The server does not support the media type transmitted in the request. Only Content-Type: application/json is supported.</td>\n    </tr>\n    <tr>\n      <td>VALUE_NOT_UNIQUE</td>\n      <td>One of the fields you provided must be unique but the data provided already exists in the system.</td>\n    </tr>\n    <tr>\n      <td>VALUE_OUT_OF_RANGE</td>\n      <td>The number provided is outside of the range of valid input for the field. For example, a negative integer was provided when the number must be positive.</td>\n    </tr>\n    <tr>\n      <td>VALUE_TOO_LONG</td>\n      <td>A string in the JSON document exceeds the maximum length supported for this field.</td>\n    </tr>\n    <tr>\n      <td>VALUE_TOO_SHORT</td>\n      <td>A string in the JSON document does not meet the minimum length requirement for this field.</td>\n    </tr>\n  </tbody>\n</table>\n\n<h2>Whitespace</h2>\n\n<p>The LCP does not accept leading or trailing whitespace in any field in a JSON\ndocument. For example, if a user enters their first name as “John “ and your\napplication passes this onto the LCP in a member validation, the LCP will reject\nthis request. To avoid this type of error, always remove leading and trailing\nwhitespace from user input before passing it onto the LCP.</p>\n\n<h2>Links</h2>\n\n<p>JSON response documents that are returned by the LCP contain a “links” property.\nThis property contains URLs that help you consume further resources within the\nLCP REST API. You should not create your own links to access and platform and\ninstead should follow the links provided. This allows your code to be less\ndependent on the implementation details of the API.</p>\n\n<p>The types of links provided are:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Link Type</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>self</td>\n      <td>A link to the current resource.</td>\n    </tr>\n    <tr>\n      <td>friendly</td>\n      <td>A more user-friendly link to the current resource.</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>Each link has an href property that contains the link. For example:</p>\n\n<pre><code>{\n  "links": {\n    "self": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;id&gt;"\n    },\n    "friendly": {\n      "href": "https://lcp.points.com/v1/accounts/&lt;email&gt;"\n    }\n  }\n}\n</code></pre>';
}),function(){define("modules/load-markdown-documents",["mdown!../../documents/api/account-credentials-example.md","mdown!../../documents/api/account-credentials.md","mdown!../../documents/api/account-permissions-example.md","mdown!../../documents/api/account-permissions.md","mdown!../../documents/api/accounts-example.md","mdown!../../documents/api/accounts.md","mdown!../../documents/api/apps-example.md","mdown!../../documents/api/apps.md","mdown!../../documents/api/create-a-credit-example.md","mdown!../../documents/api/create-a-credit.md","mdown!../../documents/api/create-a-debit-example.md","mdown!../../documents/api/create-a-debit.md","mdown!../../documents/api/create-a-mv-delegate-example.md","mdown!../../documents/api/create-a-mv-delegate.md","mdown!../../documents/api/create-a-mv-example.md","mdown!../../documents/api/create-a-mv.md","mdown!../../documents/api/create-a-report-example.md","mdown!../../documents/api/create-a-report-instance-example.md","mdown!../../documents/api/create-a-report-instance.md","mdown!../../documents/api/create-a-report.md","mdown!../../documents/api/create-account-credentials-example.md","mdown!../../documents/api/create-account-credentials.md","mdown!../../documents/api/create-an-app-example.md","mdown!../../documents/api/create-an-app.md","mdown!../../documents/api/create-an-order-example.md","mdown!../../documents/api/create-an-order.md","mdown!../../documents/api/create-sandbox-permissions-example.md","mdown!../../documents/api/create-sandbox-permissions.md","mdown!../../documents/api/credits-example.md","mdown!../../documents/api/credits.md","mdown!../../documents/api/debits-example.md","mdown!../../documents/api/debits.md","mdown!../../documents/api/delete-account-credentials-example.md","mdown!../../documents/api/delete-account-credentials.md","mdown!../../documents/api/delete-sandbox-permissions-example.md","mdown!../../documents/api/delete-sandbox-permissions.md","mdown!../../documents/api/documentation-overview.md","mdown!../../documents/api/get-a-credit-example.md","mdown!../../documents/api/get-a-credit.md","mdown!../../documents/api/get-a-debit-example.md","mdown!../../documents/api/get-a-debit.md","mdown!../../documents/api/get-a-mv-delegate-example.md","mdown!../../documents/api/get-a-mv-delegate.md","mdown!../../documents/api/get-a-mv-example.md","mdown!../../documents/api/get-a-mv.md","mdown!../../documents/api/get-a-report-example.md","mdown!../../documents/api/get-a-report-instance-example.md","mdown!../../documents/api/get-a-report-instance.md","mdown!../../documents/api/get-a-report.md","mdown!../../documents/api/get-account-credentials-example.md","mdown!../../documents/api/get-account-credentials.md","mdown!../../documents/api/get-account-permissions-example.md","mdown!../../documents/api/get-account-permissions.md","mdown!../../documents/api/get-an-account-example.md","mdown!../../documents/api/get-an-account.md","mdown!../../documents/api/get-an-app-by-mac-example.md","mdown!../../documents/api/get-an-app-by-mac.md","mdown!../../documents/api/get-an-app-example.md","mdown!../../documents/api/get-an-app.md","mdown!../../documents/api/get-an-lp-example.md","mdown!../../documents/api/get-an-lp.md","mdown!../../documents/api/get-an-mv-request-schema-example.md","mdown!../../documents/api/get-an-mv-request-schema.md","mdown!../../documents/api/get-an-order-example.md","mdown!../../documents/api/get-an-order.md","mdown!../../documents/api/get-live-credentials-example.md","mdown!../../documents/api/get-live-credentials.md","mdown!../../documents/api/get-live-permissions-example.md","mdown!../../documents/api/get-live-permissions.md","mdown!../../documents/api/get-report-instance-data-example.md","mdown!../../documents/api/get-report-instance-data.md","mdown!../../documents/api/get-sandbox-credentials-example.md","mdown!../../documents/api/get-sandbox-credentials.md","mdown!../../documents/api/get-sandbox-mvs-example.md","mdown!../../documents/api/get-sandbox-mvs.md","mdown!../../documents/api/get-sandbox-permissions-example.md","mdown!../../documents/api/get-sandbox-permissions.md","mdown!../../documents/api/list-all-apps-example.md","mdown!../../documents/api/list-all-apps.md","mdown!../../documents/api/list-all-credits-example.md","mdown!../../documents/api/list-all-credits.md","mdown!../../documents/api/list-all-debits-example.md","mdown!../../documents/api/list-all-debits.md","mdown!../../documents/api/list-all-live-permissions-example.md","mdown!../../documents/api/list-all-live-permissions.md","mdown!../../documents/api/list-all-lps-example.md","mdown!../../documents/api/list-all-lps.md","mdown!../../documents/api/list-all-orders-example.md","mdown!../../documents/api/list-all-orders.md","mdown!../../documents/api/list-all-report-instances-example.md","mdown!../../documents/api/list-all-report-instances.md","mdown!../../documents/api/list-all-reports-example.md","mdown!../../documents/api/list-all-reports.md","mdown!../../documents/api/list-all-sandbox-permissions-example.md","mdown!../../documents/api/list-all-sandbox-permissions.md","mdown!../../documents/api/live-credentials-example.md","mdown!../../documents/api/live-credentials.md","mdown!../../documents/api/live-permissions-example.md","mdown!../../documents/api/live-permissions.md","mdown!../../documents/api/loyalty-programs-example.md","mdown!../../documents/api/loyalty-programs.md","mdown!../../documents/api/member-validations-example.md","mdown!../../documents/api/member-validations.md","mdown!../../documents/api/mv-delegates-example.md","mdown!../../documents/api/mv-delegates.md","mdown!../../documents/api/mv-request-schema-example.md","mdown!../../documents/api/mv-request-schema.md","mdown!../../documents/api/orders-example.md","mdown!../../documents/api/orders.md","mdown!../../documents/api/release-notes.md","mdown!../../documents/api/report-instances-example.md","mdown!../../documents/api/report-instances.md","mdown!../../documents/api/reports-example.md","mdown!../../documents/api/reports.md","mdown!../../documents/api/sandbox-credentials-example.md","mdown!../../documents/api/sandbox-credentials.md","mdown!../../documents/api/sandbox-mvs-example.md","mdown!../../documents/api/sandbox-mvs.md","mdown!../../documents/api/sandbox-permissions-example.md","mdown!../../documents/api/sandbox-permissions.md","mdown!../../documents/api/update-a-credit-example.md","mdown!../../documents/api/update-a-credit.md","mdown!../../documents/api/update-a-debit-example.md","mdown!../../documents/api/update-a-debit.md","mdown!../../documents/api/update-a-mv-example.md","mdown!../../documents/api/update-a-mv.md","mdown!../../documents/api/update-a-report-example.md","mdown!../../documents/api/update-a-report.md","mdown!../../documents/api/update-account-permissions-example.md","mdown!../../documents/api/update-account-permissions.md","mdown!../../documents/api/update-an-account-example.md","mdown!../../documents/api/update-an-account.md","mdown!../../documents/api/update-an-order-example.md","mdown!../../documents/api/update-an-order.md","mdown!../../documents/api/update-sandbox-permissions-example.md","mdown!../../documents/api/update-sandbox-permissions.md","mdown!../../documents/getting-started.md","mdown!../../documents/lp-reference.md","mdown!../../documents/reference-manual.md"],function(e,t,n,r,a,i,o,s,d,p,l,c,h,u,m,f,g,y,b,v,x,w,T,A,C,P,_,S,k,E,N,I,L,M,R,O,q,D,H,j,V,F,U,z,B,G,$,Z,K,W,Y,X,J,Q,ee,te,ne,re,ae,ie,oe,se,de,pe,le,ce,he,ue,me,fe,ge,ye,be,ve,xe,we,Te,Ae,Ce,Pe,_e,Se,ke,Ee,Ne,Ie,Le,Me,Re,Oe,qe,De,He,je,Ve,Fe,Ue,ze,Be,Ge,$e,Ze,Ke,We,Ye,Xe,Je,Qe,et,tt,nt,rt,at,it,ot,st,dt,pt,lt,ct,ht,ut,mt,ft,gt,yt,bt,vt,xt,wt,Tt,At,Ct,Pt,_t,St,kt,Et,Nt){var It;return It={account_credentials_example:e,account_credentials:t,account_permissions_example:n,account_permissions:r,accounts_example:a,accounts:i,apps_example:o,apps:s,create_a_credit_example:d,create_a_credit:p,create_a_debit_example:l,create_a_debit:c,create_a_mv_delegate_example:h,create_a_mv_delegate:u,create_a_mv_example:m,create_a_mv:f,create_a_report_example:g,create_a_report_instance_example:y,create_a_report_instance:b,create_a_report:v,create_account_credentials_example:x,create_account_credentials:w,create_an_app_example:T,create_an_app:A,create_an_order_example:C,create_an_order:P,create_sandbox_permissions_example:_,create_sandbox_permissions:S,credits_example:k,credits:E,debits_example:N,debits:I,delete_account_credentials_example:L,delete_account_credentials:M,delete_sandbox_permissions_example:R,delete_sandbox_permissions:O,documentation_overview:q,get_a_credit_example:D,get_a_credit:H,get_a_debit_example:j,get_a_debit:V,get_a_mv_delegate_example:F,get_a_mv_delegate:U,get_a_mv_example:z,get_a_mv:B,get_a_report_example:G,get_a_report_instance_example:$,get_a_report_instance:Z,get_a_report:K,get_account_credentials_example:W,get_account_credentials:Y,get_account_permissions_example:X,get_account_permissions:J,get_an_account_example:Q,get_an_account:ee,get_an_app_by_mac_example:te,get_an_app_by_mac:ne,get_an_app_example:re,get_an_app:ae,get_an_lp_example:ie,get_an_lp:oe,get_an_mv_request_schema_example:se,get_an_mv_request_schema:de,get_an_order_example:pe,get_an_order:le,get_live_credentials_example:ce,get_live_credentials:he,get_live_permissions_example:ue,get_live_permissions:me,get_report_instance_data_example:fe,get_report_instance_data:ge,get_sandbox_credentials_example:ye,get_sandbox_credentials:be,get_sandbox_mvs_example:ve,get_sandbox_mvs:xe,get_sandbox_permissions_example:we,get_sandbox_permissions:Te,list_all_apps_example:Ae,list_all_apps:Ce,list_all_credits_example:Pe,list_all_credits:_e,list_all_debits_example:Se,list_all_debits:ke,list_all_live_permissions_example:Ee,list_all_live_permissions:Ne,list_all_lps_example:Ie,list_all_lps:Le,list_all_orders_example:Me,list_all_orders:Re,list_all_report_instances_example:Oe,list_all_report_instances:qe,list_all_reports_example:De,list_all_reports:He,list_all_sandbox_permissions_example:je,list_all_sandbox_permissions:Ve,live_credentials_example:Fe,live_credentials:Ue,live_permissions_example:ze,live_permissions:Be,loyalty_programs_example:Ge,loyalty_programs:$e,member_validations_example:Ze,member_validations:Ke,mv_delegates_example:We,mv_delegates:Ye,mv_request_schema_example:Xe,mv_request_schema:Je,orders_example:Qe,orders:et,release_notes:tt,report_instances_example:nt,report_instances:rt,reports_example:at,reports:it,sandbox_credentials_example:ot,sandbox_credentials:st,sandbox_mvs_example:dt,sandbox_mvs:pt,sandbox_permissions_example:lt,sandbox_permissions:ct,update_a_credit_example:ht,update_a_credit:ut,update_a_debit_example:mt,update_a_debit:ft,update_a_mv_example:gt,update_a_mv:yt,update_a_report_example:bt,update_a_report:vt,update_account_permissions_example:xt,update_account_permissions:wt,update_an_account_example:Tt,update_an_account:At,update_an_order_example:Ct,update_an_order:Pt,update_sandbox_permissions_example:_t,update_sandbox_permissions:St,getting_started:kt,lp_reference:Et,reference_manual:Nt}})}.call(this),function(){var e={}.hasOwnProperty,t=function(t,n){function r(){this.constructor=t}for(var a in n)e.call(n,a)&&(t[a]=n[a]);return r.prototype=n.prototype,t.prototype=new r,t.__super__=n.prototype,t};define("modules/api-documentation",["modules/process-documentation","jquery","json!../api-documents.json","hbars!../../templates/navigation","hbars!../../templates/api-section","hbars!../../templates/api-article","modules/load-markdown-documents"],function(e,n,r,a,i,o,s){var d,p;return d=function(e){function d(){return p=d.__super__.constructor.apply(this,arguments)}return t(d,e),d.prototype.md=s,d.prototype.attachArticleAndNav=function(e,t){var r;return""===t?(n(this.elements.nav).append(a(this.oneArticle)),n(this.elements.doc).append(i(this.oneArticle)),n("#section-"+e).append(o(this.oneArticle))):(r=n(this.elements.nav).find('a[href="#'+t+'"]'),0===r.parent().children("ul").length&&r.parent().append("<ul />"),r.parent().find("ul").append(a(this.oneArticle)),n("#section-"+t).append(o(this.oneArticle)))},d.prototype.createArticle=function(e,t,n){var r,a;return r=e.id,a=e.parent,this.oneArticle={id:r,title:e.title,content:t,example:n},this.attachArticleAndNav(r,a)},d.prototype.loadApiDocs=function(){var e=this;return n("body").addClass("api-page"),n("#documentation").html('<div class="dark-bg" />'),n.each(r.articles,function(t,n){var a,i,o,s;return s=n.id.replace(/\-/g,"_"),a=e.md[s],""!==n.exampleId&&(o=n.exampleId.replace(/\-/g,"_"),i=e.md[o]),e.createArticle(n,a,i),t+1===r.articles.length?e.initProcess():void 0})},d}(e)})}.call(this),define("hbars!modules/../../templates/article",["Handlebars"],function(e){return e.template(function(e,t,n,r,a){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,e.helpers),a=a||{};var i,o="",s="function";return o+='<div class="one-document">\n  ',(i=n.content)?i=i.call(t,{hash:{},data:a}):(i=t.content,i=typeof i===s?i.apply(t):i),(i||0===i)&&(o+=i),o+="\n</div>\n"})}),function(){var e={}.hasOwnProperty,t=function(t,n){function r(){this.constructor=t}for(var a in n)e.call(n,a)&&(t[a]=n[a]);return r.prototype=n.prototype,t.prototype=new r,t.__super__=n.prototype,t};define("modules/documentation",["modules/api-documentation","jquery","hbars!../../templates/navigation","hbars!../../templates/article"],function(e,n,r,a){var i,o;return i=function(e){function i(){return o=i.__super__.constructor.apply(this,arguments)}var s;return t(i,e),s=function(e,t){var r,a,i;for(a=n(e).text().replace(/[\. ,#():-]+/g,"-").toLowerCase(),a=a.replace("'",""),r=n(),r.push(e),i=e.nextSibling;i&&!n(i).is(t);)r.push(i),i=i.nextSibling;return"h2"===t?r.wrapAll('<section id="section-'+a+'" class="documents" />'):r.wrapAll('<article class="document" id="'+a+'">')},i.prototype.urlQueryResult=function(e,t){var n,r;return t=t.replace(/[\[]/,"\\[").replace(/[\]]/,"\\]"),n=new RegExp("[\\?&]"+t+"=([^&#]*)"),r=n.exec(e),null!==r?decodeURIComponent(r[1].replace(/\+/g," ")):void 0},i.prototype.buildNav=function(e,t,a){var i;return n(e).is("h2")?n(this.elements.nav).append(r(t)):(i=n('a[href="#'+a+'"]'),0===i.parent().children("ul").length&&i.parent().append("<ul />"),i.parent().find("ul").append(r(t)))},i.prototype.cleanUpAndCreateNav=function(){var e=this;return this.regularArticle.find("h2").each(function(e,t){return s(t,"h2")}),this.regularArticle.find("h2, h3").each(function(e,t){return s(t,"h3")}),this.regularArticle.find("h2, h3").each(function(t,r){var a,i,o,s;return a=n(r).text().replace(/[\. ,#():-]+/g,"-").toLowerCase(),a=a.replace("'",""),s=n(r).text(),i=n(r).parents("section").attr("id").replace("section-",""),o={id:a,title:s},e.buildNav(r,o,i)})},i.prototype.loadDoc=function(e){var t,r;return r=e.replace(/\-/g,"_"),t={content:this.md[r]},this.regularArticle=n(a(t)),this.cleanUpAndCreateNav(),n(this.elements.doc).append(this.regularArticle),this.initProcess()},i.prototype.init=function(){return this.doc=this.urlQueryResult(location.search,"doc"),"api-reference"===this.doc?this.loadApiDocs():this.doc?this.loadDoc(this.doc):this.loadDoc("getting-started")},i}(e)})}.call(this),function(){define("global",["jquery","modules/documentation"],function(e,t){return e(function(){var e;return e=new t({elements:{doc:"#documentation",header:"#header",nav:"#doc-navigation .nav",humans:".for-humans",machines:".for-machines"}}),e.init(),e.scrollSpyController("init"),e.bindHeaderNavEvents(),history.pushState&&e.isMobile!==!0?e.bindPopstate():void 0})})}.call(this),function(){require.config({baseUrl:"/static/scripts/",waitSeconds:30,shim:{"bootstrap.scrollspy":{deps:["jquery"]},"jquery.fixto":{deps:["jquery"]},nprogress:{deps:["jquery"]},Handlebars:{exports:"Handlebars"}},paths:{jquery:"../components/jquery/jquery",Handlebars:"../components/handlebars.js/dist/handlebars",prettify:"../components/google-code-prettify/src/prettify",showdown:"../components/showdown/src/showdown",nprogress:"../components/nprogress/nprogress","jquery.fixto":"../components/fixto/dist/fixto","bootstrap.scrollspy":"../components/bootstrap/js/scrollspy",async:"../components/requirejs-plugins/src/async",json:"../components/requirejs-plugins/src/json",mdown:"../components/requirejs-plugins/src/mdown",text:"../components/requirejs-plugins/lib/text",markdownConverter:"../components/requirejs-plugins/lib/Markdown.Converter",hbars:"../components/requirejs-handlebars/hbars",global:"mediators/global"}}),require(["nprogress"],function(e){return/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)!==!0?(e.configure({showSpinner:!1}),e.start()):$("body").addClass("mobile"),require(["global"],function(t){return e.done()})})}.call(this),define("main",function(){});